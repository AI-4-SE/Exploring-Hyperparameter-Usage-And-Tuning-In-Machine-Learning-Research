{
    "dcp/utils/tensorboard_logger.py": {
        "tensorflow": {
            "FileWriter_17": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "log_dir",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Summary_21": {
                "variable": {
                    "value": "summary",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "[tf.Summary.Value(tag=tag, simple_value=value)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Summary_44": {
                "variable": {
                    "value": "summary",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "img_summaries",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "HistogramProto_54": {
                "variable": {
                    "value": "hist",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Summary_71": {
                "variable": {
                    "value": "summary",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "[tf.Summary.Value(tag=tag, histo=hist)]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/aux_checkpoint.py": {
        "torch": {
            "save_31": {
                "obj": {
                    "value": "check_point_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ],
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, 'best_model_with_aux_fc.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_56": {
                "obj": {
                    "value": "check_point_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ],
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, 'checkpoint_{:0>3d}.pth'.format(index))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/aux_classifier.py": {
        "torch": {
            "BatchNorm2d_12": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_13": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_14": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/aux_trainer.py": {
        "torch": {
            "CrossEntropyLoss_40": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_154": {
                "variable": {
                    "value": "final_fc",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[self.model.bn, self.model.relu, self.model.avg_pool, View(), self.model.fc]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_100": {
                "variable": {
                    "value": "shallow_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.model.conv",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_161": {
                "variable": {
                    "value": "final_fc",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[self.model.avgpool, View(), self.model.fc]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_102": {
                "variable": {
                    "value": "net_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.model.conv1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_107": {
                "variable": {
                    "value": "shallow_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "net_head",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "shallow_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "module",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/auxnet/main.py": {
        "torch": {}
    },
    "dcp/channel_selection/channel_selection.py": {
        "torch": {
            "MSELoss_35": {
                "variable": {
                    "value": "self.criterion_mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_36": {
                "variable": {
                    "value": "self.criterion_softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.original_segment_before_pruned_module",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*original_segment_before_pruned_module",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.pruned_segment_before_pruned_module",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*pruned_segment_before_pruned_module",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "self.pruned_segment_after_pruned_module",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*pruned_segment_after_pruned_module",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "topk_256": {
                "variable": {
                    "value": "(_, max_index)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "grad_fnorm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cum_grad.mul(cum_grad).sum((2, 3)).sqrt().sum(0)",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SGD_306": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "params_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "self.settings.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "self.settings.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "new_net",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "layer",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_87": {
                "variable": {
                    "value": "new_net",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "origin_layer",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/channel_selection/dcp_checkpoint.py": {
        "torch": {
            "save_47": {
                "obj": {
                    "value": "check_point_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ],
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, model_save_name)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_88": {
                "obj": {
                    "value": "check_point_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ],
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, checkpoint_save_name)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/channel_selection/main.py": {
        "torch": {
            "Sequential_284": {
                "variable": {
                    "value": "original_segment",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*original_segment_list",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_285": {
                "variable": {
                    "value": "pruned_segment",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*pruned_segment_list",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/channel_selection/trainer.py": {
        "torch": {
            "CrossEntropyLoss_43": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "pruned_final_fc",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[self.pruned_model.bn, self.pruned_model.relu, self.pruned_model.avg_pool, View(), self.pruned_model.fc]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "net_origin",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.original_model.conv",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "net_pruned",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.pruned_model.conv",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_134": {
                "variable": {
                    "value": "pruned_final_fc",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[self.pruned_model.avgpool, View(), self.pruned_model.fc]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "variable": {
                    "value": "net_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.original_model.conv1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "net_origin",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "net_head",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "net_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.pruned_model.conv1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_76": {
                "variable": {
                    "value": "net_pruned",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "net_head",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_90": {
                "variable": {
                    "value": "net_origin",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "ori_module",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "net_pruned",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "pruned_module",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/checkpoint.py": {
        "torch": {
            "load_57": {
                "variable": {
                    "value": "model_state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "{'cuda:1': 'cuda:0'}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "load_71": {
                "variable": {
                    "value": "self.check_point_params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "save_105": {
                "obj": {
                    "value": "self.check_point_params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(self.save_path, 'checkpoint_{:0>3d}.pth'.format(index))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_120": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ],
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, '{}_best_model.pth'.format(tag))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_122": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ],
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, 'best_model.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_125": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ],
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, '{}_model_{:0>3d}.pth'.format(tag, index))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_127": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ],
                        [
                            "utils.list2sequential(model)",
                            "Call"
                        ],
                        [
                            "model.module",
                            "Attribute"
                        ],
                        [
                            "model.state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.save_path, 'model_{:0>3d}.pth'.format(index))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/dataloader.py": {
        "torch": {}
    },
    "dcp/finetune/main.py": {
        "torch": {}
    },
    "dcp/finetune/trainer.py": {
        "torch": {
            "CrossEntropyLoss_22": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "dcp/mask_conv.py": {
        "torch": {
            "Parameter_25": {
                "variable": {
                    "value": "self.pruned_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "self.weight.clone()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_28": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.pruned_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "self.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_24": {
                "*size": {
                    "value": "self.weight.data.size(1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/model_builder.py": {
        "torch": {
            "randn_16": {
                "variable": {
                    "value": "test_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_23": {
                "variable": {
                    "value": "test_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "224",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "224",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/models/preresnet.py": {
        "torch": {
            "Conv2d_14": {
                "in_channels": {
                    "value": "in_plane",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_plane",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_51": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_plane",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "variable": {
                    "value": "self.relu1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_55": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_plane",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "variable": {
                    "value": "self.relu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_113": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64 * wide_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_114": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_115": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_151": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/models/pruned_preresnet.py": {
        "torch": {
            "Conv2d_14": {
                "in_channels": {
                    "value": "in_plane",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_plane",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_52": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_plane",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "variable": {
                    "value": "self.relu1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_56": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "variable": {
                    "value": "self.relu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_112": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64 * wide_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_113": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_114": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_151": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/models/pruned_resnet.py": {
        "torch": {
            "Conv2d_11": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_27": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_60": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_63": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.pruned_channel_plane",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_118": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_119": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_120": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_125": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_126": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_138": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_150": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_139": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_141": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/models/pruned_vgg.py": {
        "torch": {
            "Linear_21": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_54": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(v - math.floor(v * pruning_rate))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_44": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_46": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_51": {
                "num_features": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(v - math.floor(v * pruning_rate))",
                            "Call"
                        ]
                    ]
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/models/resnet.py": {
        "torch": {
            "Conv2d_19": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_64": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_67": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_68": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_69": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_122": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_123": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_124": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_129": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_130": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_142": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_154": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_143": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_145": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/models/vgg.py": {
        "torch": {
            "Linear_21": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_52": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_44": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_46": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_49": {
                "num_features": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/pruning.py": {
        "torch": {
            "Sequential_264": {
                "variable": {
                    "value": "self.sequential",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*temp_seq",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "variable": {
                    "value": "new_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_weight.size(0)",
                            "Call"
                        ],
                        [
                            "init_weight.size(1)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_weight.size(0)",
                            "Call"
                        ],
                        [
                            "init_weight.size(0)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "old_layer.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "old_layer.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "old_layer.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias_flag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Constant"
                        ],
                        [
                            "False",
                            "Constant"
                        ]
                    ]
                },
                "groups": {
                    "value": "new_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_weight.size(0)",
                            "Call"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "BatchNorm2d_113": {
                "variable": {
                    "value": "new_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "weight.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "PReLU_120": {
                "variable": {
                    "value": "new_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "num_parameters": {
                    "value": "init_weight.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/test/main.py": {
        "torch": {}
    },
    "dcp/test/trainer.py": {
        "torch": {
            "CrossEntropyLoss_22": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "dcp/trainer.py": {
        "torch": {
            "CrossEntropyLoss_37": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "dcp/utils/compute.py": {
        "torch": {
            "no_grad_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "dcp/utils/model_analyse.py": {
        "torch": {}
    },
    "dcp/utils/model_transform.py": {
        "torch": {
            "load_56": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "file_path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_51": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "device_count_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_59": {
                "obj": {
                    "value": "model_state_dict",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model['model'].state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "file_path.replace('.pth', 'state_dict.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_30": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, gpu_list).cuda()",
                            "Call"
                        ],
                        [
                            "list(model.module)",
                            "Call"
                        ],
                        [
                            "list(model)",
                            "Call"
                        ],
                        [
                            "nn.Sequential(*model)",
                            "Call"
                        ],
                        [
                            "torch.load(file_path)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpu_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(range(gpu0, gpu0 + n_gpus))",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_24": {
                "variable": {
                    "value": "model[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "module": {
                    "value": "model[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "gpu_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(range(gpu0, gpu0 + n_gpus))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "dcp/utils/others.py": {
        "torch": {
            "cat_12": {
                "variable": {
                    "value": "data_cat",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(data_cat, data[str(i)].cuda(0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "dcp/utils/sampler.py": {
        "torch": {}
    }
}