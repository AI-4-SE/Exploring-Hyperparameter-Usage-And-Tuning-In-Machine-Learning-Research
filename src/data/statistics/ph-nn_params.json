{
    "PHNetworks/PHOptimizer.py": {
        "tensorflow": {
            "constant_78": {
                "variable": {
                    "value": "self.alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_80": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_81": {
                "variable": {
                    "value": "self.resistive",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "resistive",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_279": {
                "variable": {
                    "value": "momenta",
                    "type": "variable",
                    "possible_values": []
                },
                "sp_a": {
                    "value": "self.M",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "velocity",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "concat_344": {
                "values": {
                    "value": "[tf.reshape(var, [-1, 1]) for var in variables]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "size_358": {
                "variable": {
                    "value": "count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "variable",
                    "type": "variable",
                    "possible_values": [
                        [
                            "variables",
                            "variable"
                        ]
                    ]
                }
            },
            "CallbackList_187": {
                "variable": {
                    "value": "callbacks",
                    "type": "variable",
                    "possible_values": []
                },
                "callbacks": {
                    "value": "callbacks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "callbacks_module.CallbackList(callbacks, add_history=True, add_progbar=True, model=model, verbose=verbose, epochs=epochs, steps=tf.constant(int(sample_cnt / batch_size), dtype='float64'))",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "add_history": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "add_progbar": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "model": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "verbose": {
                    "value": "verbose",
                    "type": "variable",
                    "possible_values": []
                },
                "epochs": {
                    "value": "epochs",
                    "type": "variable",
                    "possible_values": []
                },
                "steps": {
                    "value": "tf.constant(int(sample_cnt / batch_size), dtype='float64')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "range_198": {
                "dtype": {
                    "value": "int64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reshape_344": {
                "tensor": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "size_349": {
                "input": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reshape_359": {
                "tensor": {
                    "value": "values[offset:offset + count]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "variable.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_109": {
                "num_rows": {
                    "value": "param_count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model_param_count(model)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "eye_110": {
                "num_rows": {
                    "value": "param_count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model_param_count(model)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "eye_112": {
                "num_rows": {
                    "value": "param_count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model_param_count(model)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "eye_113": {
                "num_rows": {
                    "value": "param_count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model_param_count(model)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_122": {
                "shape": {
                    "value": "(param_count, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GradientTape_261": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "constant_117": {
                "value": {
                    "value": "1 / (1 + \u0394t * self.resistive / (2 * self.gamma))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "eye_118": {
                "num_rows": {
                    "value": "param_count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model_param_count(model)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_192": {
                "value": {
                    "value": "int(sample_cnt / batch_size)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cast_216": {
                "x": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tensordot_330": {
                "a": {
                    "value": "momenta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sparse.sparse_dense_matmul(self.M, velocity)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "momenta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sparse.sparse_dense_matmul(self.M, velocity)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensordot_329": {
                "a": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_flatten_variables(model.trainable_variables)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_flatten_variables(model.trainable_variables)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensordot_266": {
                "a": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_flatten_variables(model.trainable_variables)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_flatten_variables(model.trainable_variables)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "PHNetworks/verlet_integrator.py": {
        "tensorflow": {
            "Variable_124": {
                "variable": {
                    "value": "self.position",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros((self.dimension, 1), dtype='float64')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_125": {
                "variable": {
                    "value": "self.velocity",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros((self.dimension, 1), dtype='float64')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_126": {
                "variable": {
                    "value": "self.acceleration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros((self.dimension, 1), dtype='float64')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_132": {
                "variable": {
                    "value": "self.gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros((self.dimension, 1), dtype='float64')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_135": {
                "variable": {
                    "value": "self.\u0394t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "eye_137": {
                "variable": {
                    "value": "self._itmb_inv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_rows": {
                    "value": "self.dimension",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_220": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_124": {
                "shape": {
                    "value": "(self.dimension, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_125": {
                "shape": {
                    "value": "(self.dimension, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_126": {
                "shape": {
                    "value": "(self.dimension, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_132": {
                "shape": {
                    "value": "(self.dimension, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_170": {
                "sp_a": {
                    "value": "self._itmb_inv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.velocity + 0.5 * self.\u0394t * (self.acceleration - tf.sparse.sparse_dense_matmul(self.M_inv, self.gradient))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_185": {
                "sp_a": {
                    "value": "self.M_inv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "-self.gradient - tf.sparse.sparse_dense_matmul(self.B, self.velocity)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_187": {
                "sp_a": {
                    "value": "self.B",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.velocity",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_164": {
                "x": {
                    "value": "self.\u0394t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_176": {
                "sp_a": {
                    "value": "self.M_inv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.gradient",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "batch_size/tf_plot_callback.py": {
        "tensorflow": {}
    },
    "numerical_experiments.py": {
        "tensorflow": {
            "load_data_69": {
                "variable": {
                    "value": "((x_train, y_train), (x_test, y_test))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "to_categorical_76": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "keras.utils.to_categorical(y_train, 10)",
                            "Call"
                        ]
                    ]
                },
                "num_classes": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "to_categorical_77": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "keras.utils.to_categorical(y_test, 10)",
                            "Call"
                        ]
                    ]
                },
                "num_classes": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "mnist_model",
                    "type": "str",
                    "possible_values": []
                }
            },
            "set_floatx_33": {
                "value": {
                    "value": "float64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_37": {
                "input_shape": {
                    "value": "(28, 28)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "input_layer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_44": {
                "units": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "output_layer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_91": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_41": {
                "units": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "f'hidden_layer_{i}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CategoricalAccuracy_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train_plots/tf_plot_callback.py": {
        "tensorflow": {}
    }
}