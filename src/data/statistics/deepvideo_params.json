{
    "utils/curves.py": {
        "sklearn": {
            "auc_224": {
                "variable": {
                    "value": "curve_area",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "cut_curve['bpp']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "cut_curve['met']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "evaluate.py": {
        "torch": {
            "device_31": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "floor_513": {
                "variable": {
                    "value": "pq",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.model.L * p",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_525": {
                "data": {
                    "value": "pq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.floor(self.model.L * p)",
                            "Call"
                        ],
                        [
                            "np.unpackbits(pq.cpu().numpy().astype(np.uint8))",
                            "Call"
                        ],
                        [
                            "pq.reshape(-1, 8)",
                            "Call"
                        ],
                        [
                            "pq[:, self._bit_count(self.model.L):]",
                            "Subscript"
                        ],
                        [
                            "pq.reshape(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_267": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(r_vid[:, 0].unsqueeze(1), c_vid)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_452": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_483": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_534": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_582": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_272": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(r_vid[:, 0].unsqueeze(1), c_vid, r_vid[:, -1].unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "functions/binarizer.py": {
        "torch": {}
    },
    "functions/importance_mask.py": {
        "torch": {
            "zeros_30": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ctx.n",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "layout": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_71": {
                "variable": {
                    "value": "d_m",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "grad_output",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "floor_44": {
                "input": {
                    "value": "L * p",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "image_networks/img_vae/image_vae.py": {
        "torch": {
            "randn_55": {
                "variable": {
                    "value": "esp",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "*mu.size()",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "std.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_61": {
                "f": {
                    "value": "save_loc",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "image_networks/img_vae/vae_dec.py": {
        "torch": {
            "Sequential_15": {
                "variable": {
                    "value": "self.dec_bin",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=bnd, out_channels=512, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_46": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_64": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_82": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_100": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "image_networks/img_vae/vae_enc.py": {
        "torch": {
            "Sequential_15": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=3, out_channels=64, kernel_size=3, stride=2, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "variable": {
                    "value": "self.conv_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "variable": {
                    "value": "self.conv_logvar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "metrics/metrics.py": {
        "torch": {
            "Tensor_222": {
                "variable": {
                    "value": "gaussian_kernel",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_250": {
                "variable": {
                    "value": "gaussian_filter",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.win_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.win_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "full_271": {
                "variable": {
                    "value": "uniform_kernel",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(channels, 1, self.win_size, self.win_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "1 / self.win_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_277": {
                "variable": {
                    "value": "uniform_filter",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.win_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.win_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "max_35": {
                "input": {
                    "value": "c_img",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "min_35": {
                "input": {
                    "value": "c_img",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_36": {
                "input": {
                    "value": "r_img",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "min_36": {
                "input": {
                    "value": "r_img",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "from_numpy_122": {
                "variable": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "r_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "r_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_122": {
                "variable": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_123": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "c_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "c_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_123": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_329": {
                "variable": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "r_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "r_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_329": {
                "variable": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_330": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "c_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "c_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_330": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_412": {
                "variable": {
                    "value": "vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(vid).permute(3, 0, 1, 2)",
                            "Call"
                        ],
                        [
                            "vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "vid.permute(1, 0, 2, 3)",
                            "Call"
                        ],
                        [
                            "vid.numpy().transpose(0, 2, 3, 1)",
                            "Call"
                        ],
                        [
                            "vid.astype(np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_412": {
                "variable": {
                    "value": "vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_446": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(ux - uy) ** 2 + (vx - vy) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_446": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_489": {
                "variable": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "r_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "r_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(r_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_489": {
                "variable": {
                    "value": "r_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_490": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "c_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "c_vid.type(torch.FloatTensor)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(c_vid).permute(0, 3, 1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_490": {
                "variable": {
                    "value": "c_vid",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log10_356": {
                "input": {
                    "value": "self.data_range ** 2 / mse",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "modules/binarizer/binarizer.py": {
        "torch": {}
    },
    "modules/conv_gru/conv_gru_base.py": {
        "torch": {
            "ModuleList_44": {
                "variable": {
                    "value": "self.gru_cells_forward",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_47": {
                "variable": {
                    "value": "self.gru_cells_reverse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(f_seq, r_seq)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_116": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "output_seq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_120": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "modules/conv_gru/conv_gru_cell.py": {
        "torch": {
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3 * hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_i",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride_i",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.conv_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3 * hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_h",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride_h",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "split_63": {
                "variable": {
                    "value": "(x_z, x_r, x_n)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_in(x)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_64": {
                "variable": {
                    "value": "(h_z, h_r, h_n)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_h(h_prev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(batch_size, self.hidden_dim, h, w).cuda()",
                            "Call"
                        ],
                        [
                            "torch.zeros(batch_size, self.hidden_dim, h, w)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_67": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_z + h_z",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_68": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_r + h_r",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_69": {
                "variable": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_n + r * h_n",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_76": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_h(h_prev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(batch_size, self.hidden_dim, h, w).cuda()",
                            "Call"
                        ],
                        [
                            "torch.zeros(batch_size, self.hidden_dim, h, w)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_78": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_h(h_prev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(batch_size, self.hidden_dim, h, w).cuda()",
                            "Call"
                        ],
                        [
                            "torch.zeros(batch_size, self.hidden_dim, h, w)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "modules/functional.py": {
        "torch": {
            "sqrt_113": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(u_i - u_t) ** 2 + (v_i - v_t) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_117": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt((u_i - u_t) ** 2 + (v_i - v_t) ** 2)",
                            "Call"
                        ],
                        [
                            "torch.sum(d)",
                            "Call"
                        ],
                        [
                            "d.mean()",
                            "Call"
                        ],
                        [
                            "1.0 - f.cosine_similarity(input, target, dim=1)",
                            "BinOp"
                        ],
                        [
                            "torch.sum(d)",
                            "Call"
                        ],
                        [
                            "torch.mean(d)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_139": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt((u_i - u_t) ** 2 + (v_i - v_t) ** 2)",
                            "Call"
                        ],
                        [
                            "torch.sum(d)",
                            "Call"
                        ],
                        [
                            "d.mean()",
                            "Call"
                        ],
                        [
                            "1.0 - f.cosine_similarity(input, target, dim=1)",
                            "BinOp"
                        ],
                        [
                            "torch.sum(d)",
                            "Call"
                        ],
                        [
                            "torch.mean(d)",
                            "Call"
                        ]
                    ]
                }
            },
            "cosine_similarity_136": {
                "x1": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input.permute(0, 2, 1, 3, 4)",
                            "Call"
                        ]
                    ]
                },
                "x2": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_141": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt((u_i - u_t) ** 2 + (v_i - v_t) ** 2)",
                            "Call"
                        ],
                        [
                            "torch.sum(d)",
                            "Call"
                        ],
                        [
                            "d.mean()",
                            "Call"
                        ],
                        [
                            "1.0 - f.cosine_similarity(input, target, dim=1)",
                            "BinOp"
                        ],
                        [
                            "torch.sum(d)",
                            "Call"
                        ],
                        [
                            "torch.mean(d)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_88": {
                "input": {
                    "value": "kld",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 + logvar - mu.pow(2) - logvar.exp()",
                            "BinOp"
                        ],
                        [
                            "-0.5 * torch.sum(kld)",
                            "BinOp"
                        ],
                        [
                            "-0.5 * torch.mean(kld)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mean_91": {
                "input": {
                    "value": "kld",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 + logvar - mu.pow(2) - logvar.exp()",
                            "BinOp"
                        ],
                        [
                            "-0.5 * torch.sum(kld)",
                            "BinOp"
                        ],
                        [
                            "-0.5 * torch.mean(kld)",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "modules/importance_map/importance_map.py": {
        "torch": {
            "Sequential_35": {
                "variable": {
                    "value": "self.imp_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=input_dim, out_channels=64, kernel_size=3, padding=1, stride=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_37": {
                "in_channels": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_48": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_59": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "modules/itr_loss/itr_loss.py": {
        "torch": {
            "MSELoss_40": {
                "variable": {
                    "value": "self.r_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/dense_flow.py": {
        "torch": {
            "stack_39": {
                "variable": {
                    "value": "flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "flow_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_35": {
                "ndarray": {
                    "value": "flow.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/eval_flow.py": {
        "torch": {
            "stack_57": {
                "variable": {
                    "value": "flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "flow_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/flow_loss.py": {
        "torch": {
            "stack_75": {
                "variable": {
                    "value": "inpt_flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "inpt_flows",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_76": {
                "variable": {
                    "value": "targ_flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "targ_flows",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/correlation/correlation.py": {
        "torch": {
            "current_stream_8": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/feature.py": {
        "torch": {
            "Sequential_15": {
                "variable": {
                    "value": "self.moduleOne",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=3, out_channels=32, kernel_size=7, stride=1, padding=3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.moduleTwo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=32, kernel_size=3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.moduleThr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=64, kernel_size=3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_96": {
                "variable": {
                    "value": "self.moduleFou",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=64, out_channels=96, kernel_size=3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_123": {
                "variable": {
                    "value": "self.moduleFiv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=96, out_channels=128, kernel_size=3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_138": {
                "variable": {
                    "value": "self.moduleSix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=128, out_channels=192, kernel_size=3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_25": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_40": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_52": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_64": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_79": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_83": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_91": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_106": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "in_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_118": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_125": {
                "in_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_133": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_140": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "192",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_148": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/functional.py": {
        "torch": {
            "cat_33": {
                "variable": {
                    "value": "tensorFlow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(tensorFlow[:, 0:1, :, :] / ((tensorInput.size(3) - 1.0) / 2.0), tensorFlow[:, 1:2, :, :] / ((tensorInput.size(2) - 1.0) / 2.0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "grid_sample_40": {
                "variable": {
                    "value": "ret",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensorInput",
                    "type": "variable",
                    "possible_values": []
                },
                "grid": {
                    "value": "(Backward_tensorGrid[str(tensorFlow.size())] + tensorFlow).permute(0, 2, 3, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "zeros",
                    "type": "str",
                    "possible_values": []
                }
            },
            "linspace_15": {
                "variable": {
                    "value": "tensorHorizontal",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "steps": {
                    "value": "tensorFlow.size(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linspace_23": {
                "variable": {
                    "value": "tensorVertical",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "steps": {
                    "value": "tensorFlow.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_31": {
                "variable": {
                    "value": "Backward_tensorGrid[str(tensorFlow.size())]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(tensorHorizontal, tensorVertical)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/lite_flow_net.py": {
        "torch": {
            "ModuleList_19": {
                "variable": {
                    "value": "self.moduleMatching",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[Matching(intLevel) for intLevel in [2, 3, 4, 5, 6]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_23": {
                "variable": {
                    "value": "self.moduleSubpixel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[Subpixel(intLevel) for intLevel in [2, 3, 4, 5, 6]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_27": {
                "variable": {
                    "value": "self.moduleRegularization",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[Regularization(intLevel) for intLevel in [2, 3, 4, 5, 6]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "interpolate_111": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f.interpolate(input=p, size=(init_h, init_w), mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "p * 0.5 + 0.5",
                            "BinOp"
                        ],
                        [
                            "f.interpolate(input=p, size=(prep_h, prep_w), mode='bilinear', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(init_h, init_w)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_135": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f.interpolate(input=p, size=(init_h, init_w), mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "p * 0.5 + 0.5",
                            "BinOp"
                        ],
                        [
                            "f.interpolate(input=p, size=(prep_h, prep_w), mode='bilinear', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(prep_h, prep_w)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_146": {
                "f": {
                    "value": "save_loc",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "interpolate_55": {
                "input": {
                    "value": "tensorFirst[-1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[tensorFirst]",
                            "List"
                        ]
                    ]
                },
                "size": {
                    "value": "(tensorFeaturesFirst[intLevel].size(2), tensorFeaturesFirst[intLevel].size(3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_64": {
                "input": {
                    "value": "tensorSecond[-1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[tensorSecond]",
                            "List"
                        ]
                    ]
                },
                "size": {
                    "value": "(tensorFeaturesSecond[intLevel].size(2), tensorFeaturesSecond[intLevel].size(3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/matching.py": {
        "torch": {
            "Sequential_69": {
                "variable": {
                    "value": "self.moduleMain",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=49, out_channels=128, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.moduleFeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "leaky_relu_133": {
                "variable": {
                    "value": "tensorCorrelation",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "FunctionCorrelation(tensorFirst=tensorFeaturesFirst, tensorSecond=tensorFeaturesSecond, intStride=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.moduleFeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=64, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_45": {
                "variable": {
                    "value": "self.moduleUpflow",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "groups": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_59": {
                "variable": {
                    "value": "self.moduleUpcorr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "49",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "49",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "groups": {
                    "value": "49",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "49",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_79": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_84": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_92": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_105": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "[0, 0, 7, 5, 5, 3, 3][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "[0, 0, 3, 2, 2, 1, 1][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_35": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_145": {
                "input": {
                    "value": "FunctionCorrelation(tensorFirst=tensorFeaturesFirst, tensorSecond=tensorFeaturesSecond, intStride=2)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/regularization.py": {
        "torch": {
            "Sequential_37": {
                "variable": {
                    "value": "self.moduleMain",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=[0, 0, 131, 131, 131, 131, 195][intLevel], out_channels=128, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_148": {
                "variable": {
                    "value": "self.moduleScaleX",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "[0, 0, 49, 25, 25, 9, 9][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_156": {
                "variable": {
                    "value": "self.moduleScaleY",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "[0, 0, 49, 25, 25, 9, 9][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self.moduleFeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_119": {
                "variable": {
                    "value": "self.moduleDist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=[0, 0, 49, 25, 25, 9, 9][intLevel], kernel_size=[0, 0, 7, 5, 5, 3, 3][intLevel], stride=1, padding=[0, 0, 3, 2, 2, 1, 1][intLevel])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_207": {
                "tensors": {
                    "value": "[tensorScaleX, tensorScaleY]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "variable": {
                    "value": "self.moduleFeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=[0, 0, 32, 64, 96, 128, 192][intLevel], out_channels=128, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_39": {
                "in_channels": {
                    "value": "[0, 0, 131, 131, 131, 131, 195][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_47": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_52": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_60": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_73": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_86": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_99": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_112": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_129": {
                "variable": {
                    "value": "self.moduleDist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=[0, 0, 49, 25, 25, 9, 9][intLevel], kernel_size=([0, 0, 7, 5, 5, 3, 3][intLevel], 1), stride=1, padding=([0, 0, 3, 2, 2, 1, 1][intLevel], 0))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "[0, 0, 49, 25, 25, 9, 9][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "[0, 0, 7, 5, 5, 3, 3][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "[0, 0, 3, 2, 2, 1, 1][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_173": {
                "tensors": {
                    "value": "(tensorDifference, tensorFlow - tensorFlow.view(tensorFlow.size(0), 2, -1).mean(2, True).view(tensorFlow.size(0), 2, 1, 1), self.moduleFeat(tensorFeaturesFirst))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "[0, 0, 32, 64, 96, 128, 192][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_31": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_131": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "[0, 0, 49, 25, 25, 9, 9][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "([0, 0, 7, 5, 5, 3, 3][intLevel], 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "([0, 0, 3, 2, 2, 1, 1][intLevel], 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_139": {
                "in_channels": {
                    "value": "[0, 0, 49, 25, 25, 9, 9][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "[0, 0, 49, 25, 25, 9, 9][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, [0, 0, 7, 5, 5, 3, 3][intLevel])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, [0, 0, 3, 2, 2, 1, 1][intLevel])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "unfold_192": {
                "input": {
                    "value": "tensorFlow[:, 0:1, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.intUnfold",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "int((self.intUnfold - 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unfold_200": {
                "input": {
                    "value": "tensorFlow[:, 1:2, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.intUnfold",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "int((self.intUnfold - 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "modules/liteflownet/network/subpixel.py": {
        "torch": {
            "Sequential_38": {
                "variable": {
                    "value": "self.moduleMain",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=[0, 0, 130, 130, 194, 258, 386][intLevel], out_channels=128, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "variable": {
                    "value": "self.moduleFeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.moduleFeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=64, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "in_channels": {
                    "value": "[0, 0, 130, 130, 194, 258, 386][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_48": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_61": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_74": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_79": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "[0, 0, 7, 5, 5, 3, 3][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "[0, 0, 3, 2, 2, 1, 1][intLevel]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_100": {
                "tensors": {
                    "value": "[tensorFeaturesFirst, tensorFeaturesSecond, tensorFlow]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_32": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "modules/multi_scale_conv/multi_scale_conv.py": {
        "torch": {
            "ModuleList_34": {
                "variable": {
                    "value": "self.multi_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(nn.Conv2d(in_channels=in_channels, out_channels=out_channels // len(dilation), kernel_size=kernel[i], stride=stride[i], padding=padding[i], dilation=dilation[i], bias=bias), nn.ReLU(), nn.BatchNorm2d(num_features=out_channels // len(dilation))) for i in range(len(dilation))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_69": {
                "variable": {
                    "value": "opts",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "opts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(opts, dim=1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(opts, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_102": {
                "variable": {
                    "value": "self.multi_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(nn.Conv3d(in_channels=self.in_channels, out_channels=self.out_channels // len(dilation), kernel_size=kernel[i], stride=stride[i], padding=padding[i], dilation=dilation[i], bias=bias), nn.ReLU(), nn.BatchNorm3d(num_features=out_channels // len(dilation))) for i in range(len(dilation))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_137": {
                "variable": {
                    "value": "opts",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "opts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(opts, dim=1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(opts, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_35": {
                "*args": {
                    "value": "nn.Conv2d(in_channels=in_channels, out_channels=out_channels // len(dilation), kernel_size=kernel[i], stride=stride[i], padding=padding[i], dilation=dilation[i], bias=bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_103": {
                "*args": {
                    "value": "nn.Conv3d(in_channels=self.in_channels, out_channels=self.out_channels // len(dilation), kernel_size=kernel[i], stride=stride[i], padding=padding[i], dilation=dilation[i], bias=bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels // len(dilation)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_52": {
                "num_features": {
                    "value": "out_channels // len(dilation)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv3d_106": {
                "in_channels": {
                    "value": "self.in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.out_channels // len(dilation)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm3d_120": {
                "num_features": {
                    "value": "out_channels // len(dilation)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "modules/pixel_shuffle/pixel_shuffle_2d.py": {
        "torch": {}
    },
    "modules/pixel_shuffle/pixel_shuffle_3d.py": {
        "torch": {}
    },
    "modules/rate_loss/rate_loss.py": {
        "torch": {
            "sum_44": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(x) / x.size(0)",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "modules/vae_intp_loss/vae_intp_loss.py": {
        "torch": {
            "BCELoss_30": {
                "variable": {
                    "value": "self.intp_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_34": {
                "variable": {
                    "value": "self.intp_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "modules/vae_loss/vae_loss.py": {
        "torch": {
            "BCELoss_28": {
                "variable": {
                    "value": "self.r_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MSELoss_34": {
                "variable": {
                    "value": "self.r_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "process_data/image_dataLoaders.py": {
        "torch": {
            "DataLoader_63": {
                "variable": {
                    "value": "train_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ImageDataset(root_dir=self.data_rt['train'], transform=img_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.b_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_77": {
                "variable": {
                    "value": "valid_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ImageDataset(root_dir=self.data_rt['valid'], transform=img_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.b_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_91": {
                "variable": {
                    "value": "test_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ImageDataset(root_dir=self.data_rt['test'], transform=img_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "process_data/image_dataset.py": {
        "torch": {}
    },
    "process_data/video_codec_dataset.py": {
        "torch": {}
    },
    "process_data/video_dataLoaders.py": {
        "torch": {
            "DataLoader_185": {
                "variable": {
                    "value": "train_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "NvvlVideoDataset(root_dir=self.data_paths['train'], gop_size=self.n_gop, vid_ext=self.vid_ext, processing=video_processing).create()",
                            "Call"
                        ],
                        [
                            "VideoDataset(root_dir=self.data_paths['train'], vid_ext=self.vid_ext, transform=train_video_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.b_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_200": {
                "variable": {
                    "value": "valid_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "NvvlVideoDataset(root_dir=self.data_paths['valid'], gop_size=self.n_gop, vid_ext=self.vid_ext, processing=video_processing).create()",
                            "Call"
                        ],
                        [
                            "VideoDataset(root_dir=self.data_paths['valid'], vid_ext=self.vid_ext, transform=valid_video_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.b_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_215": {
                "variable": {
                    "value": "test_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "NvvlVideoDataset(root_dir=self.data_paths['test'], gop_size=self.n_gop, vid_ext=self.vid_ext, processing=video_processing).create()",
                            "Call"
                        ],
                        [
                            "VideoDataset(root_dir=self.data_paths['test'], vid_ext=self.vid_ext, transform=valid_video_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.b_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_159": {
                "tensors": {
                    "value": "[frame_transform(frame) for frame in frames]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_171": {
                "tensors": {
                    "value": "[frame_transform(frame) for frame in frames]",
                    "type": "ListComp",
                    "possible_values": []
                }
            }
        }
    },
    "process_data/video_dataset.py": {
        "torch": {}
    },
    "process_data/video_transforms.py": {
        "torch": {}
    },
    "train.py": {
        "torch": {
            "device_351": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_359": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "sys.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learn_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_365": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optimizer.Adam(sys.parameters(), args.learn_rate)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "[30, 80, 140]",
                    "type": "List",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_412": {
                "variable": {
                    "value": "chkp",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "state_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''.join([save_loc, '/', sys.name, '_chkp.pt'])",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_348": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_352": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_575": {
                "obj": {
                    "value": "chkp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.load(state_file)",
                            "Call"
                        ],
                        [
                            "{'epoch': epoch + 1, 'sys': sys.state_dict(), 'optimizer': opt.state_dict(), 'scheduler': scheduler.state_dict(), 'best_loss': best_loss, 'time': time.time() - train_start + t_prev}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "state_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''.join([save_loc, '/', sys.name, '_chkp.pt'])",
                            "Call"
                        ]
                    ]
                }
            },
            "save_556": {
                "obj": {
                    "value": "sys.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "fn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''.join([save_loc, '/', sys.name, '.pt'])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "utils/video_tools.py": {
        "torch": {
            "stack_56": {
                "variable": {
                    "value": "flows",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "flows",
                    "type": "variable",
                    "possible_values": [
                        [
                            "flows.numpy()",
                            "Call"
                        ],
                        [
                            "[torch.from_numpy(flow_to_image(flow)) for flow in flows]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(flows, dim=0)",
                            "Call"
                        ],
                        [
                            "make_grid(flows, nrow=flows.size(0), padding=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_95": {
                "variable": {
                    "value": "r_flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "r_flow",
                    "type": "variable",
                    "possible_values": [
                        [
                            "r_flow.numpy()",
                            "Call"
                        ],
                        [
                            "[torch.from_numpy(flow_to_image(flow)) for flow in r_flow]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(r_flow, dim=0)",
                            "Call"
                        ],
                        [
                            "r_flow.numpy()",
                            "Call"
                        ],
                        [
                            "[torch.from_numpy(flow_to_image(flow)) for flow in r_flow]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_96": {
                "variable": {
                    "value": "c_flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "c_flow",
                    "type": "variable",
                    "possible_values": [
                        [
                            "c_flow.numpy()",
                            "Call"
                        ],
                        [
                            "[torch.from_numpy(flow_to_image(flow)) for flow in c_flow]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(c_flow, dim=0)",
                            "Call"
                        ],
                        [
                            "c_flow.numpy()",
                            "Call"
                        ],
                        [
                            "[torch.from_numpy(flow_to_image(flow)) for flow in c_flow]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "flow",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[r_flow, c_flow]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_188": {
                "variable": {
                    "value": "frames",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[r_frames, c_frames]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_25": {
                "variable": {
                    "value": "heatmaps",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "heatmaps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(heatmaps)",
                            "Call"
                        ],
                        [
                            "heatmaps.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "make_grid(heatmaps, nrow=heatmaps.size(0), padding=1, pad_value=1.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_162": {
                "variable": {
                    "value": "frames",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "frames",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(frames).permute(0, 3, 1, 2)",
                            "Call"
                        ],
                        [
                            "make_grid(frames, nrow=frames.size(0), padding=2, pad_value=255)",
                            "Call"
                        ],
                        [
                            "torch.cat([r_frames, c_frames], dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "permute_162": {
                "variable": {
                    "value": "frames",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_53": {
                "ndarray": {
                    "value": "flow_to_image(flow)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_88": {
                "ndarray": {
                    "value": "flow_to_image(flow)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_92": {
                "ndarray": {
                    "value": "flow_to_image(flow)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_130": {
                "ndarray": {
                    "value": "flow_to_image(flow)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_134": {
                "ndarray": {
                    "value": "flow_to_image(flow)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/bf_video_auto/bf_decoder.py": {
        "torch": {
            "Sequential_19": {
                "variable": {
                    "value": "self.dec_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=bnd, out_channels=512, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.dec_1024",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=1024, out_channels=2048, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.dec_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=1024, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.dec_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=256, out_channels=512, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_100": {
                "variable": {
                    "value": "self.dec_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=128, out_channels=3, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_141": {
                "variable": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(v, feat.expand(-1, -1, v.size(2), -1, -1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_22": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_39": {
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_61": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_82": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_103": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/bf_video_auto/bf_video_auto.py": {
        "torch": {
            "load_92": {
                "f": {
                    "value": "save_loc",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/bf_video_auto/if_feat_ext.py": {
        "torch": {
            "Sequential_16": {
                "variable": {
                    "value": "self.conv_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=3, out_channels=64, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.conv_128",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=64, out_channels=128, kernel_size=3, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "variable": {
                    "value": "self.conv_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=128, out_channels=256, kernel_size=3, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_61": {
                "variable": {
                    "value": "self.conv_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=256, out_channels=512, kernel_size=3, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/bf_video_auto/if_feat_x2.py": {
        "torch": {
            "Sequential_23": {
                "variable": {
                    "value": "self.conv_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.conv_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=256, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.conv_128",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=256, out_channels=128, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "self.conv_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=128, out_channels=64, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_88": {
                "tensors": {
                    "value": "(i_feat_0['512'], i_feat_t['512'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_95": {
                "tensors": {
                    "value": "(i_feat_0['256'], i_feat_t['256'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_102": {
                "tensors": {
                    "value": "(i_feat_0['128'], i_feat_t['128'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_109": {
                "tensors": {
                    "value": "(i_feat_0['64'], i_feat_t['64'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/bf_video_auto/ms_video_encoder.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=3, out_channels=64, kernel_size=3, stride=1, dilation=1, padding=(0, 1, 1), bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.binarizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=bnd, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_69": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/bf_video_auto/video_encoder.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=3, out_channels=64, kernel_size=3, stride=1, dilation=1, padding=(0, 1, 1), bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "variable": {
                    "value": "self.binarizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=bnd, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_33": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_46": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_59": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_75": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/pf_video_auto/if_feat_ext.py": {
        "torch": {
            "Sequential_16": {
                "variable": {
                    "value": "self.conv_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=3, out_channels=64, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.conv_128",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=64, out_channels=128, kernel_size=3, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "variable": {
                    "value": "self.conv_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=128, out_channels=256, kernel_size=3, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_61": {
                "variable": {
                    "value": "self.conv_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=256, out_channels=512, kernel_size=3, stride=2, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/pf_video_auto/ms_video_encoder.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=3, out_channels=64, kernel_size=(2, 3, 3), stride=1, dilation=1, padding=(0, 1, 1), bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.binarizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=bnd, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_69": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/pf_video_auto/pf_decoder.py": {
        "torch": {
            "Sequential_19": {
                "variable": {
                    "value": "self.dec_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=bnd, out_channels=512, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.dec_1024",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=1024, out_channels=2048, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.dec_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=1024, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.dec_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=256, out_channels=512, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_100": {
                "variable": {
                    "value": "self.dec_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=128, out_channels=3, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_141": {
                "variable": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(v, feat.expand(-1, -1, v.size(2), -1, -1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_22": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_39": {
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_61": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_82": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_103": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/pf_video_auto/pf_video_auto.py": {
        "torch": {
            "load_92": {
                "f": {
                    "value": "save_loc",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/pf_video_auto/video_encoder.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=3, out_channels=64, kernel_size=(2, 3, 3), stride=1, dilation=1, padding=(0, 1, 1), bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "variable": {
                    "value": "self.binarizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=bnd, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_33": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_46": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_59": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_75": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_auto/video_auto.py": {
        "torch": {
            "load_67": {
                "f": {
                    "value": "save_loc",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_auto/video_decoder.py": {
        "torch": {
            "Sequential_28": {
                "variable": {
                    "value": "self.dec_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=bnd, out_channels=512, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_44": {
                "variable": {
                    "value": "self.dec_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512 * k, out_channels=2048, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_64": {
                "variable": {
                    "value": "self.dec_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=256 * k, out_channels=1024, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "self.dec_128",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=128 * k, out_channels=512, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_104": {
                "variable": {
                    "value": "self.dec_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=64 * k, out_channels=32, kernel_size=3, stride=1, padding=1, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_119": {
                "variable": {
                    "value": "self.dec_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=32, out_channels=3, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_165": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, dec_state[str(x.size(1))])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_31": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_46": {
                "in_channels": {
                    "value": "512 * k",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_66": {
                "in_channels": {
                    "value": "256 * k",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_86": {
                "in_channels": {
                    "value": "128 * k",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_106": {
                "in_channels": {
                    "value": "64 * k",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_121": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_131": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_auto/video_encoder.py": {
        "torch": {
            "Sequential_19": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=3, out_channels=128, kernel_size=3, stride=1, dilation=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_75": {
                "variable": {
                    "value": "self.binarizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=bnd, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_22": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_35": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_48": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_61": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_77": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_vae/m_cond.py": {
        "torch": {
            "Sequential_21": {
                "variable": {
                    "value": "self.conv1x1_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=bnd, out_channels=16 * bnd, kernel_size=1, dilation=1, padding=0, stride=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.conv1x1_256",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=bnd, out_channels=4 * bnd, kernel_size=1, dilation=1, padding=0, stride=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16 * bnd",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_36": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * bnd",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_68": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_vae/ms_video_enc.py": {
        "torch": {
            "Sequential_17": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=3, out_channels=64, kernel_size=3, stride=1, dilation=1, padding=(0, 1, 1), bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.binarizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(in_channels=512, out_channels=bnd, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_20": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_69": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_vae/vae_dec.py": {
        "torch": {
            "Sequential_15": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=bnd, out_channels=512, kernel_size=1, stride=1, padding=0, dilation=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "bnd",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_43": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_61": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_79": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_84": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PixelShuffle_97": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_102": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_vae/vae_enc.py": {
        "torch": {
            "Sequential_33": {
                "variable": {
                    "value": "self.vae_enc_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "MultiScaleConv2D(in_channels=3, out_channels=64, kernel=[3, 3, 3, 3], stride=[2, 2, 2, 2], padding=[1, 2, 4, 8], dilation=[1, 2, 4, 8], bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.vae_enc_128",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "MultiScaleConv2D(in_channels=128, out_channels=256, kernel=[3, 3, 3, 3], stride=[2, 2, 2, 2], padding=[1, 2, 4, 8], dilation=[1, 2, 4, 8], bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "self.vae_enc_512",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "MultiScaleConv2D(in_channels=512, out_channels=512, kernel=[3, 3, 3, 3], stride=[2, 2, 2, 2], padding=[1, 2, 4, 8], dilation=[1, 2, 4, 8], bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_77": {
                "variable": {
                    "value": "self.vae_enc_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "MultiScaleConv2D(in_channels=512, out_channels=512, kernel=[3, 3, 3, 3], stride=[2, 2, 2, 2], padding=[1, 2, 4, 8], dilation=[1, 2, 4, 8], bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_93": {
                "variable": {
                    "value": "self.conv_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "vae_bnd",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "variable": {
                    "value": "self.conv_logvar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "vae_bnd",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_124": {
                "tensors": {
                    "value": "(x, m_cond['64'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_128": {
                "tensors": {
                    "value": "(x, m_cond['256'])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "video_networks/video_vae/video_vae.py": {
        "torch": {
            "stack_95": {
                "variable": {
                    "value": "intp_fr",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "intp_fr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(intp_fr, dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_103": {
                "variable": {
                    "value": "esp",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "*mu.size()",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "std.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_109": {
                "f": {
                    "value": "save_loc",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}