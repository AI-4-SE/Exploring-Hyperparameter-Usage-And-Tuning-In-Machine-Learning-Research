{
    "examples/tabular.py": {
        "sklearn": {
            "StandardScaler_35": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "torch": {
            "DataLoader_95": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TabularDataset(X_tr, y_tr)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "25",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_101": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_102": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if use_cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "SGD_116": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.003",
                            "float"
                        ],
                        [
                            "0.01",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "float"
                        ],
                        [
                            "0.001",
                            "float"
                        ]
                    ]
                }
            },
            "manual_seed_100": {
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_112": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_141": {
                "variable": {
                    "value": "train_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "X_tr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data(ds, standardize=True)",
                            "Call"
                        ],
                        [
                            "X_all[id_perm[:n_tr], :]",
                            "Subscript"
                        ],
                        [
                            "scaler.transform(X_tr)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_150": {
                "variable": {
                    "value": "test_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "X_ts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data(ds, standardize=True)",
                            "Call"
                        ],
                        [
                            "X_all[id_perm[n_tr:], :]",
                            "Subscript"
                        ],
                        [
                            "scaler.transform(X_ts)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nvar",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_tr.shape[1]",
                            "Subscript"
                        ],
                        [
                            "nvar",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_60": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_61": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_64": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_65": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "ap_perf/layer.py": {
        "torch": {
            "tensor_27": {
                "variable": {
                    "value": "q",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "q_np",
                    "type": "variable",
                    "possible_values": [
                        [
                            "metric.objective(input_np, target_np, **solver_params)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_28": {
                "variable": {
                    "value": "obj",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[obj_np]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}