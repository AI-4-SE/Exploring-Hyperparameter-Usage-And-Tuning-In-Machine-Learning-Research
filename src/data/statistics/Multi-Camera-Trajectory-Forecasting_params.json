{
    "experiments/neural_nets/classify_hand_crafted_features.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "DEVICE",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_68": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LEARNING_RATE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "WEIGHT_DECAY",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_69": {
                "variable": {
                    "value": "loss_function",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_100": {
                "obj": {
                    "value": "best_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "MODEL_SAVE_PATH + model_save_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/datasets.py": {
        "torch": {
            "DataLoader_40": {
                "variable": {
                    "value": "dataset_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ClassificationDataset(inputs_path, input_cameras_path, labels_path, flatten_inputs)",
                            "Call"
                        ],
                        [
                            "ClassificationDataset(inputs_path, input_cameras_path, labels_path, flatten_inputs)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_53": {
                "variable": {
                    "value": "dataset_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ClassificationDataset(inputs_path, input_cameras_path, labels_path, flatten_inputs)",
                            "Call"
                        ],
                        [
                            "ClassificationDataset(inputs_path, input_cameras_path, labels_path, flatten_inputs)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/fully_connected_network.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "DEVICE",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_73": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LEARNING_RATE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "WEIGHT_DECAY",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_74": {
                "variable": {
                    "value": "loss_function",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_105": {
                "obj": {
                    "value": "best_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "MODEL_SAVE_PATH + model_save_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/gru.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "DEVICE",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_72": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LEARNING_RATE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "WEIGHT_DECAY",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_73": {
                "variable": {
                    "value": "loss_function",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_104": {
                "obj": {
                    "value": "best_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "MODEL_SAVE_PATH + model_save_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/lstm.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "DEVICE",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_72": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LEARNING_RATE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "WEIGHT_DECAY",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_73": {
                "variable": {
                    "value": "loss_function",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_104": {
                "obj": {
                    "value": "best_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "MODEL_SAVE_PATH + model_save_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/models.py": {
        "torch": {
            "stack_23": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "outputs + [output]",
                            "BinOp"
                        ],
                        [
                            "torch.stack(outputs, 0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(outputs, 0).squeeze()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(outputs, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_76": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "outputs + [output]",
                            "BinOp"
                        ],
                        [
                            "torch.stack(outputs, 0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(outputs, 0).squeeze()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(outputs, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_76": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_97": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "outputs + [output]",
                            "BinOp"
                        ],
                        [
                            "torch.stack(outputs, 0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(outputs, 0).squeeze()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(outputs, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_55": {
                "variable": {
                    "value": "hidden_unit",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.num_hidden_units",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "context_unit",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.num_hidden_units",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/network_components.py": {
        "torch": {
            "Sequential_5": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(input_size, num_hidden)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_15": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "GRUCell_20": {
                "variable": {
                    "value": "encoder",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_size": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "num_hidden",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTMCell_25": {
                "variable": {
                    "value": "encoder",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_size": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "num_hidden",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_6": {
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_hidden",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_7": {
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_8": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "num_hidden",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/neural_nets/trainer.py": {
        "torch": {
            "all_24": {
                "input": {
                    "value": "input_cameras != labels",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "topk_38": {
                "variable": {
                    "value": "(_, i)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "this_out.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "k": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "all_72": {
                "input": {
                    "value": "input_cameras != labels",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "topk_84": {
                "variable": {
                    "value": "(_, i)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "this_out.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "k": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}