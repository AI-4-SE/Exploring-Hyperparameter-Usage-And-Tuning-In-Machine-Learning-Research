{
    "lib/atari/state_processor.py": {
        "tensorflow": {
            "placeholder_11": {
                "variable": {
                    "value": "self.input_state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[210, 160, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rgb_to_grayscale_12": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "images": {
                    "value": "self.input_state",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "crop_to_bounding_box_13": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "image": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "offset_height": {
                    "value": "34",
                    "type": "int",
                    "possible_values": []
                },
                "offset_width": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "target_height": {
                    "value": "160",
                    "type": "int",
                    "possible_values": []
                },
                "target_width": {
                    "value": "160",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_16": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_10": {
                "name_or_scope": {
                    "value": "state_processor",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_default_session_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "A3C/continuous_A3C.py": {
        "torch": {
            "Linear_33": {
                "variable": {
                    "value": "self.a1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "s_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "a_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "a_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_36": {
                "variable": {
                    "value": "self.c1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "s_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu6_42": {
                "variable": {
                    "value": "a1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.a1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu6_45": {
                "variable": {
                    "value": "c1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.c1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_43": {
                "input": {
                    "value": "self.mu(a1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softplus_44": {
                "input": {
                    "value": "self.sigma(a1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_63": {
                "input": {
                    "value": "m.scale",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "A3C/discrete_A3C.py": {
        "torch": {
            "Linear_33": {
                "variable": {
                    "value": "self.pi1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "s_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.pi2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "a_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.v1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "s_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_36": {
                "variable": {
                    "value": "self.v2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_41": {
                "variable": {
                    "value": "pi1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.pi1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_43": {
                "variable": {
                    "value": "v1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.v1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_60": {
                "variable": {
                    "value": "probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.pi2(pi1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_50": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.pi2(pi1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "A3C/shared_adam.py": {
        "torch": {
            "zeros_like_17": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_18": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "A3C/utils.py": {
        "torch": {
            "from_numpy_13": {
                "ndarray": {
                    "value": "np_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np_array.astype(dtype)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}