{
    "The_Payne/radam.py": {
        "torch": {
            "zeros_like_39": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_40": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_114": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_115": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_178": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_179": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p_data_fp32",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ],
                        [
                            "p.data.float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "The_Payne/training.py": {
        "torch": {
            "L1Loss_172": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "reduction": {
                    "value": "mean",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(dim_in, num_neurons)",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_default_tensor_type_159": {
                "t": {
                    "value": "torch.cuda.FloatTensor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randperm_206": {
                "variable": {
                    "value": "perm",
                    "type": "Name",
                    "possible_values": []
                },
                "n": {
                    "value": "nsamples",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "randperm_226": {
                "variable": {
                    "value": "perm_valid",
                    "type": "Name",
                    "possible_values": []
                },
                "n": {
                    "value": "nsamples_valid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x_valid.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "dim_in",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_neurons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "300",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_39": {
                "in_features": {
                    "value": "num_neurons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "300",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_neurons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "300",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_41": {
                "in_features": {
                    "value": "num_neurons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "300",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_pixel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "7214",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "from_numpy_175": {
                "ndarray": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(training_labels - x_min) / (x_max - x_min) - 0.5",
                            "BinOp"
                        ],
                        [
                            "Variable(torch.from_numpy(x)).type(dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_176": {
                "ndarray": {
                    "value": "training_spectra",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "from_numpy_177": {
                "ndarray": {
                    "value": "x_valid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(validation_labels - x_min) / (x_max - x_min) - 0.5",
                            "BinOp"
                        ],
                        [
                            "Variable(torch.from_numpy(x_valid)).type(dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_178": {
                "ndarray": {
                    "value": "validation_spectra",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    }
}