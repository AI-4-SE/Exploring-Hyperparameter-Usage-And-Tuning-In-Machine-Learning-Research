{
    "code/dependencyParsing/estimateSensitivity/estimateS1ensitivity_parsing_PMLM.py": {
        "torch": {
            "zeros_26": {
                "*size": {
                    "value": "len(values)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(itos)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS1ensitivity_parsing_c.py": {
        "torch": {
            "zeros_26": {
                "*size": {
                    "value": "len(values)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(itos)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS1ensitivity_parsing_position_PMLM.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "vec",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(stoi_upos)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_157": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[oneHotVector(alternatives_predictions_categorical[x]) for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS1ensitivity_parsing_position_c.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "vec",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(stoi_upos)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_136": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[valuesPerVariant[x] for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS1ensitivity_tagging_PMLM.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "vec",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(stoi_upos)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_160": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[oneHotVector(alternatives_predictions_categorical[x]) for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS1ensitivity_tagging_c.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "vec",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(stoi_upos)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_136": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[valuesPerVariant[x] for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS3ensitivity_parsing_c.py": {
        "torch": {
            "zeros_26": {
                "*size": {
                    "value": "len(values)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(itos)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS3ensitivity_parsing_position_c.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "vec",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(stoi_upos)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_136": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[valuesPerVariant[x] for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/estimateSensitivity/estimateS3ensitivity_tagging_c.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "vec",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(stoi_upos)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_136": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[valuesPerVariant[x] for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/headBiLSTM.py": {
        "torch": {
            "device_206": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_272": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_279": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_296": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_298": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_299": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_300": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_301": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_302": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_305": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_306": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_307": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_309": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_310": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_333": {
                "variable": {
                    "value": "words_layer_surrounds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[words_layer_surrounds, words_layer_centers.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_338": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_345": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_206": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_272": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_350": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/headCBOW.py": {
        "torch": {
            "device_206": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_272": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_279": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_298": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_299": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_300": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_301": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_302": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_305": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_306": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_307": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_309": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_310": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_333": {
                "variable": {
                    "value": "words_layer_surrounds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[words_layer_surrounds, words_layer_centers.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_338": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_345": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_206": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_272": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_350": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/headLabelEntropy.py": {
        "torch": {
            "device_206": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_272": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_279": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_282": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_283": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_284": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_285": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_286": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_289": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_290": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_291": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_293": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_294": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_320": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(torch.zeros(len(current), 256))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_206": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_272": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_325": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(torch.zeros(len(current), 256))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_314": {
                "*size": {
                    "value": "len(current)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/relationBiLSTM.py": {
        "torch": {
            "device_207": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_273": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_281": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_297": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_299": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_300": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_301": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_302": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_303": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_306": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_307": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_310": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_311": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_334": {
                "variable": {
                    "value": "words_layer_premise",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[words_layer_surrounds, words_layer_centers.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_345": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_350": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/relationCBOW.py": {
        "torch": {
            "device_207": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_273": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_281": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_299": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_300": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_301": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_302": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_303": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_306": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_307": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_308": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_310": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_311": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_334": {
                "variable": {
                    "value": "words_layer_surrounds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[words_layer_surrounds, words_layer_centers.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_339": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_346": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_351": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/relationLabelEntropy.py": {
        "torch": {
            "device_207": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_273": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_281": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_283": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_284": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_285": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_286": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_287": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_290": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_291": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_292": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_294": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_295": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_321": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(torch.zeros(len(current), 256))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_326": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(torch.zeros(len(current), 256))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_315": {
                "*size": {
                    "value": "len(current)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/taggingBiLSTM.py": {
        "torch": {
            "device_207": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_273": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_281": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_297": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_299": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_300": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_301": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_302": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_303": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_306": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_307": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_308": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_310": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_311": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_334": {
                "variable": {
                    "value": "words_layer_surrounds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[words_layer_surrounds, words_layer_centers.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_339": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_346": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_351": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/taggingCBOW.py": {
        "torch": {
            "device_207": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_273": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_281": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_299": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_300": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_301": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_302": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_303": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_306": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_307": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_308": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_310": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_311": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_334": {
                "variable": {
                    "value": "words_layer_surrounds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[words_layer_surrounds, words_layer_centers.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_339": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_346": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_351": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/dependencyParsing/getPredictions/taggingLabelEntropy.py": {
        "torch": {
            "device_207": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_273": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_280": {
                "variable": {
                    "value": "self.words_embeddings_center",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_281": {
                "variable": {
                    "value": "self.words_embeddings_surround",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_283": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_284": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_285": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_286": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_287": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_290": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_291": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_292": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_294": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_295": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_321": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(torch.zeros(len(current), 256))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_326": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(torch.zeros(len(current), 256))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_315": {
                "*size": {
                    "value": "len(current)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/learning/learnability3.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Embedding_188": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_190": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_192": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_194": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_201": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0003",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_209": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randint_128": {
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "size": {
                    "value": "(2 ** N,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/learning/learnability3_2.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Embedding_188": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_190": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_192": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_194": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_201": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0003",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_209": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randint_128": {
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "size": {
                    "value": "(2 ** N,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/learning/learnability3_Transformer.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Embedding_188": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Embedding_189": {
                "variable": {
                    "value": "positional_embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "TransformerEncoder_190": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "encoder_layer": {
                    "value": "torch.nn.TransformerEncoderLayer(d_model=hidden_size, nhead=4, dim_feedforward=32, dropout=0.1, activation='relu')",
                    "type": "Call",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_192": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_194": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_201": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0003",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_209": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_210": {
                "variable": {
                    "value": "positional",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_211": {
                "variable": {
                    "value": "inputTensorEmbed",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[embeddings(inputNum), positional_embeddings(positional)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "TransformerEncoderLayer_190": {
                "d_model": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "nhead": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim_feedforward": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randint_128": {
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "size": {
                    "value": "(2 ** N,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/learning/learnability3_blockSens.py": {
        "torch": {
            "Tensor_85": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Embedding_245": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_247": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_249": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_251": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_258": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0003",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_266": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_18": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randint_131": {
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "size": {
                    "value": "(2 ** N,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/learning/learnability3_blockSens_Transformer.py": {
        "torch": {
            "Tensor_85": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Embedding_245": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Embedding_246": {
                "variable": {
                    "value": "positional_embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "TransformerEncoder_247": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "encoder_layer": {
                    "value": "torch.nn.TransformerEncoderLayer(d_model=hidden_size, nhead=4, dim_feedforward=32, dropout=0.1, activation='relu')",
                    "type": "Call",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_249": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_251": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_258": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0003",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_266": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_267": {
                "variable": {
                    "value": "positional",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_268": {
                "variable": {
                    "value": "inputTensorEmbed",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[embeddings(inputNum), positional_embeddings(positional)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_18": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "TransformerEncoderLayer_247": {
                "d_model": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "nhead": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim_feedforward": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randint_131": {
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "size": {
                    "value": "(2 ** N,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomFunctions6_S1ensitivity.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomFunctions6_S3ensitivity.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S1ensitivity_Median.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_211": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_213": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_215": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_217": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_225": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S1ensitivity_Median_2.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_211": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_215": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_217": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_221": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_229": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S1ensitivity_Median_2_Dim.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_211": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_215": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_217": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_221": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_229": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S1ensitivity_Median_Dim.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_211": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_213": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_215": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_217": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_225": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S3ensitivity_Median.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_212": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_214": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_216": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_218": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_226": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S3ensitivity_Median_2.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_212": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_216": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_218": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_222": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_230": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S3ensitivity_Median_2_Dim.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_212": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_216": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_218": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_222": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_230": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/learnability/randomInitialization/randomInit6_S3ensitivity_Median_Dim.py": {
        "torch": {
            "Tensor_82": {
                "variable": {
                    "value": "standardBasis",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_212": {
                "variable": {
                    "value": "embeddings",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_214": {
                "variable": {
                    "value": "qrnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_216": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_218": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_226": {
                "variable": {
                    "value": "inputNum",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_15": {
                "*size": {
                    "value": "2 ** N",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/roberta/estimateSensitivity/estimateSensitivity_textclas.py": {
        "torch": {}
    },
    "code/roberta/estimateSensitivity/estimateSensitivity_textclas_finetuned.py": {
        "torch": {}
    },
    "code/roberta/finetuneRoberta/finetune_textclas.py": {
        "torch": {
            "device_153": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_68": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_70": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_421": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_428": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_438": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_439": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_440": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_447": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "outputs[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_447": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_449": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_449": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_442": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/roberta/textclas.py": {
        "torch": {
            "load_170": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "cached_features_file",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(args.data_dir, 'cached_{}_{}_{}_{}'.format(('dev' if datapoints is None else 'alternatives') if evaluate else 'train', tokenizer.__class__.__name__, str(args.max_seq_length), args.task_name))",
                            "Call"
                        ]
                    ]
                }
            },
            "save_209": {
                "obj": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "cached_features_file",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(args.data_dir, 'cached_{}_{}_{}_{}'.format(('dev' if datapoints is None else 'alternatives') if evaluate else 'train', tokenizer.__class__.__name__, str(args.max_seq_length), args.task_name))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "code/textClassification/dataloader.py": {
        "torch": {}
    },
    "code/textClassification/evaluateBool.py": {
        "torch": {
            "device_174": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_184": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_187": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_188": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_189": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_190": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_191": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_194": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_195": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_197": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_198": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_199": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_201": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_229": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_236": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_174": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/runOnMNLI.py": {
        "torch": {
            "device_162": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_172": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_189": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_190": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_191": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_192": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_193": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_196": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_197": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_198": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_200": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_201": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_202": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_204": {
                "variable": {
                    "value": "self.rnn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_205": {
                "variable": {
                    "value": "self.rnn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_241": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[representation_premise, representation_hypothesis, representation_premise - representation_hypothesis, representation_premise * representation_hypothesis]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_242": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_249": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_162": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_256": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/runOnMNLI_CBOW.py": {
        "torch": {
            "device_162": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_172": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_189": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_190": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_191": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_192": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_193": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_196": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_197": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_198": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1200",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_200": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_201": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_202": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_241": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[representation_premise, representation_hypothesis, representation_premise - representation_hypothesis, representation_premise * representation_hypothesis]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_242": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_249": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_162": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_254": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3.py": {
        "torch": {
            "device_117": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_127": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "50",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_128": {
                "variable": {
                    "value": "self.position_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "30",
                    "type": "Constant",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "50",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_130": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_131": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_132": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_133": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_134": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_136": {
                "variable": {
                    "value": "self.first_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "350",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_137": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_138": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_140": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_141": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_142": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "stack_180": {
                "variable": {
                    "value": "relativeIndicesMatrix",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x + relevantPositions - WINDOW for x in range(len(input_words))]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_188": {
                "variable": {
                    "value": "context_word_embeddings_with_pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[context_word_embeddings.view(-1, numberOfFeatures, 150), position_layer.view(numberOfFeatures, 150).unsqueeze(0).expand(context_word_embeddings.size()[0], -1, -1), centralWord.expand(-1, numberOfFeatures, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "transpose_167": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b1.py": {
        "torch": {
            "device_118": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_128": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_131": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_132": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_133": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_134": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_135": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_138": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_139": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_141": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_142": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_143": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_145": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_171": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_178": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_118": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2.py": {
        "torch": {
            "device_119": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_129": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_132": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_133": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_134": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_135": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_136": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_139": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_140": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_142": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_143": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_144": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_146": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_174": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_181": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_recordClassificationErrors_glue_SST2.py": {
        "torch": {
            "device_108": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_118": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_121": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_122": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_123": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_124": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_125": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_128": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_131": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_132": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_133": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_135": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_169": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_176": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_108": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_182": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_recordClassificationErrors_glue_SST2_lstm.py": {
        "torch": {
            "device_108": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_118": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_121": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_122": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_123": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_124": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_125": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_128": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_131": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_132": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_133": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "LSTM_135": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "400",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_182": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_108": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_188": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_recordClassificationErrors_glue_SST2_lstm_PredictOnNeighbors.py": {
        "torch": {
            "device_108": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_118": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_121": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_122": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_123": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_124": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_125": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_128": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_131": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_132": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_133": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "LSTM_135": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "400",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_182": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_108": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_184": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_184": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_190": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives.py": {
        "torch": {
            "device_122": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "cat_411": {
                "variable": {
                    "value": "predictions_total",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[predictions_total, predictions.cpu()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_132": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_136": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_137": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_138": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_139": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_142": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_143": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_145": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_146": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_147": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_149": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_183": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_190": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_194": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE.py": {
        "torch": {
            "device_158": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_168": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_171": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_172": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_173": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_174": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_175": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_178": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_179": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_181": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_182": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_183": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_185": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_219": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_226": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_158": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_230": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_IndivCBOW.py": {
        "torch": {
            "device_158": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_168": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_185": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_186": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_187": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_188": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_189": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_192": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_193": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_194": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_196": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_197": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_198": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_230": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_237": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_158": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_242": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_IndivCBOW_TextClas.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_162": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_179": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_180": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_181": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_182": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_183": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_186": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_187": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_188": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_190": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_191": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_192": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_224": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_231": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_236": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_LSTM.py": {
        "torch": {
            "device_161": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_171": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_187": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_189": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_190": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_191": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_192": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_193": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_196": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_197": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_200": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_201": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_205": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_243": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_161": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_248": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_LSTM_PredictOnNeighbors.py": {
        "torch": {
            "device_162": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_172": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_188": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_190": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_191": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_192": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_193": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_194": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_197": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_198": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_201": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_202": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_206": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_252": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_162": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_255": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_255": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_267": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_LSTM_PredictOnNeighbors_QQP.py": {
        "torch": {
            "device_161": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_171": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_187": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_189": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_190": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_191": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_192": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_193": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_196": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_197": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_200": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_201": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_205": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_251": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_161": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_254": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_254": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_266": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_LSTM_TextClas.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_162": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_178": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "300",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_180": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_181": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_182": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_183": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_184": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_187": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_188": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_191": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_192": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_196": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_234": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_239": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_GLUE_PairsCBOW.py": {
        "torch": {
            "device_160": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Embedding_170": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "300",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_187": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_188": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_189": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_190": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_191": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_194": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_195": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(itos_labels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_196": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1200",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_198": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_199": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_200": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr_lm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_239": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[representation_premise, representation_hypothesis, representation_premise - representation_hypothesis, representation_premise * representation_hypothesis]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_240": {
                "variable": {
                    "value": "convolved",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(convolved)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_247": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_160": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_252": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_linear.py": {
        "torch": {
            "device_122": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "cat_412": {
                "variable": {
                    "value": "predictions_total",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[predictions_total, predictions.cpu()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_132": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_136": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_137": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_138": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_139": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_142": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_143": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_145": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_146": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_147": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_149": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_183": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_190": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_multi.py": {
        "torch": {
            "device_120": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "cat_404": {
                "variable": {
                    "value": "predictions_total",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[predictions_total, predictions.cpu()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_130": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_133": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_134": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_135": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_136": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_137": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_140": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_141": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "NUMBER_OF_CLASSES",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(set(label))",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_143": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_144": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_145": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_147": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_181": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_188": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_508": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[valuesPerVariant[x] for x in variants_dict[subset]]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_191": {
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/textClassification/textClassify_3_b2_runOnAlternatives_normalized.py": {
        "torch": {
            "device_122": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "cat_411": {
                "variable": {
                    "value": "predictions_total",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[predictions_total, predictions.cpu()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_132": {
                "variable": {
                    "value": "self.words_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(itos) + 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dropout2d_136": {
                "variable": {
                    "value": "self.inputDropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropoutRate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Softmax_137": {
                "variable": {
                    "value": "self.softmax_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_138": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_139": {
                "variable": {
                    "value": "self.logsoftmaxLabels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_142": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_143": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_145": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "numberOfFeatures",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(scipy.special.binom(2 * WINDOW, 3))",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_146": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduce": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_147": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_lm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.01",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv1d_149": {
                "variable": {
                    "value": "self.cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_183": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "convolved",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.cnn(words_layer.transpose(1, 2))",
                            "Call"
                        ],
                        [
                            "self.relu(convolved)",
                            "Call"
                        ],
                        [
                            "self.dropout(convolved)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_190": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "predicted[:, 0] < predicted[:, 1]",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "1 + 0 * target",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0 * target",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_194": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.output(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/CoLA/finetune_xlnet_cola_1.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_331": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_333": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_356": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_362": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_368": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_354": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_359": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_360": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_365": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_366": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_614": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_621": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_380": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__392": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_631": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_632": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_633": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_375": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_640": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_640": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_642": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_642": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_365": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_366": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_635": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_359": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_360": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/CoLA/generate9_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_422": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_429": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_439": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_440": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_441": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_448": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_448": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_450": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_450": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_443": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_423": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_430": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_440": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_441": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_442": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_448": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_448": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_450": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_450": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_444": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_d.py": {
        "torch": {
            "device_162": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_77": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_79": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_162": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_458": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_465": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_475": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_487": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_487": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_489": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_489": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_479": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_e.py": {
        "torch": {
            "device_163": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_78": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_80": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_459": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_466": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_478": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_480": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_f.py": {
        "torch": {
            "device_163": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_78": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_80": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_459": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_466": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_478": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_480": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_g.py": {
        "torch": {
            "device_163": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_78": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_80": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_459": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_466": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_478": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_480": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_h.py": {
        "torch": {
            "device_163": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_78": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_80": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_459": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_466": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_478": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_480": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MNLI/generate18_i.py": {
        "torch": {
            "device_163": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_78": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_80": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_459": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_466": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_478": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_488": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_490": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_480": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MRPC/finetune_xlnet_mrpc_20_c.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_361": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_363": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_386": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_392": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_398": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_384": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_389": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_390": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_396": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_699": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_706": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_410": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__422": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_716": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_717": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_718": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_405": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_725": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_725": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_727": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_727": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_395": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_396": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_720": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_389": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_390": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MRPC/generate20_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_448": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_455": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_465": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_466": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_467": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_473": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_473": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_475": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_475": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_469": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/MRPC/generate20_c_OnlySubsetsNoAlternatives.py": {
        "torch": {
            "device_150": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_151": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_150": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/QNLI/finetune_xlnet_qnli_22_c.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_338": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_340": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_363": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_369": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_375": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_361": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_366": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_367": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_372": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_373": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_647": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_654": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_387": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__399": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_664": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_665": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_666": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_382": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_673": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_673": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_675": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_675": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_372": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_373": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_668": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_366": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_367": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/QNLI/generate22_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_444": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_451": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_461": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_462": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_463": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_473": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_473": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_475": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_475": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_465": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/QNLI/generate22_d.py": {
        "torch": {
            "device_164": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_79": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_165": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_81": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_458": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_465": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_475": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_476": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_477": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_487": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_487": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_489": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_489": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_479": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/QQP/finetune_xlnet_qqp_11_c.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_342": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_344": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_367": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_373": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_379": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_365": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_370": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_371": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_376": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_377": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_649": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_656": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_391": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__403": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_666": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_667": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_668": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_386": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_675": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_675": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_677": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_677": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_376": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_377": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_670": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_370": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_371": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/QQP/generate11.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_414": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_421": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_431": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_432": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_433": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_440": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "outputs[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_440": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_442": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_442": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_435": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/QQP/generate11_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_435": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_442": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_452": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_453": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_454": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_461": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_461": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_463": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_463": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_456": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/RTE/generate12_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_425": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_432": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_442": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_443": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_444": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_450": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_450": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_452": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_452": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_446": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/RTE/generate12_c_OnlySubsetsNoAlternatives.py": {
        "torch": {
            "device_150": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_151": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_150": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/RTE/generate12_d.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_431": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_438": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_448": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_449": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_450": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_456": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_456": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_458": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_458": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_452": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/RTE/generate_stimuli_rte.py": {
        "torch": {}
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_335": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_337": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_360": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_366": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_372": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_358": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_363": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_364": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_369": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_370": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_631": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_638": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_384": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__396": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_648": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_649": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_650": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_379": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_657": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_657": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_659": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_659": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_369": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_370": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_652": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_363": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_364": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_335": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_337": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_373": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_379": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_385": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_371": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_376": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_377": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_382": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_383": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_653": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_660": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_403": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__415": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_670": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_671": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_672": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_398": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_679": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_679": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_681": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_681": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_382": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_383": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_674": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_376": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_377": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_391": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_397": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_389": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_394": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_400": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_679": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_686": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_421": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__433": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_696": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_697": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_416": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_400": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_401": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_700": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_394": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_395": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_391": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_397": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_389": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_394": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_400": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_679": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_686": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_421": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__433": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_696": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_697": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_416": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_400": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_401": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_700": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_394": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_395": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample_OnlySubsetsNoAlternatives.py": {
        "torch": {
            "device_153": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample_d.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_391": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_397": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_389": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_394": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_400": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_679": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_686": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_421": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__433": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_696": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_697": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_416": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_400": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_401": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_700": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_394": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_395": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample_e.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_351": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_389": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_387": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_392": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_393": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_398": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_399": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_677": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_684": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_419": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__431": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_694": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_695": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_696": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_414": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_703": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_703": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_705": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_705": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_398": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_399": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_698": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_392": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_393": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample_modelMode.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_392": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_398": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_404": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_390": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_396": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_402": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_681": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_688": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_422": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__434": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_699": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_700": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_417": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_707": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_709": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_709": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_401": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_402": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_702": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_395": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_396": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample_temp.py": {
        "torch": {
            "device_156": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_357": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_73": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_393": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_399": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_405": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_391": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_396": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_397": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_402": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_681": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_688": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_423": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__435": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_699": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_700": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_418": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_707": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_709": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_709": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_402": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_403": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_702": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_396": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_397": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_large_sample_temp_d.py": {
        "torch": {
            "device_156": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_357": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_73": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_393": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_399": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_405": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_391": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_396": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_397": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_402": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_681": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_688": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_423": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__435": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_699": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_700": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_418": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_707": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_709": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_709": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_402": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_403": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_702": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_396": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_397": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_c_sentBreak_new_sample.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_391": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_397": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_389": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_394": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_400": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_679": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_686": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_421": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__433": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_696": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_697": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_698": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_416": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_705": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_707": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_400": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_401": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_700": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_394": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_395": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_d.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_335": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_337": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_360": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_366": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_372": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_358": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_363": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_364": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_369": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_370": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_631": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_638": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_384": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__396": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_648": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_649": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_650": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_379": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_657": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_657": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_659": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_659": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_369": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_370": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_652": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_363": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_364": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_d_sentBreak.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_335": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_337": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_373": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_379": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_385": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_371": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_376": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_377": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_382": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_383": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_659": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_666": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_403": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__415": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_676": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_677": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_678": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_398": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_685": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_685": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_687": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_687": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_382": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_383": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_680": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_376": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_377": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/finetune_xlnet_sst2_10_e.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_335": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_337": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_360": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_366": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_372": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_358": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_363": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_364": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_369": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_370": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_631": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_638": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_384": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__396": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_648": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_649": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_650": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_379": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_657": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_657": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_659": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_659": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_369": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_370": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_652": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_363": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_364": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/generate10.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_402": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_409": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_419": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_420": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_421": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_428": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "outputs[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_428": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_430": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_430": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_423": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/SST2/generate10_b2.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_402": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_409": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_419": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_420": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_421": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_428": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_428": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_430": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_430": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_423": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/STS-B/generate21_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_428": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_435": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_445": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_446": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_447": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_453": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_453": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_455": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_455": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_449": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/WSC/generate6.py": {
        "torch": {
            "device_149": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_68": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_150": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_70": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_420": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_427": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_437": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_438": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_439": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_446": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "outputs[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_446": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_448": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_448": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_441": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/WSC/generate6_c.py": {
        "torch": {
            "device_148": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_446": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_453": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_463": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_464": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_465": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_471": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_471": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_473": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_473": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_467": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/WSC/generate6_c_OnlySubsetsNoAlternatives.py": {
        "torch": {
            "device_146": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/GLUE/WSC/generate6_d.py": {
        "torch": {
            "device_148": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_446": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_453": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_463": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_464": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_465": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_471": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_471": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_473": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_473": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_467": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/Parsing/generate7_c.py": {
        "torch": {
            "device_148": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_441": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_448": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_458": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_459": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_460": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_467": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_467": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_469": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_469": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_462": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/Parsing/generate7_c_ChangeAll.py": {
        "torch": {
            "device_148": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_441": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_448": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_458": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_459": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_460": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_467": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_467": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_469": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_469": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_462": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/syntaxgym/generate248_c.py": {
        "torch": {
            "device_153": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_68": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_70": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_456": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_463": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_473": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_474": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_475": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_485": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_485": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_487": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_487": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_477": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/syntaxgym/generate260_c.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_455": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_462": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_472": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_473": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_474": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_484": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_484": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_486": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_486": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_476": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/textclas/finetune_xlnet_textclas_8.py": {
        "torch": {
            "device_154": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_375": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_377": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_71": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_400": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_406": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_412": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_398": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_404": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_409": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_410": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_665": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_672": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_424": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__436": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_682": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_683": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_684": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_419": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_691": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_691": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_693": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_693": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_409": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_410": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_686": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_403": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_404": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/textclas/finetune_xlnet_textclas_8_d.py": {
        "torch": {
            "device_153": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_68": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_387": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_389": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, encoded.size()[1] - LENGTH_OF_INITIAL_PART, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_70": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_412": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_418": {
                "variable": {
                    "value": "per_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "per_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_424": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_410": {
                "variable": {
                    "value": "input_idss[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_idss[i], torch.LongTensor([6 for _ in range(maxInputLength - input_idss[i].size()[1])]).cuda().view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_415": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, maxInputLength - per_masks[i].size()[1], per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_416": {
                "variable": {
                    "value": "per_masks[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[per_masks[i], 1.0 + torch.zeros(1, per_masks[i].size()[1], maxInputLength - per_masks[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_421": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1], target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_422": {
                "variable": {
                    "value": "target_mappings[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_mappings[i], torch.zeros(1, maxInputLength - LENGTH_OF_INITIAL_PART, maxInputLength - target_mappings[i].size()[2]).cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_684": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_691": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_436": {
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__448": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_701": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_702": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_703": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_431": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_710": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_710": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_712": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_712": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_421": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART - target_mappings[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "target_mappings[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_422": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - LENGTH_OF_INITIAL_PART",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - target_mappings[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_705": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_415": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "maxInputLength - per_masks[i].size()[1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "per_masks[i].size()[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_416": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "per_masks[i].size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "maxInputLength - per_masks[i].size()[2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/textclas/generate8.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_441": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_448": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_458": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_459": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_460": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_467": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "outputs[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_467": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_469": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_469": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_462": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/textclas/generate8_b.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_454": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_461": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_471": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_472": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_473": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_480": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_480": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_482": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_482": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_475": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/textclas/generate8_b2.py": {
        "torch": {
            "device_152": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_69": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_471": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_ids.shape[1], input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_478": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, input_ids.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_488": {
                "variable": {
                    "value": "perm_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "perm_masks",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_489": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_idss",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_490": {
                "variable": {
                    "value": "target_mapping",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mappings",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_497": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_token_logits + GENERATION_VOCABULARY_MASK",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_497": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multinomial_499": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.softmax(next_token_logits + GENERATION_VOCABULARY_MASK, dim=-1).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_499": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_492": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/xlnet/textclas/generate_stimuli_mr.py": {
        "torch": {}
    }
}