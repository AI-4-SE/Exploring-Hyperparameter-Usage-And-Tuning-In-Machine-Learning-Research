{
    "op.py": {
        "sklearn": {
            "mean_squared_error_66": {
                "variable": {
                    "value": "mse",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test.argmax(axis=-1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predicted.argmax(axis=-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_absolute_error_67": {
                "variable": {
                    "value": "mae",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test.argmax(axis=-1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predicted.argmax(axis=-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cohen_kappa_score_68": {
                "variable": {
                    "value": "co_kap_sco",
                    "type": "Variable",
                    "possible_values": []
                },
                "y1": {
                    "value": "Y_test.argmax(axis=-1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y2": {
                    "value": "predicted.argmax(axis=-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "accuracy_score_69": {
                "variable": {
                    "value": "acc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "StratifiedShuffleSplit_100": {
                "variable": {
                    "value": "train_test_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "test_size": {
                    "value": "testSize",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.3",
                            "MethodArgument"
                        ]
                    ]
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "average_precision_score_76": {
                "variable": {
                    "value": "avg_pre_sco",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_score": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "weighted",
                    "type": "str",
                    "possible_values": []
                },
                "pos_label": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "precision_score_77": {
                "variable": {
                    "value": "precision",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "f1_avg",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'binary'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ]
                    ]
                },
                "pos_label": {
                    "value": "pos_label",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "recall_score_78": {
                "variable": {
                    "value": "recall",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "f1_avg",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'binary'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ]
                    ]
                },
                "pos_label": {
                    "value": "pos_label",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "f1_score_79": {
                "variable": {
                    "value": "f1_sc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "f1_avg",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'binary'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ]
                    ]
                },
                "pos_label": {
                    "value": "pos_label",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "average_precision_score_81": {
                "variable": {
                    "value": "avg_pre_sco",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_score": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "weighted",
                    "type": "str",
                    "possible_values": []
                }
            },
            "precision_score_82": {
                "variable": {
                    "value": "precision",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "f1_avg",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'binary'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ]
                    ]
                }
            },
            "recall_score_83": {
                "variable": {
                    "value": "recall",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "f1_avg",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'binary'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ]
                    ]
                }
            },
            "f1_score_84": {
                "variable": {
                    "value": "f1_sc",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "Y_test",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Y_test.argmax(axis=-1)",
                            "Call"
                        ],
                        [
                            "Y[test]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "predicted.argmax(axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "f1_avg",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'binary'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ],
                        [
                            "'weighted'",
                            "Constant"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "to_categorical_91": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "input.ravel()",
                    "type": "Call",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "numOfClasses",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[2, 2, 2, 4]",
                            "List"
                        ]
                    ]
                }
            },
            "to_categorical_93": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "numOfClasses",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[2, 2, 2, 4]",
                            "List"
                        ]
                    ]
                }
            },
            "EarlyStopping_119": {
                "monitor": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "patience",
                    "type": "Variable",
                    "possible_values": []
                },
                "min_delta": {
                    "value": "min_delta",
                    "type": "Variable",
                    "possible_values": []
                },
                "mode": {
                    "value": "auto",
                    "type": "str",
                    "possible_values": []
                },
                "restore_best_weights": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_120": {
                "filepath": {
                    "value": "SaveMatFileName + '.ckpt'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "monitor": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "mode": {
                    "value": "auto",
                    "type": "str",
                    "possible_values": []
                },
                "save_weights_only": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CSVLogger_121": {
                "filename": {
                    "value": "SaveMatFileName + '.csv'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "append": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "EnKLayer.py": {
        "tensorflow": {
            "conv2d_50": {
                "variable": {
                    "value": "Part2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data_format": {
                    "value": "NCHW",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reshape_54": {
                "variable": {
                    "value": "encoding_vector2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoding_vector1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.range(0, self.InputData_shape[2], 1, dtype=tf.float32) * self.scaleFactor",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, 1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "multiply_57": {
                "variable": {
                    "value": "Part3",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "Part2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(input, self.kernel, data_format='NCHW', padding='SAME')",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "encoding_vector2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(encoding_vector1, [1, 1, 1, -1])",
                            "Call"
                        ]
                    ]
                }
            },
            "add_60": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "Part1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.conv2DOutput",
                            "Attribute"
                        ]
                    ]
                },
                "y": {
                    "value": "Part3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.multiply(Part2, encoding_vector2)",
                            "Call"
                        ]
                    ]
                }
            },
            "range_53": {
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "GradCam/grad_cam.py": {
        "tensorflow": {
            "disable_eager_execution_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_img_44": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "path": {
                    "value": "img_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sys.argv[1]",
                            "Subscript"
                        ]
                    ]
                },
                "target_size": {
                    "value": "(224, 224)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "img_to_array_45": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "img": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "image.load_img(img_path, target_size=(224, 224))",
                            "Call"
                        ]
                    ]
                }
            },
            "preprocess_input_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "preprocess_input(x)",
                            "Call"
                        ],
                        [
                            "np.squeeze(x)",
                            "Call"
                        ],
                        [
                            "x * 255",
                            "BinOp"
                        ],
                        [
                            "np.clip(x, 0, 1)",
                            "Call"
                        ],
                        [
                            "x.transpose((1, 2, 0))",
                            "Call"
                        ],
                        [
                            "np.clip(x, 0, 255).astype('uint8')",
                            "Call"
                        ],
                        [
                            "Lambda(target_layer, output_shape=target_category_loss_output_shape)(input_model.output)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_62": {
                "variable": {
                    "value": "max_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "layer_output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "layer_dict[activation_layer].output",
                            "Attribute"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "get_default_graph_67": {
                "variable": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "gradients_107": {
                "variable": {
                    "value": "grads",
                    "type": "Variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "xs": {
                    "value": "var_list",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Model_114": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_model.input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "outputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "preprocess_input(x)",
                            "Call"
                        ],
                        [
                            "np.squeeze(x)",
                            "Call"
                        ],
                        [
                            "x * 255",
                            "BinOp"
                        ],
                        [
                            "np.clip(x, 0, 1)",
                            "Call"
                        ],
                        [
                            "x.transpose((1, 2, 0))",
                            "Call"
                        ],
                        [
                            "np.clip(x, 0, 255).astype('uint8')",
                            "Call"
                        ],
                        [
                            "Lambda(target_layer, output_shape=target_category_loss_output_shape)(input_model.output)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_116": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "model.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_147": {
                "variable": {
                    "value": "reshaped_image",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "image.shape[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "image.shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "multiply_33": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "preprocess_input(x)",
                            "Call"
                        ],
                        [
                            "np.squeeze(x)",
                            "Call"
                        ],
                        [
                            "x * 255",
                            "BinOp"
                        ],
                        [
                            "np.clip(x, 0, 1)",
                            "Call"
                        ],
                        [
                            "x.transpose((1, 2, 0))",
                            "Call"
                        ],
                        [
                            "np.clip(x, 0, 255).astype('uint8')",
                            "Call"
                        ],
                        [
                            "Lambda(target_layer, output_shape=target_category_loss_output_shape)(input_model.output)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "K.one_hot([category_index], nb_classes)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "function_64": {},
            "VGG16_80": {
                "variable": {
                    "value": "new_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "weights": {
                    "value": "imagenet",
                    "type": "str",
                    "possible_values": []
                }
            },
            "one_hot_33": {
                "indices": {
                    "value": "[category_index]",
                    "type": "List",
                    "possible_values": []
                },
                "depth": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "RegisterGradient_52": {
                "op_type": {
                    "value": "GuidedBackProp",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_63": {
                "ys": {
                    "value": "K.sum(max_output)",
                    "type": "Call",
                    "possible_values": []
                },
                "xs": {
                    "value": "input_img",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model.input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "image_data_format_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Lambda_113": {
                "function": {
                    "value": "target_layer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "lambda x: target_category_loss(x, category_index, nb_classes)",
                            "Lambda"
                        ]
                    ]
                },
                "output_shape": {
                    "value": "target_category_loss_output_shape",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sqrt_40": {
                "x": {
                    "value": "K.mean(K.square(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_63": {
                "a": {
                    "value": "max_output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "K.max(layer_output, axis=3)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_108": {
                "input": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mean_40": {
                "a": {
                    "value": "K.square(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cast_56": {
                "x": {
                    "value": "op.inputs[0] > 0.0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "op.inputs[0].dtype",
                            "Attribute"
                        ]
                    ]
                }
            },
            "square_40": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "preprocess_input(x)",
                            "Call"
                        ],
                        [
                            "np.squeeze(x)",
                            "Call"
                        ],
                        [
                            "x * 255",
                            "BinOp"
                        ],
                        [
                            "np.clip(x, 0, 1)",
                            "Call"
                        ],
                        [
                            "x.transpose((1, 2, 0))",
                            "Call"
                        ],
                        [
                            "np.clip(x, 0, 255).astype('uint8')",
                            "Call"
                        ],
                        [
                            "Lambda(target_layer, output_shape=target_category_loss_output_shape)(input_model.output)",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_55": {
                "x": {
                    "value": "grad > 0.0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "op.inputs[0].dtype",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "main.py": {
        "tensorflow": {}
    },
    "modelRun.py": {
        "tensorflow": {
            "clear_session_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models.py": {
        "tensorflow": {
            "disable_v2_behavior_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Input_46": {
                "variable": {
                    "value": "input1",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_93": {
                "variable": {
                    "value": "input1",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_142": {
                "variable": {
                    "value": "input1",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_193": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_222": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_252": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_284": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_333": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_384": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_439": {
                "variable": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(1000, 1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_79": {
                "inputs": {
                    "value": "input1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_128": {
                "inputs": {
                    "value": "input1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_177": {
                "inputs": {
                    "value": "input1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input(shape=(1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "square_181": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_185": {
                "x": {
                    "value": "K.clip(x, min_value=1e-07, max_value=10000)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Model_215": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_246": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_278": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_326": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_377": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_431": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_459": {
                "inputs": {
                    "value": "input_main",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1, Chans, Samples))",
                            "Call"
                        ],
                        [
                            "Input((1000, 1, Chans, Samples))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "softmax",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax', name='softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ],
                        [
                            "Activation('softmax')(dense)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2D_48": {
                "filters": {
                    "value": "F1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, kernLength)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_55": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DepthwiseConv2D_56": {
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "depth_multiplier": {
                    "value": "D",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "depthwise_constraint": {
                    "value": "max_norm(1.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNormalization_60": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Activation_61": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AveragePooling2D_63": {
                "pool_size": {
                    "value": "(1, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "SeparableConv2D_66": {
                "filters": {
                    "value": "F2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 16)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_68": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Activation_69": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AveragePooling2D_70": {
                "pool_size": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_73": {
                "name": {
                    "value": "flatten",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_75": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "dense",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(norm_rate)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_77": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GaussianNoise_95": {
                "stddev": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_97": {
                "filters": {
                    "value": "F1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, kernLength)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_104": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DepthwiseConv2D_105": {
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "depth_multiplier": {
                    "value": "D",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "depthwise_constraint": {
                    "value": "max_norm(1.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNormalization_109": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Activation_110": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AveragePooling2D_112": {
                "pool_size": {
                    "value": "(1, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "SeparableConv2D_115": {
                "filters": {
                    "value": "F2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 16)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_117": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Activation_118": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AveragePooling2D_119": {
                "pool_size": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_122": {
                "name": {
                    "value": "flatten",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_124": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "dense",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(norm_rate)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_126": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_144": {
                "filters": {
                    "value": "F1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, kernLength)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GaussianNoise_148": {
                "stddev": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "BatchNormalization_153": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DepthwiseConv2D_154": {
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "depth_multiplier": {
                    "value": "D",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "depthwise_constraint": {
                    "value": "max_norm(1.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNormalization_158": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Activation_159": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AveragePooling2D_161": {
                "pool_size": {
                    "value": "(1, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "SeparableConv2D_164": {
                "filters": {
                    "value": "F2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 16)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_166": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Activation_167": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AveragePooling2D_168": {
                "pool_size": {
                    "value": "(1, 8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_171": {
                "name": {
                    "value": "flatten",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_173": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "dense",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(norm_rate)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_175": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "clip_185": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "min_value": {
                    "value": "1e-07",
                    "type": "float",
                    "possible_values": []
                },
                "max_value": {
                    "value": "10000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_195": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 13)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_204": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_206": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_207": {
                "activation": {
                    "value": "square",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AveragePooling2D_208": {
                "pool_size": {
                    "value": "(1, 35)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Activation_209": {
                "activation": {
                    "value": "log",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_210": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_211": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_212": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_213": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GaussianNoise_224": {
                "stddev": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_226": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 13)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_235": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_237": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_238": {
                "activation": {
                    "value": "square",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AveragePooling2D_239": {
                "pool_size": {
                    "value": "(1, 35)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Activation_240": {
                "activation": {
                    "value": "log",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_241": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_242": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_243": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_244": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_256": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 13)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GaussianNoise_260": {
                "stddev": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_267": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_269": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_270": {
                "activation": {
                    "value": "square",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AveragePooling2D_271": {
                "pool_size": {
                    "value": "(1, 35)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Activation_272": {
                "activation": {
                    "value": "log",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_273": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_274": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_275": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_276": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_286": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_293": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_295": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_296": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_297": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_298": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_300": {
                "filters": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_302": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_303": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_304": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_305": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_307": {
                "filters": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_309": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_310": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_311": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_312": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_314": {
                "filters": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_316": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_317": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_318": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_319": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_321": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_323": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_324": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GaussianNoise_335": {
                "stddev": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_337": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_344": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_346": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_347": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_348": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_349": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_351": {
                "filters": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_353": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_354": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_355": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_356": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_358": {
                "filters": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_360": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_361": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_362": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_363": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_365": {
                "filters": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_367": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_368": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_369": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_370": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_372": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_374": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_375": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_388": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "(1, Chans, Samples)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GaussianNoise_392": {
                "stddev": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_398": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_400": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_401": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_402": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_403": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_405": {
                "filters": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_407": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_408": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_409": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_410": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_412": {
                "filters": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_414": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_415": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_416": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_417": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2D_419": {
                "filters": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_421": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_422": {
                "activation": {
                    "value": "elu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_423": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_424": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_426": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_428": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_429": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvLSTM2D_441": {
                "filters": {
                    "value": "F1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, kernLength)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_448": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(Chans, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(2.0, axis=(0, 1, 2))",
                    "type": "Call",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_450": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_451": {
                "activation": {
                    "value": "square",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AveragePooling2D_452": {
                "pool_size": {
                    "value": "(1, 35)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Activation_453": {
                "activation": {
                    "value": "log",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_454": {
                "rate": {
                    "value": "dropoutRate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ],
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Flatten_455": {
                "data_format": {
                    "value": "channels_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_456": {
                "units": {
                    "value": "nb_classes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "max_norm(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Activation_457": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}