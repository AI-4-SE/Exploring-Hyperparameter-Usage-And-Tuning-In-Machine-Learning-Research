{
    "ERM-IRM/IRM_exhaustive_argparse_hper_wo_disc_Sep8.py": {
        "sklearn": {},
        "tensorflow": {
            "enable_eager_execution_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "torch": {
            "manual_seed_68": {
                "seed": {
                    "value": "args['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "set_num_threads_70": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_139": {
                "seed": {
                    "value": "args['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "set_num_threads_141": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "ERM-IRM/IRM_methods.py": {
        "sklearn": {
            "shuffle_209": {
                "variable": {
                    "value": "(xt, yt, et)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_2": {
                    "value": "e_in",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_71": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_72": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_193": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "constant_202": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_246": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_247": {
                "variable": {
                    "value": "val_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_248": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_144": {
                "variable": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.nn.softmax(y_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_150": {
                "variable": {
                    "value": "ent_0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(y_p, ind_0)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "reduce_sum_151": {
                "variable": {
                    "value": "ent_1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_p1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(y_p, ind_1)[:, 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "SparseCategoricalCrossentropy_173": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Mean_210": {
                "variable": {
                    "value": "epoch_loss_avg",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_211": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_50": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "softmax_144": {
                "logits": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "where_146": {
                "condition": {
                    "value": "y == 0",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "where_147": {
                "condition": {
                    "value": "y == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "gather_148": {
                "params": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "ind_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.where(y == 0)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "gather_149": {
                "params": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "ind_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.where(y == 1)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "GradientTape_165": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_187": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_226": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "shape_145": {
                "input": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "ERM-IRM/data_construct.py": {
        "sklearn": {
            "KFold_101": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_191": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_268": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_397": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_23": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_131": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_212": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_291": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "ERM-IRM/models_crossval_Sep8.py": {
        "sklearn": {
            "LinearRegression_117": {
                "variable": {
                    "value": "reg",
                    "type": "variable",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LinearRegression_145": {
                "variable": {
                    "value": "reg",
                    "type": "variable",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LinearRegression_174": {
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "Parameter_59": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.eye(dim_x, dim_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_60": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_63": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[self.phi]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args['lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MSELoss_64": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x for (x, y) in environments]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "y_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y for (x, y) in environments]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Tensor_175": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_148": {
                "variable": {
                    "value": "self.coefficients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "self.coefficients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_all.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "eye_59": {
                "n": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "m": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_71": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_71": {
                "outputs": {
                    "value": "error_e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loss(x_e @ self.phi @ self.w, y_e)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "IRM_ITE/models.py": {
        "sklearn": {
            "LinearRegression_39": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearRegression_81": {
                "variable": {
                    "value": "regressor0",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearRegression_82": {
                "variable": {
                    "value": "regressor1",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RidgeCV_41": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "alphas": {
                    "value": "[0.001, 0.01, 0.1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "RidgeCV_84": {
                "variable": {
                    "value": "regressor0",
                    "type": "variable",
                    "possible_values": []
                },
                "alphas": {
                    "value": "[0.001, 0.01, 0.1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "RidgeCV_85": {
                "variable": {
                    "value": "regressor1",
                    "type": "variable",
                    "possible_values": []
                },
                "alphas": {
                    "value": "[0.001, 0.01, 0.1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "IRM_games/IRM_methods.py": {
        "sklearn": {
            "shuffle_481": {
                "variable": {
                    "value": "(xt, yt, et)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_2": {
                    "value": "e_in",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_94": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_242": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_244": {
                "*arrays_0": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_145": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_146": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_148": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_153": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_297": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_298": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_302": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_310": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_372": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_373": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_466": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "constant_475": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_505": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_506": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_48": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_50": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_190": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_192": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_417": {
                "variable": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.nn.softmax(y_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_423": {
                "variable": {
                    "value": "ent_0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(y_p, ind_0)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "reduce_sum_424": {
                "variable": {
                    "value": "ent_1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_p1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(y_p, ind_1)[:, 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "SparseCategoricalCrossentropy_446": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Mean_482": {
                "variable": {
                    "value": "epoch_loss_avg",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_483": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_112": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_115": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_263": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_267": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_493": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_73": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "GradientTape_205": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_350": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "softmax_417": {
                "logits": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "where_419": {
                "condition": {
                    "value": "y == 0",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "where_420": {
                "condition": {
                    "value": "y == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "gather_421": {
                "params": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "ind_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.where(y == 0)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "gather_422": {
                "params": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "ind_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.where(y == 1)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "GradientTape_438": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_460": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_217": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Adam_219": {
                "learning_rate": {
                    "value": "learning_rate * 0.1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "shape_418": {
                "input": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "IRM_games/data_construct.py": {
        "sklearn": {
            "KFold_101": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_176": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_125": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/Colored_MNIST_comparison/IRM_methods.py": {
        "sklearn": {
            "shuffle_941": {
                "variable": {
                    "value": "(xt, yt, et)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_2": {
                    "value": "e_in",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_94": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_239": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_384": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_541": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_543": {
                "*arrays_0": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_701": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shuffle_703": {
                "*arrays_0": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_145": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_146": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_148": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_153": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_292": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_293": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_295": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_300": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_442": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_443": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_445": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_450": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_597": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_598": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_602": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_610": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_756": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_757": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_761": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_769": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_832": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_833": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_926": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "constant_935": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_965": {
                "variable": {
                    "value": "train_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_966": {
                "variable": {
                    "value": "test_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_48": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_50": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_192": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_194": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_337": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_339": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_488": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_490": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalCrossentropy_649": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_651": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_877": {
                "variable": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.nn.softmax(y_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_883": {
                "variable": {
                    "value": "ent_0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(y_p, ind_0)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "reduce_sum_884": {
                "variable": {
                    "value": "ent_1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_p1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(y_p, ind_1)[:, 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "SparseCategoricalCrossentropy_906": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Mean_942": {
                "variable": {
                    "value": "epoch_loss_avg",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_943": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_112": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_115": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_259": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_262": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_409": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_412": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_563": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_567": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_722": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ],
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_726": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseCategoricalAccuracy_953": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_73": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "GradientTape_203": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_217": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "GradientTape_348": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_362": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "GradientTape_503": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_664": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_810": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "softmax_877": {
                "logits": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "where_879": {
                "condition": {
                    "value": "y == 0",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "where_880": {
                "condition": {
                    "value": "y == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "gather_881": {
                "params": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "ind_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.where(y == 0)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "gather_882": {
                "params": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "ind_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.where(y == 1)[:, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "GradientTape_898": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_920": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clip_by_value_255": {
                "t": {
                    "value": "model_list[countp].weights[-2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-w_sup",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "w_sup",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "float"
                        ],
                        [
                            "0.1",
                            "float"
                        ],
                        [
                            "0.1",
                            "float"
                        ]
                    ]
                }
            },
            "clip_by_value_405": {
                "t": {
                    "value": "model_list[countp].weights[-2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-w_sup",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "w_sup",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "float"
                        ],
                        [
                            "0.1",
                            "float"
                        ],
                        [
                            "0.1",
                            "float"
                        ]
                    ]
                }
            },
            "Adam_515": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Adam_517": {
                "learning_rate": {
                    "value": "learning_rate * 0.1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_676": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ],
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Adam_678": {
                "learning_rate": {
                    "value": "learning_rate * 0.1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "shape_878": {
                "input": {
                    "value": "y_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.math.log(tf.nn.softmax(y_pred))",
                            "Call"
                        ]
                    ]
                }
            },
            "clip_by_value_561": {
                "t": {
                    "value": "model_list[countp].weights[-2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-w_sup",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "w_sup",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "float"
                        ],
                        [
                            "0.1",
                            "float"
                        ],
                        [
                            "0.1",
                            "float"
                        ]
                    ]
                }
            },
            "sign_400": {
                "x": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "grads",
                            "variable"
                        ]
                    ]
                }
            }
        }
    },
    "LRG_games/Colored_MNIST_comparison/data_construct.py": {
        "sklearn": {
            "KFold_98": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_209": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_284": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "n_e",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_20": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_data_233": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/ERM_per_env/irm_games_regression.py": {
        "sklearn": {
            "shuffle_111": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MeanSquaredError_182": {
                "variable": {
                    "value": "train_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MeanSquaredError_183": {
                "variable": {
                    "value": "test_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_185": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_190": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MeanSquaredError_48": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_50": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_131": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MeanSquaredError_134": {
                "variable": {
                    "value": "epoch_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_80": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_like_141": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[i][1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_list[k][1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MeanSquaredError_144": {
                "variable": {
                    "value": "epoch_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "LRG_games/ERM_per_env/models_crossval_Sep8.py": {
        "sklearn": {
            "LinearRegression_117": {
                "variable": {
                    "value": "reg",
                    "type": "variable",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LinearRegression_145": {
                "variable": {
                    "value": "reg",
                    "type": "variable",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LinearRegression_174": {
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "Parameter_59": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.eye(dim_x, dim_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_60": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_63": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[self.phi]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args['lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MSELoss_64": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x for (x, y) in environments]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "y_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y for (x, y) in environments]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Tensor_175": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_148": {
                "variable": {
                    "value": "self.coefficients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "self.coefficients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_all.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "eye_59": {
                "n": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "m": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_71": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_71": {
                "outputs": {
                    "value": "error_e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loss(x_e @ self.phi @ self.w, y_e)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/IRMv1_regression/models_v1.py": {
        "sklearn": {
            "LinearRegression_117": {
                "variable": {
                    "value": "reg",
                    "type": "variable",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LinearRegression_145": {
                "variable": {
                    "value": "reg",
                    "type": "variable",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LinearRegression_174": {
                "fit_intercept": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "Parameter_59": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.eye(dim_x, dim_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_60": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_63": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[self.phi]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args['lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MSELoss_64": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x for (x, y) in environments]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "y_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y for (x, y) in environments]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Tensor_176": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_148": {
                "variable": {
                    "value": "self.coefficients",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "self.coefficients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_all.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "eye_59": {
                "n": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "m": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_71": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_71": {
                "outputs": {
                    "value": "error_e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loss(x_e @ self.phi @ self.w, y_e)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/irm_games_regression.py": {
        "sklearn": {
            "shuffle_111": {
                "*arrays_0": {
                    "value": "x_e",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_e",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "enable_eager_execution_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MeanSquaredError_182": {
                "variable": {
                    "value": "train_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MeanSquaredError_183": {
                "variable": {
                    "value": "test_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_185": {
                "variable": {
                    "value": "ytr_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_190": {
                "variable": {
                    "value": "yts_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_test[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MeanSquaredError_48": {
                "variable": {
                    "value": "loss_object",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_50": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_131": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[0][1]",
                            "Subscript"
                        ],
                        [
                            "np.concatenate((y_in, y_c), axis=0)",
                            "Call"
                        ],
                        [
                            "self.y_in",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MeanSquaredError_134": {
                "variable": {
                    "value": "epoch_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_80": {
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_like_141": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_tuple_list[i][1]",
                            "Subscript"
                        ],
                        [
                            "data_tuple_list[k][1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MeanSquaredError_144": {
                "variable": {
                    "value": "epoch_error",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "ERM-IRM/sem_Sep8.py": {
        "torch": {
            "cat_68": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.wxy.sum(1), torch.zeros(self.dim))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "eye_25": {
                "variable": {
                    "value": "self.wxy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "qr_38": {
                "variable": {
                    "value": "(self.scramble, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.randn(dim, dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "eye_40": {
                "variable": {
                    "value": "self.scramble",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_62": {
                "variable": {
                    "value": "self.whx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_63": {
                "variable": {
                    "value": "self.why",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "self.whz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_28": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_30": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_72": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_32": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_38": {
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_51": {
                "variable": {
                    "value": "self.whx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_52": {
                "variable": {
                    "value": "self.why",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_53": {
                "variable": {
                    "value": "self.whz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_73": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_78": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_81": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_84": {
                "tensors": {
                    "value": "(x, z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_34": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_45": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_46": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_47": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_77": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_82": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_57": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_58": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_59": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "IRM_ITE/irm_block.py": {
        "torch": {
            "from_numpy_65": {
                "variable": {
                    "value": "X_test",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "X_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_test.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(X_test)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_66": {
                "variable": {
                    "value": "T_control",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "X_test.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_67": {
                "variable": {
                    "value": "T_treatment",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "X_test.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_69": {
                "variable": {
                    "value": "ones_testing",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "X_test.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "featuresTest_control",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ones_testing, X_test, T_control, torch.mul(X_test, T_control))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "featuresTest_treatment",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ones_testing, X_test, T_treatment, torch.mul(X_test, T_treatment))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_54": {
                "variable": {
                    "value": "X_",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_train[E_index, :]",
                            "Subscript"
                        ],
                        [
                            "X_train[E_index, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_55": {
                "variable": {
                    "value": "T_",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "T_train[E_index, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_56": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_train[E_index, :]",
                            "Subscript"
                        ],
                        [
                            "y_train[E_index, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_57": {
                "variable": {
                    "value": "XT_",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "XT",
                    "type": "variable",
                    "possible_values": [
                        [
                            "XT_train[E_index, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_59": {
                "variable": {
                    "value": "ones_training",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "X.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ones_training, X_, T_, XT_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_97": {
                "variable": {
                    "value": "X_",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_train[E_index, :]",
                            "Subscript"
                        ],
                        [
                            "X_train[E_index, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_98": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_train[E_index, :]",
                            "Subscript"
                        ],
                        [
                            "y_train[E_index, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_100": {
                "variable": {
                    "value": "ones_training",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "X.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_101": {
                "variable": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ones_training, X_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_192": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.eye(dim_x, dim_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_193": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_196": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[self.phi]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_197": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_70": {
                "input": {
                    "value": "X_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_test.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(X_test)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "T_control",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(X_test.size()[0], 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "mul_71": {
                "input": {
                    "value": "X_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "X_test.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(X_test)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "T_treatment",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(X_test.size()[0], 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_192": {
                "n": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                },
                "m": {
                    "value": "dim_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "environments[0][0].size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_204": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_204": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_204": {
                "outputs": {
                    "value": "error_e",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loss(x_e @ self.phi @ self.w, y_e)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "IRM_ITE/vary_dim_size.py": {
        "torch": {
            "cat_56": {
                "variable": {
                    "value": "features_IRM_T",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.ones(X_test.shape[0], 1), torch.from_numpy(X_test.astype(np.float32)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_56": {
                "*size": {
                    "value": "X_test.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_56": {
                "ndarray": {
                    "value": "X_test.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/ERM_per_env/IRM_exhaustive_argparse_hper_wo_disc_Sep8.py": {
        "torch": {
            "manual_seed_66": {
                "seed": {
                    "value": "args['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "set_num_threads_68": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_137": {
                "seed": {
                    "value": "args['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "set_num_threads_139": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/ERM_per_env/sem_Sep8.py": {
        "torch": {
            "cat_68": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.wxy.sum(1), torch.zeros(self.dim))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "eye_25": {
                "variable": {
                    "value": "self.wxy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "qr_38": {
                "variable": {
                    "value": "(self.scramble, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.randn(dim, dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "eye_40": {
                "variable": {
                    "value": "self.scramble",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_62": {
                "variable": {
                    "value": "self.whx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_63": {
                "variable": {
                    "value": "self.why",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "self.whz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_28": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_30": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_72": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_74": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_32": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_38": {
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_51": {
                "variable": {
                    "value": "self.whx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_52": {
                "variable": {
                    "value": "self.why",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_53": {
                "variable": {
                    "value": "self.whz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_78": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_81": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_84": {
                "tensors": {
                    "value": "(x, z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_34": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_45": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_46": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_47": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_77": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_82": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_57": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_58": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_59": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/IRMv1_regression/main_v1.py": {
        "torch": {
            "manual_seed_45": {
                "seed": {
                    "value": "args['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "set_num_threads_47": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_138": {
                "seed": {
                    "value": "args['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "set_num_threads_140": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LRG_games/IRMv1_regression/sem.py": {
        "torch": {
            "cat_39": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.wxy.sum(1), torch.zeros(self.dim))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "eye_18": {
                "variable": {
                    "value": "self.wxy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_19": {
                "variable": {
                    "value": "self.wyz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "qr_25": {
                "variable": {
                    "value": "(self.scramble, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.randn(dim, dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "eye_27": {
                "variable": {
                    "value": "self.scramble",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_34": {
                "variable": {
                    "value": "self.whx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "m": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_35": {
                "variable": {
                    "value": "self.why",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "self.whz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_43": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_21": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_22": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_25": {
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "randn_30": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_31": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_32": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_44": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_48": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_50": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_53": {
                "tensors": {
                    "value": "(x, z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_47": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_51": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_39": {
                "*size": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}