{
    "deepgg/dataset.py": {
        "torch": {
            "tensor_30": {
                "data": {
                    "value": "seq",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "deepgg/deepgg.py": {
        "torch": {
            "Linear_72": {
                "variable": {
                    "value": "self._next_state_action",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "state_embedding_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "len(actions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_105": {
                "variable": {
                    "value": "self.node_gating",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(node_hidden_size, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.node_to_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.graph_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_110": {
                "variable": {
                    "value": "self._new_node_gating",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(node_hidden_size, 7)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_147": {
                "variable": {
                    "value": "self.message_funcs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "message_funcs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ModuleList_148": {
                "variable": {
                    "value": "self.node_update_funcs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "node_update_funcs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cat_157": {
                "variable": {
                    "value": "message",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[hv_old.unsqueeze(1).expand(-1, m.size(1), -1), m]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_175": {
                "variable": {
                    "value": "self._choose_node",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "graph_hidden_size + 2 * node_hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_185": {
                "variable": {
                    "value": "choices_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "choices_logit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "per_node_choice.view(-1, num_possible_nodes)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_220": {
                "variable": {
                    "value": "self._node_type_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_221": {
                "variable": {
                    "value": "self._initialize_hv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._graph_embed.graph_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_226": {
                "variable": {
                    "value": "self._initialize_edge",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * node_hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_61": {
                "tensors": {
                    "value": "self._log_losses",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cross_entropy_87": {
                "variable": {
                    "value": "next_state_log_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_state_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._next_state_action(embedding)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "self.map_action_to_index(action)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_91": {
                "variable": {
                    "value": "next_state_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "next_state_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._next_state_action(embedding)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Categorical_92": {
                "variable": {
                    "value": "next_action_ix",
                    "type": "variable",
                    "possible_values": []
                },
                "probs": {
                    "value": "next_state_probs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softmax(next_state_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_60": {
                "data": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_71": {
                "data": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_102": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.graph_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_106": {
                "in_features": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_111": {
                "in_features": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_152": {
                "tensors": {
                    "value": "[edges.src[MessageKey.repr_vertex], edges.data[MessageKey.repr_edge]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_183": {
                "tensors": {
                    "value": "[per_node_graph_state_embedding, per_node_extra_node_state, possible_nodes_embed]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Categorical_188": {
                "probs": {
                    "value": "choices_probs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softmax(choices_logit, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_223": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "2 * node_hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_225": {
                "*size": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_234": {
                "data": {
                    "value": "action_values",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[DeepGGActions.add_node, DeepGGActions.add_edge, DeepGGActions.stop]",
                            "List"
                        ]
                    ]
                }
            },
            "cat_249": {
                "tensors": {
                    "value": "[repr_src, repr_dest]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_142": {
                "in_features": {
                    "value": "2 * node_hidden_size + node_hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.node_activation_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRUCell_145": {
                "input_size": {
                    "value": "self.node_activation_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "node_hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_191": {
                "input": {
                    "value": "choices_logit",
                    "type": "variable",
                    "possible_values": [
                        [
                            "per_node_choice.view(-1, num_possible_nodes)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "choose_node.view(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_289": {
                "variable": {
                    "value": "state_add_edge",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[cur_graph_embedding, last_added_node_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_332": {
                "variable": {
                    "value": "state_add_edge",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[cur_graph_embedding, last_added_node_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "deepgg_pipeline.py": {
        "torch": {
            "SGD_225": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "param_learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                }
            },
            "save_265": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(data_base_path, model_file_name)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}