{
    "criteria.py": {
        "torch": {
            "sum_48": {
                "variable": {
                    "value": "diff",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "diff",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "target - pred",
                            "BinOp"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ],
                        [
                            "target - pred",
                            "BinOp"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ],
                        [
                            "(target - recon).abs()",
                            "Call"
                        ],
                        [
                            "torch.sum(diff, 1)",
                            "Call"
                        ],
                        [
                            "diff[valid_mask]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_54": {
                "input": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_51": {
                "input": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "dataloaders/kitti_loader.py": {
        "torch": {}
    },
    "dataloaders/transforms.py": {
        "torch": {
            "is_tensor_34": {
                "obj": {
                    "value": "img",
                    "type": "Call",
                    "possible_values": [
                        [
                            "enhancer.enhance(brightness_factor)",
                            "Call"
                        ],
                        [
                            "enhancer.enhance(contrast_factor)",
                            "Call"
                        ],
                        [
                            "enhancer.enhance(saturation_factor)",
                            "Call"
                        ],
                        [
                            "Image.merge('HSV', (h, s, v)).convert(input_mode)",
                            "Call"
                        ],
                        [
                            "img.convert('RGB')",
                            "Call"
                        ],
                        [
                            "Image.fromarray(np_img, 'RGB').convert(input_mode)",
                            "Call"
                        ],
                        [
                            "t(img)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img.transpose((2, 0, 1)).copy())",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img.copy())",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_218": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img.transpose((2, 0, 1)).copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_220": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img.copy()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "helper.py": {
        "torch": {
            "AvgPool2d_254": {
                "variable": {
                    "value": "avgpool",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_228": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_filename",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(output_directory, 'checkpoint-' + str(epoch) + '.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_178": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred.data.cpu()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "inverse_warp.py": {
        "torch": {
            "stack_85": {
                "variable": {
                    "value": "pixel_coords",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[U_proj_normalized, V_proj_normalized]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_104": {
                "variable": {
                    "value": "XYZ_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r_mat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "r_mat.view(-1, 3, 3)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "pointcloud_curr.view(batch_size, 3, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_113": {
                "variable": {
                    "value": "pointcloud_near",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(X, Y, Z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_132": {
                "variable": {
                    "value": "warped",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rgb_near",
                    "type": "Variable",
                    "possible_values": []
                },
                "grid": {
                    "value": "pixel_coords_near",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pointcloud_to_image(pointcloud_near, intrinsics)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_15": {
                "variable": {
                    "value": "self.U",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "width",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_16": {
                "variable": {
                    "value": "self.V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "height",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "t_16": {
                "variable": {
                    "value": "self.V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_56": {
                "tensors": {
                    "value": "(X, Y, depth)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "device_130": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_132": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_293": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model_named_params",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[p for (_, p) in model.named_parameters() if p.requires_grad]",
                            "ListComp"
                        ]
                    ]
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_302": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Call",
                    "possible_values": [
                        [
                            "DepthCompletionNet(args).to(device)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_316": {
                "variable": {
                    "value": "val_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "KittiDepth('val', args)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_126": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_308": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "KittiDepth('train', args)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "sampler": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_264": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.evaluate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "device",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.device('cuda')",
                            "Call"
                        ],
                        [
                            "torch.device('cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_231": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_278": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "device",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.device('cuda')",
                            "Call"
                        ],
                        [
                            "torch.device('cpu')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "metrics.py": {
        "torch": {
            "max_81": {
                "variable": {
                    "value": "maxRatio",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_mm / target_mm",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_10": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "pow_74": {
                "input": {
                    "value": "abs_diff",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(output_mm - target_mm).abs()",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_89": {
                "input": {
                    "value": "output[valid_mask]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pow_99": {
                "input": {
                    "value": "abs_inv_diff",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(inv_output_km - inv_target_km).abs()",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Sequential_36": {
                "variable": {
                    "value": "layers",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_60": {
                "variable": {
                    "value": "layers",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_183": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(convt5, conv5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_186": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(convt4, conv4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_189": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(convt3, conv3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_192": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(convt2, conv2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_195": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(convt1, conv1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "UnaryOp",
                    "possible_values": [
                        [
                            "not bn",
                            "UnaryOp"
                        ],
                        [
                            "not bn",
                            "UnaryOp"
                        ]
                    ]
                }
            },
            "ConvTranspose2d_49": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ],
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "output_padding": {
                    "value": "output_padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "UnaryOp",
                    "possible_values": [
                        [
                            "not bn",
                            "UnaryOp"
                        ],
                        [
                            "not bn",
                            "UnaryOp"
                        ]
                    ]
                }
            },
            "cat_171": {
                "variable": {
                    "value": "conv1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(conv1_d, conv1_img)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_35": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_57": {
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_59": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_203": {
                "input": {
                    "value": "100 * y - min_distance",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}