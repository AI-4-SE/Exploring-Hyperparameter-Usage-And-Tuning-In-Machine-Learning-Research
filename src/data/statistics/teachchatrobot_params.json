{
    "word2vec_plot.py": {
        "sklearn": {
            "TSNE_31": {
                "variable": {
                    "value": "tsne",
                    "type": "variable",
                    "possible_values": []
                },
                "perplexity": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "init": {
                    "value": "pca",
                    "type": "str",
                    "possible_values": []
                },
                "n_iter": {
                    "value": "5000",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "recurrentshop/backend/tensorflow_backend.py": {
        "tensorflow": {
            "get_default_graph_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "word2cut/crf_utils.py": {
        "tensorflow": {
            "TensorShape_193": {
                "dims": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "word2cut/keras_crf.py": {
        "tensorflow": {
            "gather_nd_555": {
                "params": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.transpose(K.stack([tf.range(n), indices]))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}