{
    "src/ddpg.py": {
        "torch": {
            "MSELoss_15": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_35": {
                "variable": {
                    "value": "self.actor_optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.actor.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.p_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_39": {
                "variable": {
                    "value": "self.critic_optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.c_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_92": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "self.gpu_ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_93": {
                "variable": {
                    "value": "self.actor_target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.actor_target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "self.gpu_ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_94": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "self.gpu_ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_95": {
                "variable": {
                    "value": "self.critic_target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.critic_target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "self.gpu_ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/model.py": {
        "torch": {
            "Linear_19": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nb_states",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nb_actions",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softsign_24": {
                "variable": {
                    "value": "self.softsign",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_45": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nb_states",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_46": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden1 + nb_actions",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_61": {
                "variable": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[out, a]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "len(a.shape) - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src/util.py": {
        "torch": {
            "from_numpy_15": {
                "ndarray": {
                    "value": "ndarray",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "from_numpy_19": {
                "ndarray": {
                    "value": "ndarray",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/wolp_agent.py": {
        "torch": {
            "MSELoss_9": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clamp_81": {
                "input": {
                    "value": "proto_action",
                    "type": "variable",
                    "possible_values": [
                        [
                            "super().select_action(s_t, decay_epsilon)",
                            "Call"
                        ],
                        [
                            "super().random_action()",
                            "Call"
                        ],
                        [
                            "self.actor_target(s_t)",
                            "Call"
                        ],
                        [
                            "to_numpy(torch.clamp(proto_action, -1.0, 1.0), gpu_used=self.gpu_used)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    }
}