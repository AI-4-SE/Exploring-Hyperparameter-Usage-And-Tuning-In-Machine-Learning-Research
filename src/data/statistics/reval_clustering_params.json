{
    "reval/best_nclust_cv.py": {
        "sklearn": {
            "RepeatedStratifiedKFold_80": {
                "variable": {
                    "value": "kfold",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "self.nfold",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_repeats": {
                    "value": "iter_cv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RepeatedKFold_82": {
                "variable": {
                    "value": "kfold",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "self.nfold",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_repeats": {
                    "value": "iter_cv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "reval/param_selection.py": {
        "sklearn": {
            "ParameterGrid_77": {
                "param_grid": {
                    "value": "self.sc_params",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ParameterGrid_233": {
                "param_grid": {
                    "value": "self.params['c']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "reval/relative_validation.py": {
        "sklearn": {
            "zero_one_loss_59": {
                "variable": {
                    "value": "misclass",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "clustlab_tr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.clust_method.fit_predict(train_data)",
                            "Call"
                        ],
                        [
                            "tr_lab",
                            "Name"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "classlab_tr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "fitclass_tr.predict(train_data)",
                            "Call"
                        ]
                    ]
                }
            },
            "zero_one_loss_85": {
                "variable": {
                    "value": "misclass",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "classlab_ts",
                    "type": "Name",
                    "possible_values": [
                        [
                            "fit_model.predict(test_data)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "bestperm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(classlab_ts, clustlab_ts)",
                            "Call"
                        ]
                    ]
                }
            },
            "zero_one_loss_130": {
                "variable": {
                    "value": "me_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "pred_lab",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.class_method.predict(xts)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "kuhn_munkres_algorithm(pred_lab, labts)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "reval/utils.py": {
        "sklearn": {
            "accuracy_score_111": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "matthews_corrcoef_112": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "f1_score_113": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "precision_score_114": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "recall_score_115": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "accuracy_score_117": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "matthews_corrcoef_118": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                }
            },
            "f1_score_119": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "precision_score_120": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                },
                "zero_division": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "recall_score_122": {
                "y_true": {
                    "value": "class_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_clust_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(class_labels, clust_labels)",
                            "Call"
                        ],
                        [
                            "clust_labels",
                            "Name"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                },
                "zero_division": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_best_nclust_cv.py": {
        "sklearn": {
            "KNeighborsClassifier_12": {
                "variable": {
                    "value": "CLASSIFIER",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_13": {
                "variable": {
                    "value": "CLUSTERING",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "make_blobs_79": {
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "make_blobs_103": {
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "make_blobs_104": {
                "n_samples": {
                    "value": "50",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_param_selection.py": {
        "sklearn": {
            "KNeighborsClassifier_15": {
                "n_neighbors": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LogisticRegression_16": {
                "solver": {
                    "value": "liblinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SVC_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_135": {
                "variable": {
                    "value": "cls.s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_136": {
                "variable": {
                    "value": "cls.c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "make_blobs_113": {
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_268": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogisticRegression_268": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SpectralClustering_269": {
                "n_clusters": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_relative_validation.py": {
        "sklearn": {
            "KNeighborsClassifier_13": {
                "variable": {
                    "value": "CLASSIFIER",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "15",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_14": {
                "variable": {
                    "value": "CLUSTERING",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "make_blobs_39": {
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "make_blobs_52": {
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/unit/test_internal_baselines.py": {
        "sklearn": {
            "KMeans_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KMeans_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KMeans_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KMeans_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "working_examples/blobs.py": {
        "sklearn": {
            "make_blobs_14": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_19": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_20": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_22": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "make_blobs(1000, 10, centers=5, random_state=42)",
                            "Call"
                        ]
                    ]
                }
            },
            "make_blobs_58": {
                "variable": {
                    "value": "data_noisy",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "cluster_std": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_64": {
                "variable": {
                    "value": "(Xnoise_tr, Xnoise_ts, ynoise_tr, ynoise_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data_noisy[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data_noisy[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data_noisy[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "make_blobs(1000, 10, centers=5, random_state=42, cluster_std=3)",
                            "Call"
                        ]
                    ]
                }
            },
            "adjusted_mutual_info_score_42": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_80": {
                "labels_true": {
                    "value": "ynoise_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out_noise.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_117": {
                "labels_true": {
                    "value": "ynoise_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zero_one_loss_41": {
                "y_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_lab",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(y_ts, out.test_cllab)",
                            "Call"
                        ]
                    ]
                }
            },
            "zero_one_loss_79": {
                "y_true": {
                    "value": "ynoise_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_lab_noise",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(ynoise_ts, out_noise.test_cllab)",
                            "Call"
                        ]
                    ]
                }
            },
            "zero_one_loss_116": {
                "y_true": {
                    "value": "ynoise_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_noise",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(ynoise_ts, out.test_cllab)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "working_examples/data_dimensionality.py": {
        "sklearn": {
            "make_blobs_12": {
                "variable": {
                    "value": "data1",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "cluster_std": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_18": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data1[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data1[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data1[1]",
                    "type": "Call",
                    "possible_values": [
                        [
                            "make_blobs(1000, 10, centers=5, cluster_std=5, random_state=42)",
                            "Call"
                        ],
                        [
                            "np.random.normal(-5, size=(100, 2))",
                            "Call"
                        ],
                        [
                            "np.random.normal(-5, size=(100, 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "KNeighborsClassifier_24": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_25": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "make_blobs_37": {
                "variable": {
                    "value": "data2",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "20",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "cluster_std": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_43": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data2[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data2[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data2[1]",
                    "type": "Call",
                    "possible_values": [
                        [
                            "make_blobs(1000, 20, centers=5, cluster_std=5, random_state=42)",
                            "Call"
                        ],
                        [
                            "np.random.normal(12, 2.5, size=(50, 2))",
                            "Call"
                        ],
                        [
                            "np.random.normal(12, 2.5, size=(500, 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "KNeighborsClassifier_79": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_80": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_82": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "label",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "label",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "[0] * 100 + [1] * 50 + [2] * 50",
                            "BinOp"
                        ],
                        [
                            "[0] * 100 + [1] * 500 + [2] * 500",
                            "BinOp"
                        ]
                    ]
                }
            },
            "KNeighborsClassifier_113": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_114": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_116": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "label",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "label",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "[0] * 100 + [1] * 50 + [2] * 50",
                            "BinOp"
                        ],
                        [
                            "[0] * 100 + [1] * 500 + [2] * 500",
                            "BinOp"
                        ]
                    ]
                }
            },
            "adjusted_mutual_info_score_59": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_145": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zero_one_loss_61": {
                "y_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "relabeling",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(y_ts, out.test_cllab)",
                            "Call"
                        ]
                    ]
                }
            },
            "zero_one_loss_142": {
                "y_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "kuhn_munkres_algorithm(np.array(y_ts), out.test_cllab)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "working_examples/datasets/manuscript_builddatasets.py": {
        "sklearn": {
            "load_digits_325": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "working_examples/handwritten_digits.py": {
        "sklearn": {
            "fetch_openml_13": {
                "variable": {
                    "value": "(mnist, label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "mnist_784",
                    "type": "Constant",
                    "possible_values": []
                },
                "version": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_17": {
                "variable": {
                    "value": "(mnist_tr, mnist_ts, label_tr, label_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "mnist",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "label",
                    "type": null,
                    "possible_values": []
                },
                "train_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_38": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_39": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_58": {
                "labels_true": {
                    "value": "label_ts.astype(int)",
                    "type": "Call",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "perm_lab",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(label_ts.astype(int), out.test_cllab)",
                            "Call"
                        ]
                    ]
                }
            },
            "zero_one_loss_57": {
                "y_true": {
                    "value": "label_ts.astype(int)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "perm_lab",
                    "type": "Name",
                    "possible_values": [
                        [
                            "kuhn_munkres_algorithm(label_ts.astype(int), out.test_cllab)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "working_examples/manuscript_examples.py": {
        "sklearn": {
            "make_blobs_48": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "1000",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                },
                "center_box": {
                    "value": "(-20, 20)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_63": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "make_blobs(1000, 2, centers=5, center_box=(-20, 20), random_state=42)",
                            "Call"
                        ]
                    ]
                }
            },
            "KNeighborsClassifier_70": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "15",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KMeans_71": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "fetch_openml_166": {
                "variable": {
                    "value": "mnist",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "mnist_784",
                    "type": "Constant",
                    "possible_values": []
                },
                "version": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_178": {
                "variable": {
                    "value": "s",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "30",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "StandardScaler_354": {
                "variable": {
                    "value": "scale",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_365": {
                "variable": {
                    "value": "(X_tr, X_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data['data']",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data['target']",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.4",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data['target']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "make_blobs(1000, 2, centers=5, center_box=(-20, 20), random_state=42)",
                            "Call"
                        ]
                    ]
                }
            },
            "LogisticRegression_336": {
                "solver": {
                    "value": "liblinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_338": {
                "n_estimators": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_340": {
                "n_neighbors": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "metric": {
                    "value": "euclidean",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SVC_342": {
                "C": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_346": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KMeans_347": {
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_90": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_117": {
                "labels_true": {
                    "value": "y_tr",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_tr, sil_label_tr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_119": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_ts, sil_label_ts)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_135": {
                "labels_true": {
                    "value": "y_tr",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_tr, db_label_tr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_137": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_ts, db_label_ts)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_200": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "out.test_cllab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_260": {
                "labels_true": {
                    "value": "y_tr",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_tr, sil_label_tr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_262": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_ts, sil_label_ts)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_276": {
                "labels_true": {
                    "value": "y_tr",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_tr, db_label_tr)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adjusted_mutual_info_score_278": {
                "labels_true": {
                    "value": "y_ts",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "kuhn_munkres_algorithm(y_ts, db_label_ts)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "working_examples/reval_bigocomplexity.py": {
        "sklearn": {
            "KNeighborsClassifier_10": {
                "variable": {
                    "value": "s",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_12": {
                "variable": {
                    "value": "c",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "make_blobs_21": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_22": {
                "variable": {
                    "value": "(data_tr, data_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "make_blobs(100, 10, centers=2)",
                            "Call"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "working_examples/reval_timeitcomplexity.py": {
        "sklearn": {
            "make_blobs_17": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "n_features": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "centers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_18": {
                "variable": {
                    "value": "(data_tr, data_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data[1]",
                    "type": "Call",
                    "possible_values": [
                        [
                            "make_blobs(100, 10, centers=2)",
                            "Call"
                        ],
                        [
                            "make_blobs(nsamples, nfeatures, centers=2)",
                            "Call"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KMeans_64": {
                "variable": {
                    "value": "clustering",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_65": {
                "variable": {
                    "value": "classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "make_blobs_71": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_samples": {
                    "value": "nsamples",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_features": {
                    "value": "nfeatures",
                    "type": "Variable",
                    "possible_values": []
                },
                "centers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_72": {
                "variable": {
                    "value": "(data_tr, data_ts, y_tr, y_ts)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data[0]",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "data[1]",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "stratify": {
                    "value": "data[1]",
                    "type": "Call",
                    "possible_values": [
                        [
                            "make_blobs(100, 10, centers=2)",
                            "Call"
                        ],
                        [
                            "make_blobs(nsamples, nfeatures, centers=2)",
                            "Call"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SVC_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogisticRegression_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomForestClassifier_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AgglomerativeClustering_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KMeans_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SpectralClustering_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}