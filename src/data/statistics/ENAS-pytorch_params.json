{
    "data/image.py": {
        "torch": {
            "DataLoader_27": {
                "variable": {
                    "value": "self.train",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "Dataset(root='./data', train=True, transform=transform, download=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_32": {
                "variable": {
                    "value": "self.valid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "Dataset(root='./data', train=False, transform=transforms.Compose([transforms.ToTensor(), normalize]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "data/text.py": {
        "torch": {}
    },
    "main.py": {
        "torch": {
            "manual_seed_18": {
                "seed": {
                    "value": "args.random_seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_21": {
                "seed": {
                    "value": "args.random_seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/controller.py": {
        "torch": {
            "Embedding_100": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_total_tokens",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "sum(self.num_tokens)",
                            "Call"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "args.controller_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTMCell_102": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "args.controller_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "args.controller_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_112": {
                "variable": {
                    "value": "self._decoders",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "self.decoders",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_204": {
                "variable": {
                    "value": "prev_nodes",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "prev_nodes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(prev_nodes).transpose(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_204": {
                "variable": {
                    "value": "prev_nodes",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_205": {
                "variable": {
                    "value": "activations",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "activations",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(activations).transpose(0, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_205": {
                "variable": {
                    "value": "activations",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_223": {
                "variable": {
                    "value": "zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out": {
                    "value": "self.args.controller_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "decoder",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.controller_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_179": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.decoders[block_idx](hx)",
                            "Call"
                        ],
                        [
                            "logits / self.args.softmax_temperature",
                            "BinOp"
                        ],
                        [
                            "self.args.tanh_c * F.tanh(logits)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_softmax_180": {
                "variable": {
                    "value": "log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.decoders[block_idx](hx)",
                            "Call"
                        ],
                        [
                            "logits / self.args.softmax_temperature",
                            "BinOp"
                        ],
                        [
                            "self.args.tanh_c * F.tanh(logits)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_119": {
                "*size": {
                    "value": "key",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.controller_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_149": {
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.decoders[block_idx](hx)",
                            "Call"
                        ],
                        [
                            "logits / self.args.softmax_temperature",
                            "BinOp"
                        ],
                        [
                            "self.args.tanh_c * F.tanh(logits)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "cat_218": {
                "tensors": {
                    "value": "entropies",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "models/shared_base.py": {
        "torch": {}
    },
    "models/shared_cnn.py": {
        "torch": {
            "Conv2d_16": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "*args": {
                    "value": "nn.ReLU(inplace=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "models/shared_rnn.py": {
        "torch": {
            "dropout_39": {
                "variable": {
                    "value": "dropped_w",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "w_raw",
                    "type": "Variable",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_p",
                    "type": "Variable",
                    "possible_values": []
                },
                "training": {
                    "value": "is_training",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_142": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "corpus.num_tokens",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_154": {
                "variable": {
                    "value": "self.w_xc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.shared_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_155": {
                "variable": {
                    "value": "self.w_xh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.shared_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_159": {
                "variable": {
                    "value": "self.w_hc_raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(args.shared_hid, args.shared_hid)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_161": {
                "variable": {
                    "value": "self.w_hh_raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(args.shared_hid, args.shared_hid)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_178": {
                "variable": {
                    "value": "self._w_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[self.w_h[idx][jdx] for idx in self.w_h for jdx in self.w_h[idx]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_181": {
                "variable": {
                    "value": "self._w_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[self.w_c[idx][jdx] for idx in self.w_c for jdx in self.w_c[idx]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_271": {
                "variable": {
                    "value": "h1tohT",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "h1tohT",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(h1tohT)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_272": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "sigmoid_296": {
                "variable": {
                    "value": "c[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "self.w_xc(x) + F.linear(h_prev, self.w_hc, None)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_350": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.stack(leaf_nodes, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_359": {
                "variable": {
                    "value": "zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "inputs.size(1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_112": {
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "masked_weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.weight * Variable(mask)",
                            "BinOp"
                        ],
                        [
                            "self.weight",
                            "Attribute"
                        ],
                        [
                            "masked_weight * self.scale",
                            "BinOp"
                        ]
                    ]
                },
                "max_norm": {
                    "value": "self.max_norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "norm_type": {
                    "value": "self.norm_type",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_grad_by_freq": {
                    "value": "self.scale_grad_by_freq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sparse": {
                    "value": "self.sparse",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_186": {
                "variable": {
                    "value": "self.batch_norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_171": {
                "variable": {
                    "value": "self.w_h[idx][jdx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_174": {
                "variable": {
                    "value": "self.w_c[idx][jdx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.shared_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_335": {
                "variable": {
                    "value": "c[next_id]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "w_c(h[node_id])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_350": {
                "tensors": {
                    "value": "leaf_nodes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[h[node_id] for node_id in leaf_node_ids]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "linear_296": {
                "input": {
                    "value": "h_prev",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.w_hc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "linear_297": {
                "input": {
                    "value": "h_prev",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.w_hh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            }
        }
    },
    "trainer.py": {
        "torch": {
            "CrossEntropyLoss_177": {
                "variable": {
                    "value": "self.ce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_579": {
                "obj": {
                    "value": "self.shared.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.shared_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_582": {
                "obj": {
                    "value": "self.controller.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.controller_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_611": {
                "f": {
                    "value": "self.shared_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "map_location",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "lambda storage, loc: storage",
                            "Lambda"
                        ],
                        [
                            "None",
                            "Constant"
                        ]
                    ]
                }
            },
            "load_615": {
                "f": {
                    "value": "self.controller_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "map_location",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "lambda storage, loc: storage",
                            "Lambda"
                        ],
                        [
                            "None",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "Tensor_135": {
                "variable": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}