{
    "pytorch_version/Covariance_Pooling_Steganalytic_Network.py": {
        "torch": {
            "device_398": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_440": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 0, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_441": {
                "variable": {
                    "value": "valid_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 1, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_442": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 2, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_457": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "param_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[{'params': params_wd, 'weight_decay': WEIGHT_DECAY}, {'params': params_rest}]",
                            "List"
                        ]
                    ]
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "float"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultiStepLR_478": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.SGD(param_groups, lr=LR, momentum=0.9)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "DECAY_EPOCH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[80, 140, 180]",
                            "List"
                        ]
                    ]
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "load_493": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_55": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "min": {
                    "value": "-self.threshold",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "self.threshold",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_74": {
                "variable": {
                    "value": "hpf_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(all_hpf_list_5x5).view(30, 1, 5, 5)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_76": {
                "variable": {
                    "value": "self.hpf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_96": {
                "variable": {
                    "value": "self.group2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(30, 32, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_116": {
                "variable": {
                    "value": "self.group3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(32, 32, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_128": {
                "variable": {
                    "value": "self.group4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 64, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_140": {
                "variable": {
                    "value": "self.group5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(128, 128, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_151": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(256 * (256 + 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_217": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_464": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "statePath",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.statePath",
                            "Attribute"
                        ]
                    ]
                }
            },
            "no_grad_241": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_283": {
                "obj": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'original_state': model.state_dict(), 'optimizer_state': optimizer.state_dict(), 'epoch': epoch}",
                            "Dict"
                        ],
                        [
                            "torch.load(statePath)",
                            "Call"
                        ],
                        [
                            "torch.load(PARAMS_PATH)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_97": {
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_98": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_101": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_102": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_106": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_109": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_110": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_111": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_113": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_118": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_122": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_125": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_129": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_130": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_131": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_133": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_134": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_135": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_137": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_141": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_142": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_143": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_145": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_146": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_330": {
                "ndarray": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "np.rot90(data, rot, axes=[1, 2]).copy()",
                            "Call"
                        ],
                        [
                            "np.flip(data, axis=2).copy()",
                            "Call"
                        ],
                        [
                            "np.expand_dims(data, axis=1)",
                            "Call"
                        ],
                        [
                            "data.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "np.stack([cover_data, stego_data])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_331": {
                "ndarray": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "np.array([0, 1], dtype='int32')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pytorch_version/Covariance_Pooling_Steganalytic_Network_cat.py": {
        "torch": {
            "device_426": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_467": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 0, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_468": {
                "variable": {
                    "value": "valid_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 1, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_469": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 2, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_484": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "param_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[{'params': params_wd, 'weight_decay': WEIGHT_DECAY}, {'params': params_rest}]",
                            "List"
                        ]
                    ]
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "float"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultiStepLR_505": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.SGD(param_groups, lr=LR, momentum=0.9)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "DECAY_EPOCH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[80, 140, 180]",
                            "List"
                        ]
                    ]
                },
                "gamma": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "load_520": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_54": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "min": {
                    "value": "-self.threshold",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "self.threshold",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_72": {
                "variable": {
                    "value": "hpf_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(all_hpf_list_5x5).view(30, 1, 5, 5)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "variable": {
                    "value": "self.hpf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.group2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(30, 32, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_115": {
                "variable": {
                    "value": "self.group3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(32, 32, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "self.group4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 64, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_139": {
                "variable": {
                    "value": "self.group5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(128, 128, kernel_size=3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_150": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(256 * (256 + 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_217": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_491": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "statePath",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.statePath",
                            "Attribute"
                        ]
                    ]
                }
            },
            "no_grad_241": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_283": {
                "obj": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'original_state': model.state_dict(), 'optimizer_state': optimizer.state_dict(), 'epoch': epoch}",
                            "Dict"
                        ],
                        [
                            "torch.load(statePath)",
                            "Call"
                        ],
                        [
                            "torch.load(PARAMS_PATH)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_97": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_100": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_101": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_105": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_108": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_109": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_110": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_112": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_117": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_118": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_121": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_124": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_128": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_129": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_132": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_133": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_134": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_136": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_140": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_141": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_142": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_144": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_145": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_328": {
                "ndarray": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "np.rot90(data, rot, axes=[1, 2]).copy()",
                            "Call"
                        ],
                        [
                            "np.flip(data, axis=2).copy()",
                            "Call"
                        ],
                        [
                            "np.expand_dims(data, axis=1)",
                            "Call"
                        ],
                        [
                            "data.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "np.stack([cover_data, stego_data])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_329": {
                "ndarray": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "np.array([0, 1], dtype='int32')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pytorch_version/src/MPNCOV.py": {
        "torch": {
            "zeros_54": {
                "variable": {
                    "value": "Y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batchSize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "iterN",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ctx.iterN",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "layout": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_55": {
                "variable": {
                    "value": "Z",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_117": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "triu_117": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_117": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dim * dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_119": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batchSize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "int(dim * (dim + 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_130": {
                "variable": {
                    "value": "grad_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batchSize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "dim * dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "eye_51": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_68": {
                "input": {
                    "value": "normA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / 3.0 * x.mul(I3).sum(dim=1).sum(dim=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_80": {
                "input": {
                    "value": "normA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / 3.0 * x.mul(I3).sum(dim=1).sum(dim=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "eye_82": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_24": {
                "*size": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_24": {
                "n": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "m": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_81": {
                "input": {
                    "value": "normA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / 3.0 * x.mul(I3).sum(dim=1).sum(dim=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ones_106": {
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "diag_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pytorch_version/yed.py": {
        "torch": {
            "device_490": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_531": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 0, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_532": {
                "variable": {
                    "value": "valid_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(VALID_DATASET_DIR, 1, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_533": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TEST_DATASET_DIR, 2, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_548": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "param_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[{'params': params_wd, 'weight_decay': WEIGHT_DECAY}, {'params': params_rest}]",
                            "List"
                        ]
                    ]
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.005",
                            "float"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultiStepLR_569": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.SGD(param_groups, lr=LR, momentum=0.9)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "DECAY_EPOCH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[50, 150, 250]",
                            "List"
                        ]
                    ]
                },
                "gamma": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "load_584": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_55": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "min": {
                    "value": "-self.threshold",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "self.threshold",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_76": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "pooling_layers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "abs_86": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "add_96": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input1",
                    "type": "variable",
                    "possible_values": []
                },
                "other": {
                    "value": "input2",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Parameter_114": {
                "variable": {
                    "value": "hpf_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(all_hpf_list_5x5).view(30, 1, 5, 5)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.hpf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_198": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_201": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_204": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_206": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_209": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_211": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_212": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_214": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_215": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_217": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_218": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_220": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_221": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_223": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_224": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_228": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_229": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_230": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_244": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.conv3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_249": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.conv4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_252": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.conv5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool2d_255": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random.randint(1, 1000)",
                            "Call"
                        ],
                        [
                            "torch.cat(pooling_layers, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.abs(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.tlu3(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(x))",
                            "Call"
                        ],
                        [
                            "self.tlu1(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.conv3(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.conv4(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.conv5(x)))",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(x, (1, 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "relu_259": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_260": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_309": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_555": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "statePath",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.statePath",
                            "Attribute"
                        ]
                    ]
                }
            },
            "avg_pool2d_73": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random.randint(1, 1000)",
                            "Call"
                        ],
                        [
                            "torch.cat(pooling_layers, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.abs(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.tlu3(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(x))",
                            "Call"
                        ],
                        [
                            "self.tlu1(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.conv3(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.conv4(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.conv5(x)))",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(x, (1, 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h // 2 ** i",
                            "BinOp"
                        ]
                    ]
                },
                "stride": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h // 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_333": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_352": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_375": {
                "obj": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'original_state': model.state_dict(), 'optimizer_state': optimizer.state_dict(), 'epoch': epoch}",
                            "Dict"
                        ],
                        [
                            "torch.load(statePath)",
                            "Call"
                        ],
                        [
                            "torch.load(PARAMS_PATH)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_422": {
                "ndarray": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "np.rot90(data, rot, axes=[1, 2]).copy()",
                            "Call"
                        ],
                        [
                            "np.flip(data, axis=2).copy()",
                            "Call"
                        ],
                        [
                            "np.expand_dims(data, axis=1)",
                            "Call"
                        ],
                        [
                            "data.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "np.stack([cover_data, stego_data])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_423": {
                "ndarray": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "np.array([0, 1], dtype='int32')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pytorch_version/yed_cat.py": {
        "torch": {
            "device_519": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_560": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 0, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_561": {
                "variable": {
                    "value": "valid_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 1, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_562": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(TRAIN_DATASET_DIR, 2, eval_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32 // 2",
                            "BinOp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_577": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "param_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[{'params': params_wd, 'weight_decay': WEIGHT_DECAY}, {'params': params_rest}]",
                            "List"
                        ]
                    ]
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.005",
                            "float"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultiStepLR_598": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.SGD(param_groups, lr=LR, momentum=0.9)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "DECAY_EPOCH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[50, 150, 250]",
                            "List"
                        ]
                    ]
                },
                "gamma": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "load_613": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_55": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "min": {
                    "value": "-self.threshold",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "self.threshold",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_76": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "pooling_layers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "abs_86": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "add_96": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input1",
                    "type": "variable",
                    "possible_values": []
                },
                "other": {
                    "value": "input2",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Parameter_114": {
                "variable": {
                    "value": "hpf_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(all_hpf_list_5x5).view(30, 1, 5, 5)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "variable": {
                    "value": "self.hpf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_198": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_201": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_204": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_206": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_209": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_211": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_212": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_214": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_215": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_217": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_218": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_220": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_221": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_223": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_224": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_228": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_229": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_230": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_244": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.conv3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_249": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.conv4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_252": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.conv5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool2d_255": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random.randint(1, 1000)",
                            "Call"
                        ],
                        [
                            "torch.cat(pooling_layers, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.abs(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.tlu3(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(x))",
                            "Call"
                        ],
                        [
                            "self.tlu1(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.conv3(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.conv4(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.conv5(x)))",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(x, (1, 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "relu_259": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_260": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_309": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_584": {
                "variable": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "statePath",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.statePath",
                            "Attribute"
                        ]
                    ]
                }
            },
            "avg_pool2d_73": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random.randint(1, 1000)",
                            "Call"
                        ],
                        [
                            "torch.cat(pooling_layers, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.group1(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.abs(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.tlu3(x)",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(x))",
                            "Call"
                        ],
                        [
                            "self.tlu1(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.conv3(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.conv4(x)))",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.conv5(x)))",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(x, (1, 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h // 2 ** i",
                            "BinOp"
                        ]
                    ]
                },
                "stride": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h // 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_333": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_352": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_375": {
                "obj": {
                    "value": "all_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'original_state': model.state_dict(), 'optimizer_state': optimizer.state_dict(), 'epoch': epoch}",
                            "Dict"
                        ],
                        [
                            "torch.load(statePath)",
                            "Call"
                        ],
                        [
                            "torch.load(PARAMS_PATH)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "PARAMS_PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(OUTPUT_PATH + Model_info, PARAMS_NAME)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_422": {
                "ndarray": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "data.reshape(shape[0] * shape[1], *shape[2:])",
                            "Call"
                        ],
                        [
                            "np.rot90(data, rot, axes=[1, 2]).copy()",
                            "Call"
                        ],
                        [
                            "np.flip(data, axis=2).copy()",
                            "Call"
                        ],
                        [
                            "np.expand_dims(data, axis=1)",
                            "Call"
                        ],
                        [
                            "data.astype(np.float32)",
                            "Call"
                        ],
                        [
                            "np.stack([cover_data, stego_data])",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_423": {
                "ndarray": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "label.reshape(-1)",
                            "Call"
                        ],
                        [
                            "np.array([0, 1], dtype='int32')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}