{
    "sensitivity_test/ops.py": {
        "sklearn": {
            "QuantileTransformer_129": {
                "variable": {
                    "value": "qt",
                    "type": "variable",
                    "possible_values": []
                },
                "n_quantiles": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "sensitivity_test/architecture.py": {
        "tensorflow": {
            "Input_11": {
                "variable": {
                    "value": "sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_12": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "param_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_49": {
                "variable": {
                    "value": "sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_50": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "param_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_76": {
                "variable": {
                    "value": "sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_77": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "param_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_102": {
                "variable": {
                    "value": "sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ],
                        [
                            "(spectrum_length, 1)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_103": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "param_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ],
                        [
                            "(1,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Flatten_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_35": {
                "units": {
                    "value": "config['CNN']['denseUnit']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LeakyReLU_37": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_38": {
                "rate": {
                    "value": "config['training']['dropRate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Dense_39": {
                "units": {
                    "value": "param_length",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_63": {
                "units": {
                    "value": "config['LSTM']['denseUnit']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LeakyReLU_64": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_65": {
                "rate": {
                    "value": "config['training']['dropRate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Dense_66": {
                "units": {
                    "value": "param_length",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_91": {
                "rate": {
                    "value": "config['training']['dropRate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Dense_92": {
                "units": {
                    "value": "param_length",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_108": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_118": {
                "rate": {
                    "value": "hp.Choice('droprate', [0.1, 0.2, 0.3])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_119": {
                "units": {
                    "value": "param_length",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_17": {
                "filters": {
                    "value": "config['CNN']['layers'][i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "config['CNN']['kernels'][i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "strides": {
                    "value": "config['CNN']['stride'][i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_34": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Concatenate_62": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Concatenate_87": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Dense_90": {
                "units": {
                    "value": "config['MLP']['layers'][i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['MLP']['activation']",
                            "Subscript"
                        ],
                        [
                            "config['MLP']['activation']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Concatenate_113": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Dense_116": {
                "units": {
                    "value": "hp.Int('units' + str(i), min_value=32, max_value=256, step=32)",
                    "type": "Call",
                    "possible_values": []
                },
                "activation": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['MLP']['activation']",
                            "Subscript"
                        ],
                        [
                            "config['MLP']['activation']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "BatchNormalization_22": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_24": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Activation_26": {
                "activation": {
                    "value": "config['CNN']['activation']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MaxPooling1D_29": {
                "pool_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Bidirectional_55": {
                "layer": {
                    "value": "LSTM(config['LSTM']['layers'][i], return_sequences=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Bidirectional_58": {
                "layer": {
                    "value": "LSTM(config['LSTM']['layers'][i], return_sequences=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LSTM_56": {
                "units": {
                    "value": "config['LSTM']['layers'][i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_59": {
                "units": {
                    "value": "config['LSTM']['layers'][i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "sensitivity_test/model.py": {
        "tensorflow": {
            "Model_33": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "decision_layer",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "CSVLogger_50": {
                "variable": {
                    "value": "csv_logger",
                    "type": "variable",
                    "possible_values": []
                },
                "filename": {
                    "value": "os.path.join(checkpoint_dir, 'history/training_{}.csv'.format(cv_order))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_53": {
                "variable": {
                    "value": "model_cktpt",
                    "type": "variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "os.path.join(checkpoint_dir, f'ckt/checkpt_{cv_order}.h5')",
                    "type": "Call",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "save_best_only": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "verbose": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "period": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_model_88": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_dir_path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "clear_session_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "plot_model_64": {
                "model": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "to_file": {
                    "value": "os.path.join(checkpoint_dir, 'model.png')",
                    "type": "Call",
                    "possible_values": []
                },
                "show_shapes": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_35": {
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "10 ** self.config['training']['decay']",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}