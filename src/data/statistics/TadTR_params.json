{
    "demo.py": {
        "torch": {
            "rand_20": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[bs, args.feature_dim, t]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_21": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[bs, t]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/custom_loss.py": {
        "torch": {
            "binary_cross_entropy_with_logits_28": {
                "variable": {
                    "value": "ce_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "targets",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_41": {
                "variable": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.random.random([8, 2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_42": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.random.random(8) > 0.5",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "models/ops/roi_align/roi_align.py": {
        "torch": {
            "tensor_74": {
                "variable": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.0, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_75": {
                "variable": {
                    "value": "proposal",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, -0.5, 9.5], [0, 0.1, 0.9]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mean_78": {
                "input": {
                    "value": "output",
                    "type": "Call",
                    "possible_values": [
                        [
                            "layer(input, proposal)",
                            "Call"
                        ],
                        [
                            "_align_1d.forward(input, roi, feature_dim, ratio)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/ops/setup.py": {
        "torch": {
            "is_available_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/ops/temporal_deform_attn/functions/temporal_deform_attn_func.py": {
        "torch": {
            "grid_sample_59": {
                "variable": {
                    "value": "sampling_value_l_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "value_l_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "value_list[lid_].flatten(2).transpose(1, 2).reshape(N_ * M_, D_, H_, W_)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "sampling_grid_l_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "sampling_grids[:, :, :, lid_].transpose(1, 2).flatten(0, 1)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "zeros",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_64": {
                "tensors": {
                    "value": "sampling_value_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "flatten_64": {
                "input": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/ops/temporal_deform_attn/temporal_deform_attn.py": {
        "torch": {
            "Linear_63": {
                "variable": {
                    "value": "self.sampling_offsets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_heads * n_levels * n_points",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.attention_weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_heads * n_levels * n_points",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.value_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "d_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_68": {
                "variable": {
                    "value": "self.output_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "d_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "softmax_120": {
                "variable": {
                    "value": "attention_weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention_weights",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.attention_weights(query).view(N, Len_q, self.n_heads, self.n_levels * self.n_points)",
                            "Call"
                        ],
                        [
                            "F.softmax(attention_weights, -1).view(N, Len_q, self.n_heads, self.n_levels, self.n_points)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Parameter_86": {
                "variable": {
                    "value": "self.sampling_offsets.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "grid_init.view(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "arange_76": {
                "start": {
                    "value": "self.n_heads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/position_encoding.py": {
        "torch": {
            "arange_46": {
                "variable": {
                    "value": "dim_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "self.num_pos_feats",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_51": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(pos_x[:, :, 0::2].sin(), pos_x[:, :, 1::2].cos())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "flatten_51": {
                "variable": {
                    "value": "pos_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/tadtr.py": {
        "torch": {
            "device_285": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_37": {
                "modules": {
                    "value": "[copy.deepcopy(module) for i in range(N)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_68": {
                "variable": {
                    "value": "self.class_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "20",
                            "Constant"
                        ],
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "200",
                            "Constant"
                        ]
                    ]
                }
            },
            "Embedding_70": {
                "variable": {
                    "value": "self.query_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_queries",
                    "type": "Variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ModuleList_72": {
                "variable": {
                    "value": "self.input_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(nn.Conv1d(2048, hidden_dim, kernel_size=1), nn.GroupNorm(32, hidden_dim))]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clamp_135": {
                "variable": {
                    "value": "rois_abs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rois_abs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((rois_center - rois_size / 2, rois_center + rois_size / 2), dim=2) * T",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(rois_abs, min=0, max=T)",
                            "Call"
                        ],
                        [
                            "torch.cat((batch_ind, rois_abs), dim=2)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "max": {
                    "value": "T",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_137": {
                "variable": {
                    "value": "batch_ind",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "B",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_139": {
                "variable": {
                    "value": "rois_abs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(batch_ind, rois_abs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_196": {
                "variable": {
                    "value": "outputs_class",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_197": {
                "variable": {
                    "value": "outputs_coord",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs_coords",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ModuleList_265": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "(nn.Linear(n, k) for (n, k) in zip([input_dim] + h, h + [output_dim]))",
                    "type": "GeneratorExp",
                    "possible_values": []
                }
            },
            "GroupNorm_43": {
                "num_groups": {
                    "value": "num_groups",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_channels": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ModuleList_102": {
                "variable": {
                    "value": "self.class_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[self.class_embed for _ in range(num_pred)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_104": {
                "variable": {
                    "value": "self.segment_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[self.segment_embed for _ in range(num_pred)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Sequential_113": {
                "variable": {
                    "value": "self.actionness_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.roi_size * hidden_dim, hidden_dim)",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm1d_45": {
                "num_features": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ones_84": {
                "*size": {
                    "value": "num_classes",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "20",
                            "Constant"
                        ],
                        [
                            "25",
                            "Constant"
                        ],
                        [
                            "200",
                            "Constant"
                        ]
                    ]
                }
            },
            "cat_132": {
                "tensors": {
                    "value": "(rois_center - rois_size / 2, rois_center + rois_size / 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "*args": {
                    "value": "nn.Conv1d(2048, hidden_dim, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_114": {
                "in_features": {
                    "value": "self.roi_size * hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_115": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_116": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_117": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_118": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sigmoid_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_265": {
                "in_features": {
                    "value": "n",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "k",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_270": {
                "input": {
                    "value": "layer(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv1d_74": {
                "in_channels": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GroupNorm_75": {
                "num_groups": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "hidden_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "transformer.d_model",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "models/transformer.py": {
        "torch": {
            "Parameter_45": {
                "variable": {
                    "value": "self.level_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(num_feature_levels, d_model)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.reference_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_65": {
                "variable": {
                    "value": "valid_T",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "~mask",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "src_flatten",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "src_flatten",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(src_flatten, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_100": {
                "variable": {
                    "value": "mask_flatten",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "mask_flatten",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(mask_flatten, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_101": {
                "variable": {
                    "value": "lvl_pos_embed_flatten",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "lvl_pos_embed_flatten",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(lvl_pos_embed_flatten, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "as_tensor_102": {
                "variable": {
                    "value": "temporal_lens",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "temporal_lens",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(temporal_lens, dtype=torch.long, device=src_flatten.device)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "src_flatten.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "level_start_index",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(temporal_lens.new_zeros((1,)), temporal_lens.cumsum(0)[:-1])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_104": {
                "variable": {
                    "value": "valid_ratios",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.get_valid_ratio(m) for m in masks]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_113": {
                "variable": {
                    "value": "(query_embed, tgt)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "query_embed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "query_embed.unsqueeze(0).expand(bs, -1, -1)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "c",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.dropout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LayerNorm_136": {
                "variable": {
                    "value": "self.norm1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_139": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "d_ffn",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_141": {
                "variable": {
                    "value": "self.dropout2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_142": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_ffn",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_143": {
                "variable": {
                    "value": "self.dropout3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LayerNorm_144": {
                "variable": {
                    "value": "self.norm2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_181": {
                "variable": {
                    "value": "reference_points",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "reference_points_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_208": {
                "variable": {
                    "value": "self.dropout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LayerNorm_209": {
                "variable": {
                    "value": "self.norm1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "MultiheadAttention_212": {
                "variable": {
                    "value": "self.self_attn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embed_dim": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_heads": {
                    "value": "n_heads",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                },
                "dropout": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_213": {
                "variable": {
                    "value": "self.dropout2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LayerNorm_214": {
                "variable": {
                    "value": "self.norm2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_217": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "d_ffn",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_219": {
                "variable": {
                    "value": "self.dropout3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_220": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "d_ffn",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ],
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_221": {
                "variable": {
                    "value": "self.dropout4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ],
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LayerNorm_222": {
                "variable": {
                    "value": "self.norm3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "d_model",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ],
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ModuleList_311": {
                "modules": {
                    "value": "[copy.deepcopy(module) for i in range(N)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "linspace_178": {
                "variable": {
                    "value": "ref",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "T_ - 0.5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "T_",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "stack_305": {
                "tensors": {
                    "value": "intermediate_reference_points",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "util/misc.py": {
        "torch": {
            "tensor_117": {
                "variable": {
                    "value": "local_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[tensor.numel()]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_372": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[b, t]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "tensor.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_404": {
                "variable": {
                    "value": "tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "padded_imgs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_405": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "padded_masks",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "no_grad_479": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_60": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[self.count, self.total]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_70": {
                "variable": {
                    "value": "d",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(self.deque)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_75": {
                "variable": {
                    "value": "d",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(self.deque)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_131": {
                "variable": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(max_size - local_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_133": {
                "variable": {
                    "value": "tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(tensor, padding)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_163": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "values",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(values, dim=0)",
                            "Call"
                        ],
                        [
                            "values / world_size",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_341": {
                "variable": {
                    "value": "tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_shape",
                    "type": "List",
                    "possible_values": [
                        [
                            "[len(tensor_list)] + max_size",
                            "BinOp"
                        ],
                        [
                            "[len(tensor_list), tensor_list[0].shape[0], max_size]",
                            "List"
                        ],
                        [
                            "[len(tensor_list), tensor_list[0].shape[0], max_size, tensor_list[0].shape[2], tensor_list[0].shape[3]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "tensor_list[0].dtype",
                            "Attribute"
                        ],
                        [
                            "tensor_list[0].dtype",
                            "Attribute"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ],
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ones_342": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(b, h, w)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ],
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "max_382": {
                "variable": {
                    "value": "max_size_i",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.stack([img.shape[i] for img in tensor_list]).to(torch.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pad_395": {
                "variable": {
                    "value": "padded_img",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tensor_list",
                            "Name"
                        ]
                    ]
                },
                "pad": {
                    "value": "(0, padding[2], 0, padding[1], 0, padding[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_like_399": {
                "variable": {
                    "value": "m",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "img[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "img.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pad_400": {
                "variable": {
                    "value": "padded_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros_like(img[0], dtype=torch.int, device=img.device)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(0, padding[2], 0, padding[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_device_469": {
                "device": {
                    "value": "args.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_502": {
                "input": {
                    "value": "x1 / x2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_118": {
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_215": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_358": {
                "variable": {
                    "value": "tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_shape",
                    "type": "List",
                    "possible_values": [
                        [
                            "[len(tensor_list)] + max_size",
                            "BinOp"
                        ],
                        [
                            "[len(tensor_list), tensor_list[0].shape[0], max_size]",
                            "List"
                        ],
                        [
                            "[len(tensor_list), tensor_list[0].shape[0], max_size, tensor_list[0].shape[2], tensor_list[0].shape[3]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "tensor_list[0].dtype",
                            "Attribute"
                        ],
                        [
                            "tensor_list[0].dtype",
                            "Attribute"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ],
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ones_359": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(b, t)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Attribute",
                    "possible_values": [
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ],
                        [
                            "tensor_list[0].device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "is_available_426": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_initialized_428": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_451": {
                "obj": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "empty_128": {
                "*size": {
                    "value": "(max_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_483": {
                "*size": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "output.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_242": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_461": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_382": {
                "tensors": {
                    "value": "[img.shape[i] for img in tensor_list]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "max_memory_allocated_247": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "util/segment_ops.py": {
        "torch": {
            "max_60": {
                "variable": {
                    "value": "l",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "segments1[:, None, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_61": {
                "variable": {
                    "value": "r",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "segments1[:, None, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_86": {
                "variable": {
                    "value": "l",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "segments1[:, None, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_87": {
                "variable": {
                    "value": "r",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "segments1[:, None, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "stack_27": {
                "tensors": {
                    "value": "b",
                    "type": "List",
                    "possible_values": [
                        [
                            "[x_c - 0.5 * w, x_c + 0.5 * w]",
                            "List"
                        ],
                        [
                            "[(x_c - 0.5 * w)[..., None], (x_c + 0.5 * w)[..., None]]",
                            "List"
                        ],
                        [
                            "[(x1 + x2) / 2, x2 - x1]",
                            "List"
                        ],
                        [
                            "[((x1 + x2) / 2)[..., None], (x2 - x1)[..., None]]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_44": {
                "tensors": {
                    "value": "b",
                    "type": "List",
                    "possible_values": [
                        [
                            "[x_c - 0.5 * w, x_c + 0.5 * w]",
                            "List"
                        ],
                        [
                            "[(x_c - 0.5 * w)[..., None], (x_c + 0.5 * w)[..., None]]",
                            "List"
                        ],
                        [
                            "[(x1 + x2) / 2, x2 - x1]",
                            "List"
                        ],
                        [
                            "[((x1 + x2) / 2)[..., None], (x2 - x1)[..., None]]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    }
}