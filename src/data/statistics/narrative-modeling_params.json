{
    "main.py": {
        "sklearn": {
            "accuracy_score_269": {
                "variable": {
                    "value": "train_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "convert_labels(train_labels)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "convert_labels(np.array(train_preds))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "accuracy_score_279": {
                "variable": {
                    "value": "val_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "convert_labels(val_labels)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "convert_labels(np.array(val_preds))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "accuracy_score_288": {
                "variable": {
                    "value": "test_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "convert_labels(test_labels)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "convert_labels(np.array(test_preds))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "DEFINE_float_24": {
                "name": {
                    "value": "learning_rate",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "Learning rate for Adam Optimizer.",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_25": {
                "name": {
                    "value": "max_grad_norm",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "5.0",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "Clip gradients to this norm.",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_26": {
                "name": {
                    "value": "evaluation_interval",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "Evaluate and print results every x epochs",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_27": {
                "name": {
                    "value": "batch_size",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "Batch size for training.",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_28": {
                "name": {
                    "value": "epochs",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "Number of epochs to train for.",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_29": {
                "name": {
                    "value": "embedding_size",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "Embedding size for embedding matrices.",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_30": {
                "name": {
                    "value": "task",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "ROCStories",
                    "type": "str",
                    "possible_values": []
                },
                "help": {
                    "value": "ROCStories",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_31": {
                "name": {
                    "value": "random_state",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "83",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "Random state.",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_32": {
                "name": {
                    "value": "data_dir",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "data/rocstories/",
                    "type": "str",
                    "possible_values": []
                },
                "help": {
                    "value": "Directory containing ROC story data",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_33": {
                "name": {
                    "value": "opt",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "ftrl",
                    "type": "str",
                    "possible_values": []
                },
                "help": {
                    "value": "Optimizer [ftrl]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_34": {
                "name": {
                    "value": "embedding_file_path",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "help": {
                    "value": "Embedding file path [None]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_37": {
                "name": {
                    "value": "n_cpus",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "N CPUs [1]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_integer_38": {
                "name": {
                    "value": "n_keys",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "help": {
                    "value": "Number of keys [8]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_39": {
                "name": {
                    "value": "input_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "input keep prob [0.5]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_40": {
                "name": {
                    "value": "output_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "output keep prob [1.0]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_41": {
                "name": {
                    "value": "state_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "state keep prob [1.0]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_42": {
                "name": {
                    "value": "entnet_input_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "entnet input keep prob [0.8]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_43": {
                "name": {
                    "value": "entnet_output_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "entnet output keep prob [1.0]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_44": {
                "name": {
                    "value": "entnet_state_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "entnet state keep prob [1.0]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_45": {
                "name": {
                    "value": "final_layer_keep_prob",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "final layer keep prob [0.8]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_47": {
                "name": {
                    "value": "l2_final_layer",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "Lambda L2 final layer [0.001]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_48": {
                "name": {
                    "value": "save_model",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "help": {
                    "value": "Path to save the model [None]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_49": {
                "name": {
                    "value": "load_model",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "help": {
                    "value": "Path to load the model [None]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_string_50": {
                "name": {
                    "value": "opinion_lexicon_dir",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "data/opinion-lexicon/",
                    "type": "str",
                    "possible_values": []
                },
                "help": {
                    "value": "Opinion lexicon",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DEFINE_float_51": {
                "name": {
                    "value": "tagging_weight",
                    "type": "str",
                    "possible_values": []
                },
                "default": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "help": {
                    "value": "Weight on the tagging task [0.5]",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConfigProto_82": {
                "variable": {
                    "value": "session_conf",
                    "type": "variable",
                    "possible_values": []
                },
                "intra_op_parallelism_threads": {
                    "value": "FLAGS.n_cpus",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inter_op_parallelism_threads": {
                    "value": "FLAGS.n_cpus",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_87": {
                "config": {
                    "value": "session_conf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto(intra_op_parallelism_threads=FLAGS.n_cpus, inter_op_parallelism_threads=FLAGS.n_cpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "set_random_seed_208": {
                "seed": {
                    "value": "FLAGS.random_state",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_215": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "FLAGS.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "FLAGS.epsilon",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "FtrlOptimizer_217": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "FLAGS.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "vocab_processor.py": {
        "tensorflow": {}
    }
}