{
    "source/attention_layer.py": {
        "tensorflow": {
            "Dense_9": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "units",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "weight_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'he_normal'",
                            "str"
                        ]
                    ]
                }
            },
            "Dense_10": {
                "variable": {
                    "value": "self.V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "weight_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'he_normal'",
                            "str"
                        ]
                    ]
                }
            },
            "softmax_20": {
                "variable": {
                    "value": "attention_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.V(tf.nn.tanh(self.W(encoder_output)))",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_24": {
                "variable": {
                    "value": "context_vector",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "context_vector",
                    "type": "variable",
                    "possible_values": [
                        [
                            "attention_weights * encoder_output",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(context_vector, axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_17": {
                "x": {
                    "value": "self.W(encoder_output)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "source/data_generator.py": {
        "tensorflow": {}
    },
    "source/main.py": {
        "tensorflow": {
            "EarlyStopping_62": {
                "variable": {
                    "value": "early_stop",
                    "type": "variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "restore_best_weights": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "source/model.py": {
        "tensorflow": {
            "Input_6": {
                "variable": {
                    "value": "input_data",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(window_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_31": {
                "variable": {
                    "value": "full_model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.Input(shape=(window_size, 1))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "[output, classification_output]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "LDwA",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_32": {
                "variable": {
                    "value": "attention_model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.Input(shape=(window_size, 1))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "SGD_34": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv1D_9": {
                "filters": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_10": {
                "filters": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_11": {
                "filters": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_12": {
                "filters": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_13": {
                "filters": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_14": {
                "filters": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_16": {
                "units": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "he_normal",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_17": {
                "units": {
                    "value": "window_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "classification_output",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_20": {
                "filters": {
                    "value": "filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_21": {
                "filters": {
                    "value": "filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_22": {
                "filters": {
                    "value": "filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_23": {
                "filters": {
                    "value": "filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Bidirectional_24": {
                "layer": {
                    "value": "tf.keras.layers.LSTM(units, activation='tanh', return_sequences=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "merge_mode": {
                    "value": "concat",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_26": {
                "units": {
                    "value": "units",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_27": {
                "units": {
                    "value": "window_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "regression_output",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Multiply_29": {
                "name": {
                    "value": "output",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LSTM_24": {
                "units": {
                    "value": "units",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MeanSquaredError_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BinaryCrossentropy_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}