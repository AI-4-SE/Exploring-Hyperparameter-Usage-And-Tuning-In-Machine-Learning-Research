{
    "src/neural_punctuator/utils/data.py": {
        "sklearn": {
            "compute_class_weight_56": {
                "class_weight": {
                    "value": "balanced",
                    "type": "Constant",
                    "possible_values": []
                },
                "classes": {
                    "value": "range(-1, 4)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "targets",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "src/neural_punctuator/utils/metrics.py": {
        "sklearn": {
            "precision_score_37": {
                "variable": {
                    "value": "macro_precision",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "targets.reshape(-1)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_index",
                    "type": "Name",
                    "possible_values": [
                        [
                            "preds.argmax(-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "recall_score_41": {
                "variable": {
                    "value": "macro_recall",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "targets.reshape(-1)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_index",
                    "type": "Name",
                    "possible_values": [
                        [
                            "preds.argmax(-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "f1_score_45": {
                "variable": {
                    "value": "macro_f1_score",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "targets.reshape(-1)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "pred_index",
                    "type": "Name",
                    "possible_values": [
                        [
                            "preds.argmax(-1)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "roc_auc_score_49": {
                "variable": {
                    "value": "auc_score",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "targets.reshape(-1)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "preds",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.exp(preds)",
                            "Call"
                        ],
                        [
                            "preds.reshape(-1, config.model.num_classes)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                },
                "multi_class": {
                    "value": "ovo",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "classification_report_62": {
                "variable": {
                    "value": "report",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "preds",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.exp(preds)",
                            "Call"
                        ],
                        [
                            "preds.reshape(-1, config.model.num_classes)",
                            "Call"
                        ]
                    ]
                },
                "output_dict": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "target_names": {
                    "value": "config.data.output_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "classification_report_63": {
                "variable": {
                    "value": "report_print",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "preds",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.exp(preds)",
                            "Call"
                        ],
                        [
                            "preds.reshape(-1, config.model.num_classes)",
                            "Call"
                        ]
                    ]
                },
                "digits": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "target_names": {
                    "value": "config.data.output_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "confusion_matrix_68": {
                "y_true": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "preds",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.exp(preds)",
                            "Call"
                        ],
                        [
                            "preds.reshape(-1, config.model.num_classes)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/evalutate_test.py": {
        "torch": {
            "load_26": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_142": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "BertDataset('test', config)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "config.predict.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "device_195": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_device_196": {
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda:0')",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/base/BaseModel.py": {
        "torch": {
            "save_43": {
                "obj": {
                    "value": "self.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "f'saved/models/{self._config.model.name}_{str(epoch)}.pth'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "save_44": {
                "obj": {
                    "value": "optimizer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "f'saved/models/{self._config.model.name}_{str(epoch)}_optimizer_state.pth'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "load_48": {
                "f": {
                    "value": "f'saved/models/{model_name}_{str(epoch)}.pth'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "load_49": {
                "f": {
                    "value": "f'saved/models/{model_name}_{str(epoch)}_optimizer_state.pth'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/data/dataloader.py": {
        "torch": {
            "DataLoader_50": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "BertDataset('train', config, is_train=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "config.trainer.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_51": {
                "variable": {
                    "value": "valid_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "BertDataset('valid', config)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "config.trainer.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "stack_39": {
                "tensors": {
                    "value": "targets",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/models/BertPunctuator.py": {
        "torch": {
            "log_softmax_32": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.log_softmax(output, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Dropout_55": {
                "variable": {
                    "value": "self.dropout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.model.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_56": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.model.bert_output_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.model.linear_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_58": {
                "variable": {
                    "value": "self.dropout2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.model.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.model.linear_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.model.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_60": {
                "variable": {
                    "value": "self.binary_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.model.linear_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_66": {
                "variable": {
                    "value": "binary_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.binary_classifier(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/preprocessors/BertPreprocessor.py": {
        "torch": {
            "load_13": {
                "variable": {
                    "value": "self._tokenizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "self._config.model.bert_github_repo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "tokenizer",
                    "type": "Constant",
                    "possible_values": []
                },
                "pickle_module": {
                    "value": "self._config.model.bert_variant_to_load",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/trainers/BertPunctuatorTrainer.py": {
        "torch": {
            "manual_seed_21": {
                "seed": {
                    "value": "69",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_39": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "self._config.trainer.use_gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_42": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tensor_50": {
                "variable": {
                    "value": "target_weights",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "NLLLoss_52": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight": {
                    "value": "target_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.Tensor(get_target_weights(self.train_dataset.targets, self._config.model.num_classes)).clamp_max(1).to(self.device)",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_62": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "optimizer_args",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[{'params': self.model.base.parameters(), 'lr': self._config.trainer.base_learning_rate}, {'params': self.model.classifier.parameters(), 'lr': self._config.trainer.classifier_learning_rate}]",
                            "List"
                        ]
                    ]
                }
            },
            "SummaryWriter_81": {
                "variable": {
                    "value": "self.summary_writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "comment": {
                    "value": "self._config.experiment.name",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_device_40": {
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamW_65": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "optimizer_args",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[{'params': self.model.base.parameters(), 'lr': self._config.trainer.base_learning_rate}, {'params': self.model.classifier.parameters(), 'lr': self._config.trainer.classifier_learning_rate}]",
                            "List"
                        ]
                    ]
                }
            },
            "clip_grad_norm__121": {
                "parameters": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self._config.trainer.grad_clip",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/utils/io.py": {
        "torch": {
            "load_41": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "config.model.save_model_path + config.trainer.load_model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_32": {
                "obj": {
                    "value": "{'epoch': epoch, 'model_state_dict': model.state_dict(), 'optimizer_state_dict': optimizer.state_dict(), 'metrics': metrics}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "config.model.save_model_path + config.experiment.name + '-epoch-' + str(epoch) + '.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/utils/loss.py": {
        "torch": {
            "neg_21": {
                "input": {
                    "value": "loss",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "target * torch.log(output) + (1 - target) * torch.log(1 - output)",
                            "BinOp"
                        ],
                        [
                            "self.weights[1] * (target * torch.log(output)) + self.weights[0] * ((1 - target) * torch.log(1 - output))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_19": {
                "input": {
                    "value": "1 - output",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_16": {
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_17": {
                "input": {
                    "value": "1 - output",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src/neural_punctuator/utils/scheduler.py": {
        "torch": {}
    }
}