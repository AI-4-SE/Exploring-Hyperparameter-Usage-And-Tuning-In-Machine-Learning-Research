{
    "Create Models/remote_training/trainer/task_all_events-LOS.py": {
        "tensorflow": {
            "TFRecordDataset_43": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "train_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[train_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_44": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "valid_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[valid_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_45": {
                "variable": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "test_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[test_input]",
                            "List"
                        ]
                    ]
                }
            },
            "Input_139": {
                "variable": {
                    "value": "input_ch_event",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(11206,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "ch_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_148": {
                "variable": {
                    "value": "input_inputcv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(47376,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "inputcv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_157": {
                "variable": {
                    "value": "input_inputmv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(35968,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "inputmv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_166": {
                "variable": {
                    "value": "input_lab_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(22216,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "lab_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_174": {
                "variable": {
                    "value": "input_microbioevents",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(831,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "microbio_input",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_182": {
                "variable": {
                    "value": "input_note_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(212932,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "note_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_189": {
                "variable": {
                    "value": "input_output_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(5646,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "output_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_197": {
                "variable": {
                    "value": "input_prescription_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(5520,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "prescription_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_205": {
                "variable": {
                    "value": "input_procedure_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(877,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "procedure_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concatenate_214": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "arys": {
                    "value": "[x_1, x_2, x_3, x_4, x_5, x_6, x_7, x_8, x_9]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "concat_layer",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_238": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_ch_event, input_inputcv_events, input_inputmv_events, input_lab_events, input_microbioevents, input_note_events, input_output_events, input_prescription_events, input_procedure_events]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "main_output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "keras.layers.Dense(1, activation='sigmoid', name='main_output')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorBoard_267": {
                "variable": {
                    "value": "tensorboard_cb",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "os.path.join(output_dir, 'keras_tensorboard', 'log_{}'.format(time()))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_280": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'best_model.h5'",
                            "Constant"
                        ],
                        [
                            "os.path.join(checkpoint_dir, 'best_model.h5')",
                            "Call"
                        ]
                    ]
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "save_best_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "parse_single_example_63": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "serialized": {
                    "value": "example_proto",
                    "type": "Name",
                    "possible_values": []
                },
                "features": {
                    "value": "feature_description",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'LOS': tf.FixedLenFeature([], dtype=tf.int64), 'feature1': tf.VarLenFeature(dtype=tf.int64), 'feature2': tf.VarLenFeature(dtype=tf.int64), 'feature3': tf.VarLenFeature(dtype=tf.int64), 'feature4': tf.VarLenFeature(dtype=tf.int64), 'feature5': tf.VarLenFeature(dtype=tf.int64), 'feature6': tf.VarLenFeature(dtype=tf.int64), 'feature7': tf.VarLenFeature(dtype=tf.int64), 'feature8': tf.VarLenFeature(dtype=tf.int64), 'feature9': tf.VarLenFeature(dtype=tf.int64)}",
                            "Dict"
                        ]
                    ]
                }
            },
            "cast_64": {
                "variable": {
                    "value": "label",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "x['LOS']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_65": {
                "variable": {
                    "value": "ch_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature1'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_66": {
                "variable": {
                    "value": "inputcv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature2'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_67": {
                "variable": {
                    "value": "inputmv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature3'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_68": {
                "variable": {
                    "value": "lab_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature4'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_69": {
                "variable": {
                    "value": "microbio_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature5'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "note_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature6'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "output_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature7'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_72": {
                "variable": {
                    "value": "prescription_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature8'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "procedure_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature9'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "FixedLenFeature_49": {
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_50": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_51": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_52": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_53": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_54": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_55": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_56": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_57": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_58": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_125": {
                "variable": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "backend.floatx()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Embedding_140": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_chartevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_chartevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_ch",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_149": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_inputevents_cv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_inputevents_cv'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_inputcv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_158": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_inputevents_mv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_inputevents_mv'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_inputmv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_167": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_labevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_labevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_lab_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_175": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_microbioevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_microbioevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_microbio",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_183": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_noteevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_noteevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_note_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_190": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_outputevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_outputevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_output_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_198": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_prescriptionevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_prescriptionevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_prescription_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_206": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_procedureevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_procedureevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_procedure_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SpatialDropout1D_224": {
                "rate": {
                    "value": "args.embedding_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Lambda_226": {
                "function": {
                    "value": "lambda x: call(x)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_236": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "main_output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "to_dense_65": {
                "sp_input": {
                    "value": "x['feature1']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_66": {
                "sp_input": {
                    "value": "x['feature2']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_67": {
                "sp_input": {
                    "value": "x['feature3']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_68": {
                "sp_input": {
                    "value": "x['feature4']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_69": {
                "sp_input": {
                    "value": "x['feature5']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_70": {
                "sp_input": {
                    "value": "x['feature6']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_71": {
                "sp_input": {
                    "value": "x['feature7']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_72": {
                "sp_input": {
                    "value": "x['feature8']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_73": {
                "sp_input": {
                    "value": "x['feature9']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_132": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dense_231": {
                "units": {
                    "value": "args.neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'dense_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dropout_234": {
                "rate": {
                    "value": "args.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_249": {
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tf_record_iterator_35": {
                "path": {
                    "value": "train_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.train_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_36": {
                "path": {
                    "value": "valid_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.valid_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_37": {
                "path": {
                    "value": "test_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.test_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "floatx_125": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_130": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_sum_130": {
                "input_tensor": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "epsilon_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Create Models/remote_training/trainer/task_all_events.py": {
        "tensorflow": {
            "TFRecordDataset_43": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "train_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[train_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_44": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "valid_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[valid_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_45": {
                "variable": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "test_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[test_input]",
                            "List"
                        ]
                    ]
                }
            },
            "Input_138": {
                "variable": {
                    "value": "input_ch_event",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(11206,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "ch_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_147": {
                "variable": {
                    "value": "input_inputcv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(47376,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "inputcv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_156": {
                "variable": {
                    "value": "input_inputmv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(35968,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "inputmv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_165": {
                "variable": {
                    "value": "input_lab_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(22216,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "lab_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_173": {
                "variable": {
                    "value": "input_microbioevents",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(831,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "microbio_input",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_181": {
                "variable": {
                    "value": "input_note_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(212932,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "note_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_188": {
                "variable": {
                    "value": "input_output_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(5646,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "output_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_196": {
                "variable": {
                    "value": "input_prescription_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(5520,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "prescription_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Input_204": {
                "variable": {
                    "value": "input_procedure_events",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(877,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "procedure_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concatenate_213": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "arys": {
                    "value": "[x_1, x_2, x_3, x_4, x_5, x_6, x_7, x_8, x_9]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "concat_layer",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_236": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_ch_event, input_inputcv_events, input_inputmv_events, input_lab_events, input_microbioevents, input_note_events, input_output_events, input_prescription_events, input_procedure_events]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "main_output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "keras.layers.Dense(1, activation='sigmoid', name='main_output')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorBoard_265": {
                "variable": {
                    "value": "tensorboard_cb",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "os.path.join(output_dir, 'keras_tensorboard', 'log_{}'.format(time()))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_278": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'best_model.h5'",
                            "Constant"
                        ],
                        [
                            "os.path.join(checkpoint_dir, 'best_model.h5')",
                            "Call"
                        ]
                    ]
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "save_best_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "parse_single_example_63": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "serialized": {
                    "value": "example_proto",
                    "type": "Name",
                    "possible_values": []
                },
                "features": {
                    "value": "feature_description",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'HOSPITAL_EXPIRE_FLAG': tf.FixedLenFeature([], dtype=tf.int64), 'feature1': tf.VarLenFeature(dtype=tf.int64), 'feature2': tf.VarLenFeature(dtype=tf.int64), 'feature3': tf.VarLenFeature(dtype=tf.int64), 'feature4': tf.VarLenFeature(dtype=tf.int64), 'feature5': tf.VarLenFeature(dtype=tf.int64), 'feature6': tf.VarLenFeature(dtype=tf.int64), 'feature7': tf.VarLenFeature(dtype=tf.int64), 'feature8': tf.VarLenFeature(dtype=tf.int64), 'feature9': tf.VarLenFeature(dtype=tf.int64)}",
                            "Dict"
                        ]
                    ]
                }
            },
            "cast_64": {
                "variable": {
                    "value": "label",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "x['HOSPITAL_EXPIRE_FLAG']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_65": {
                "variable": {
                    "value": "ch_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature1'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_66": {
                "variable": {
                    "value": "inputcv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature2'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_67": {
                "variable": {
                    "value": "inputmv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature3'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_68": {
                "variable": {
                    "value": "lab_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature4'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_69": {
                "variable": {
                    "value": "microbio_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature5'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "note_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature6'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "output_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature7'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_72": {
                "variable": {
                    "value": "prescription_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature8'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "procedure_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature9'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "FixedLenFeature_49": {
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_50": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_51": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_52": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_53": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_54": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_55": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_56": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_57": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_58": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_125": {
                "variable": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "backend.floatx()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Embedding_139": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_chartevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_chartevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_ch",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_148": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_inputevents_cv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_inputevents_cv'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_inputcv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_157": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_inputevents_mv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_inputevents_mv'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_inputmv_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_166": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_labevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_labevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_lab_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_174": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_microbioevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_microbioevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_microbio",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_182": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_noteevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_noteevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_note_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_189": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_outputevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_outputevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_output_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_197": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_prescriptionevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_prescriptionevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_prescription_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_205": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_procedureevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_procedureevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_procedure_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SpatialDropout1D_223": {
                "rate": {
                    "value": "args.embedding_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Lambda_225": {
                "function": {
                    "value": "lambda x: call(x)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_234": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "main_output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "to_dense_65": {
                "sp_input": {
                    "value": "x['feature1']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_66": {
                "sp_input": {
                    "value": "x['feature2']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_67": {
                "sp_input": {
                    "value": "x['feature3']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_68": {
                "sp_input": {
                    "value": "x['feature4']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_69": {
                "sp_input": {
                    "value": "x['feature5']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_70": {
                "sp_input": {
                    "value": "x['feature6']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_71": {
                "sp_input": {
                    "value": "x['feature7']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_72": {
                "sp_input": {
                    "value": "x['feature8']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_73": {
                "sp_input": {
                    "value": "x['feature9']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_132": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dense_229": {
                "units": {
                    "value": "args.neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'dense_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dropout_232": {
                "rate": {
                    "value": "args.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_247": {
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tf_record_iterator_35": {
                "path": {
                    "value": "train_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.train_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_36": {
                "path": {
                    "value": "valid_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.valid_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_37": {
                "path": {
                    "value": "test_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.test_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "floatx_125": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_130": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_sum_130": {
                "input_tensor": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "epsilon_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Create Models/remote_training/trainer/task_ch_events-LOS.py": {
        "tensorflow": {
            "TFRecordDataset_45": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "train_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[train_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_46": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "valid_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[valid_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_47": {
                "variable": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "test_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[test_input]",
                            "List"
                        ]
                    ]
                }
            },
            "Input_132": {
                "variable": {
                    "value": "input_ch_event",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(11206,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "ch_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_154": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_ch_event]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "main_output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "keras.layers.Dense(1, activation='sigmoid', name='main_output')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorBoard_175": {
                "variable": {
                    "value": "tensorboard_cb",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "os.path.join(output_dir, 'keras_tensorboard', 'log_{}'.format(time()))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_189": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'best_model.h5'",
                            "Constant"
                        ],
                        [
                            "os.path.join(checkpoint_dir, 'best_model.h5')",
                            "Call"
                        ]
                    ]
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "save_best_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "parse_single_example_65": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "serialized": {
                    "value": "example_proto",
                    "type": "Name",
                    "possible_values": []
                },
                "features": {
                    "value": "feature_description",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'LOS': tf.FixedLenFeature([], dtype=tf.int64), 'feature1': tf.VarLenFeature(dtype=tf.int64), 'feature2': tf.VarLenFeature(dtype=tf.int64), 'feature3': tf.VarLenFeature(dtype=tf.int64), 'feature4': tf.VarLenFeature(dtype=tf.int64), 'feature5': tf.VarLenFeature(dtype=tf.int64), 'feature6': tf.VarLenFeature(dtype=tf.int64), 'feature7': tf.VarLenFeature(dtype=tf.int64), 'feature8': tf.VarLenFeature(dtype=tf.int64), 'feature9': tf.VarLenFeature(dtype=tf.int64)}",
                            "Dict"
                        ]
                    ]
                }
            },
            "cast_66": {
                "variable": {
                    "value": "label",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "x['LOS']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_67": {
                "variable": {
                    "value": "ch_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature1'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_68": {
                "variable": {
                    "value": "inputcv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature2'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_69": {
                "variable": {
                    "value": "inputmv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature3'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "lab_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature4'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "microbio_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature5'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_72": {
                "variable": {
                    "value": "note_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature6'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "output_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature7'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_74": {
                "variable": {
                    "value": "prescription_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature8'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_75": {
                "variable": {
                    "value": "procedure_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature9'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "FixedLenFeature_51": {
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_52": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_53": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_54": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_55": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_56": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_57": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_58": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_59": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_60": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_119": {
                "variable": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "backend.floatx()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Embedding_133": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_chartevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_chartevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_ch",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SpatialDropout1D_141": {
                "rate": {
                    "value": "args.embedding_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Lambda_143": {
                "function": {
                    "value": "lambda x: call(x)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_152": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "main_output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "to_dense_67": {
                "sp_input": {
                    "value": "x['feature1']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_68": {
                "sp_input": {
                    "value": "x['feature2']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_69": {
                "sp_input": {
                    "value": "x['feature3']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_70": {
                "sp_input": {
                    "value": "x['feature4']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_71": {
                "sp_input": {
                    "value": "x['feature5']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_72": {
                "sp_input": {
                    "value": "x['feature6']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_73": {
                "sp_input": {
                    "value": "x['feature7']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_74": {
                "sp_input": {
                    "value": "x['feature8']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_75": {
                "sp_input": {
                    "value": "x['feature9']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_126": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dense_147": {
                "units": {
                    "value": "args.neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'dense_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dropout_150": {
                "rate": {
                    "value": "args.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_157": {
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tf_record_iterator_37": {
                "path": {
                    "value": "train_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.train_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_38": {
                "path": {
                    "value": "valid_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.valid_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_39": {
                "path": {
                    "value": "test_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.test_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "floatx_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_124": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_sum_124": {
                "input_tensor": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "epsilon_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Create Models/remote_training/trainer/task_ch_events.py": {
        "tensorflow": {
            "TFRecordDataset_45": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "train_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[train_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_46": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "valid_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[valid_input]",
                            "List"
                        ]
                    ]
                }
            },
            "TFRecordDataset_47": {
                "variable": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": []
                },
                "filenames": {
                    "value": "test_filenames",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[test_input]",
                            "List"
                        ]
                    ]
                }
            },
            "Input_132": {
                "variable": {
                    "value": "input_ch_event",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "(11206,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "ch_events",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Model_154": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[input_ch_event]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "main_output",
                    "type": "Name",
                    "possible_values": [
                        [
                            "keras.layers.Dense(1, activation='sigmoid', name='main_output')(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorBoard_175": {
                "variable": {
                    "value": "tensorboard_cb",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "os.path.join(output_dir, 'keras_tensorboard', 'log_{}'.format(time()))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_189": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "filepath": {
                    "value": "checkpoint_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'best_model.h5'",
                            "Constant"
                        ],
                        [
                            "os.path.join(checkpoint_dir, 'best_model.h5')",
                            "Call"
                        ]
                    ]
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "save_best_only": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "parse_single_example_65": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "serialized": {
                    "value": "example_proto",
                    "type": "Name",
                    "possible_values": []
                },
                "features": {
                    "value": "feature_description",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'HOSPITAL_EXPIRE_FLAG': tf.FixedLenFeature([], dtype=tf.int64), 'feature1': tf.VarLenFeature(dtype=tf.int64), 'feature2': tf.VarLenFeature(dtype=tf.int64), 'feature3': tf.VarLenFeature(dtype=tf.int64), 'feature4': tf.VarLenFeature(dtype=tf.int64), 'feature5': tf.VarLenFeature(dtype=tf.int64), 'feature6': tf.VarLenFeature(dtype=tf.int64), 'feature7': tf.VarLenFeature(dtype=tf.int64), 'feature8': tf.VarLenFeature(dtype=tf.int64), 'feature9': tf.VarLenFeature(dtype=tf.int64)}",
                            "Dict"
                        ]
                    ]
                }
            },
            "cast_66": {
                "variable": {
                    "value": "label",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "x['HOSPITAL_EXPIRE_FLAG']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_67": {
                "variable": {
                    "value": "ch_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature1'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_68": {
                "variable": {
                    "value": "inputcv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature2'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_69": {
                "variable": {
                    "value": "inputmv_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature3'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "lab_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature4'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "microbio_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature5'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_72": {
                "variable": {
                    "value": "note_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature6'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "output_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature7'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_74": {
                "variable": {
                    "value": "prescription_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature8'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_75": {
                "variable": {
                    "value": "procedure_events",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.sparse.to_dense(x['feature9'])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "FixedLenFeature_51": {
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_52": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_53": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_54": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_55": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_56": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_57": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_58": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_59": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "VarLenFeature_60": {
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_119": {
                "variable": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "backend.floatx()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Embedding_133": {
                "output_dim": {
                    "value": "embed_dim['tokenizer_chartevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ]
                    ]
                },
                "input_dim": {
                    "value": "tokenizer_dict['tokenizer_chartevents'] + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mask_zero": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "embedding_layer_ch",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SpatialDropout1D_141": {
                "rate": {
                    "value": "args.embedding_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Lambda_143": {
                "function": {
                    "value": "lambda x: call(x)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Dense_152": {
                "units": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "main_output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "to_dense_67": {
                "sp_input": {
                    "value": "x['feature1']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_68": {
                "sp_input": {
                    "value": "x['feature2']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_69": {
                "sp_input": {
                    "value": "x['feature3']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_70": {
                "sp_input": {
                    "value": "x['feature4']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_71": {
                "sp_input": {
                    "value": "x['feature5']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_72": {
                "sp_input": {
                    "value": "x['feature6']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_73": {
                "sp_input": {
                    "value": "x['feature7']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_74": {
                "sp_input": {
                    "value": "x['feature8']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "to_dense_75": {
                "sp_input": {
                    "value": "x['feature9']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_126": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Dense_147": {
                "units": {
                    "value": "args.neurons",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "'dense_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dropout_150": {
                "rate": {
                    "value": "args.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_157": {
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tf_record_iterator_37": {
                "path": {
                    "value": "train_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.train_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_38": {
                "path": {
                    "value": "valid_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.valid_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tf_record_iterator_39": {
                "path": {
                    "value": "test_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.test_input",
                            "Attribute"
                        ]
                    ]
                }
            },
            "floatx_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_124": {
                "a": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "inputs * mask",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_sum_124": {
                "input_tensor": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "math_ops.cast(mask, backend.floatx())",
                            "Call"
                        ],
                        [
                            "array_ops.reshape(mask, broadcast_shape)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "steps_axis",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "epsilon_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Prepare Training Data/create_tfrecords_train_test_valid.py": {
        "tensorflow": {
            "Example_49": {
                "variable": {
                    "value": "example_proto",
                    "type": "Name",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature=feature)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TFRecordWriter_59": {
                "path": {
                    "value": "mypath_output + filename",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "TFRecordWriter_78": {
                "path": {
                    "value": "mypath_output + filename",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "TFRecordWriter_96": {
                "path": {
                    "value": "mypath_output + filename",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Feature_35": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=[target])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_36": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=[target2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_37": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_38": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_39": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_40": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature4)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_41": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_42": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature6)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_43": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature7)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_44": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature8)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_45": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=feature9)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Features_49": {
                "feature": {
                    "value": "feature",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'HOSPITAL_EXPIRE_FLAG': tf.train.Feature(int64_list=tf.train.Int64List(value=[target])), 'LOS': tf.train.Feature(int64_list=tf.train.Int64List(value=[target2])), 'feature1': tf.train.Feature(int64_list=tf.train.Int64List(value=feature1)), 'feature2': tf.train.Feature(int64_list=tf.train.Int64List(value=feature2)), 'feature3': tf.train.Feature(int64_list=tf.train.Int64List(value=feature3)), 'feature4': tf.train.Feature(int64_list=tf.train.Int64List(value=feature4)), 'feature5': tf.train.Feature(int64_list=tf.train.Int64List(value=feature5)), 'feature6': tf.train.Feature(int64_list=tf.train.Int64List(value=feature6)), 'feature7': tf.train.Feature(int64_list=tf.train.Int64List(value=feature7)), 'feature8': tf.train.Feature(int64_list=tf.train.Int64List(value=feature8)), 'feature9': tf.train.Feature(int64_list=tf.train.Int64List(value=feature9))}",
                            "Dict"
                        ]
                    ]
                }
            },
            "Int64List_35": {
                "value": {
                    "value": "[target]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Int64List_36": {
                "value": {
                    "value": "[target2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Int64List_37": {
                "value": {
                    "value": "feature1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_38": {
                "value": {
                    "value": "feature2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_39": {
                "value": {
                    "value": "feature3",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_40": {
                "value": {
                    "value": "feature4",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_41": {
                "value": {
                    "value": "feature5",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_42": {
                "value": {
                    "value": "feature6",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_43": {
                "value": {
                    "value": "feature7",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_44": {
                "value": {
                    "value": "feature8",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Int64List_45": {
                "value": {
                    "value": "feature9",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "pad_sequences_64": {
                "sequences": {
                    "value": "[df_test['event'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['event']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_65": {
                "sequences": {
                    "value": "[df_test['inputevents_cv'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['inputevents_cv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_66": {
                "sequences": {
                    "value": "[df_test['inputevents_mv'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['inputevents_mv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_67": {
                "sequences": {
                    "value": "[df_test['labevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['labevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_68": {
                "sequences": {
                    "value": "[df_test['microbioevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['microbioevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_69": {
                "sequences": {
                    "value": "[df_test['noteevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['noteevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_70": {
                "sequences": {
                    "value": "[df_test['outputevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['outputevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_71": {
                "sequences": {
                    "value": "[df_test['prescriptionevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['prescriptionevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_72": {
                "sequences": {
                    "value": "[df_test['procedureevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['procedureevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_83": {
                "sequences": {
                    "value": "[df_valid['event'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['event']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_84": {
                "sequences": {
                    "value": "[df_valid['inputevents_cv'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['inputevents_cv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_85": {
                "sequences": {
                    "value": "[df_valid['inputevents_mv'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['inputevents_mv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_86": {
                "sequences": {
                    "value": "[df_valid['labevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['labevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_87": {
                "sequences": {
                    "value": "[df_valid['microbioevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['microbioevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_88": {
                "sequences": {
                    "value": "[df_valid['noteevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['noteevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_89": {
                "sequences": {
                    "value": "[df_valid['outputevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['outputevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_90": {
                "sequences": {
                    "value": "[df_valid['prescriptionevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['prescriptionevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_91": {
                "sequences": {
                    "value": "[df_valid['procedureevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['procedureevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_101": {
                "sequences": {
                    "value": "[df_train['event'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['event']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_102": {
                "sequences": {
                    "value": "[df_train['inputevents_cv'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['inputevents_cv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_103": {
                "sequences": {
                    "value": "[df_train['inputevents_mv'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['inputevents_mv']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_104": {
                "sequences": {
                    "value": "[df_train['labevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['labevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_105": {
                "sequences": {
                    "value": "[df_train['microbioevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['microbioevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_106": {
                "sequences": {
                    "value": "[df_train['noteevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['noteevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_107": {
                "sequences": {
                    "value": "[df_train['outputevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['outputevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_108": {
                "sequences": {
                    "value": "[df_train['prescriptionevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['prescriptionevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_sequences_109": {
                "sequences": {
                    "value": "[df_train['procedureevents'][i]]",
                    "type": "List",
                    "possible_values": []
                },
                "maxlen": {
                    "value": "pctl_999_dict['procedureevents']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "json.load(filehandle)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "post",
                    "type": "Constant",
                    "possible_values": []
                },
                "truncating": {
                    "value": "pre",
                    "type": "Constant",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}