{
    "test.py": {
        "sklearn": {
            "f1_score_129": {
                "variable": {
                    "value": "F1_score",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "output_pred_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_absolute_error_133": {
                "variable": {
                    "value": "mae",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "output_pred_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ]
                    ]
                }
            },
            "f1_score_163": {
                "variable": {
                    "value": "F1_score",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "output_pred_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_absolute_error_167": {
                "variable": {
                    "value": "mae",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((target_list, target), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "output_pred_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ],
                        [
                            "np.array([])",
                            "Call"
                        ],
                        [
                            "np.concatenate((output_pred_list, output_pred), axis=None)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "load_173": {
                "f": {
                    "value": "self.model_1_load_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_176": {
                "f": {
                    "value": "self.model_2_load_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_193": {
                "variable": {
                    "value": "prediction1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_1(images)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_196": {
                "variable": {
                    "value": "prediction2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_2(images)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction2)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_185": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "data.py": {
        "torch": {
            "DataLoader_157": {
                "variable": {
                    "value": "labeled_data_loader_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "labeled_train_dataset_1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ObjDataset(labeled_train_images_1, labeled_train_gts_1, image_size)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_163": {
                "variable": {
                    "value": "labeled_data_loader_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "labeled_train_dataset_2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ObjDataset(labeled_train_images_2, labeled_train_gts_2, image_size)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_169": {
                "variable": {
                    "value": "unlabeled_data_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "unlabeled_train_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ObjDataset(unlabeled_train_images, unlabeled_train_gts, image_size)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_175": {
                "variable": {
                    "value": "val_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ValObjDataset(val_images, val_gts, image_size)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "loss.py": {
        "torch": {
            "BCELoss_7": {
                "variable": {
                    "value": "CE",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model/UNet.py": {
        "torch": {
            "ReLU_8": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_9": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "middle_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_10": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "middle_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "middle_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_12": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "MaxPool2d_32": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_33": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_45": {
                "variable": {
                    "value": "self.final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nb_filter[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_57": {
                "tensors": {
                    "value": "[x3_0, self.up(x4_0)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_58": {
                "tensors": {
                    "value": "[x2_0, self.up(x3_1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_59": {
                "tensors": {
                    "value": "[x1_0, self.up(x2_2)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "tensors": {
                    "value": "[x0_0, self.up(x1_3)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "model/model_discriminator.py": {
        "torch": {
            "Sequential_26": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*self.net",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_16": {
                "in_channels": {
                    "value": "input_nc",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ndf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_17": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "ndf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ndf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "norm_layer.func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "norm_layer == nn.InstanceNorm2d",
                            "Compare"
                        ]
                    ]
                }
            },
            "LeakyReLU_20": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "in_channels": {
                    "value": "ndf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "norm_layer.func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "norm_layer == nn.InstanceNorm2d",
                            "Compare"
                        ]
                    ]
                }
            },
            "Sigmoid_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "BCELoss_35": {
                "variable": {
                    "value": "CE",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_79": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.model_1.parameters()) + list(self.model_2.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr_gen",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "opt.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "RMSprop_80": {
                "variable": {
                    "value": "dis_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "dis_params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.critic.parameters()",
                            "Call"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr_dis",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_119": {
                "variable": {
                    "value": "prediction_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction_1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_1(inputs_S1)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_1)",
                            "Call"
                        ],
                        [
                            "prediction_1.detach()",
                            "Call"
                        ],
                        [
                            "prediction_1.detach()",
                            "Call"
                        ],
                        [
                            "self.model_1(images)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_122": {
                "variable": {
                    "value": "u_prediction_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "u_prediction_1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_1(inputs_U)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(u_prediction_1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_126": {
                "variable": {
                    "value": "prediction_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction_2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_2(inputs_S2)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_2)",
                            "Call"
                        ],
                        [
                            "prediction_2.detach()",
                            "Call"
                        ],
                        [
                            "prediction_2.detach()",
                            "Call"
                        ],
                        [
                            "self.model_2(images)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_2)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_129": {
                "variable": {
                    "value": "u_prediction_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "u_prediction_2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_2(inputs_U)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(u_prediction_2)",
                            "Call"
                        ]
                    ]
                }
            },
            "interpolate_139": {
                "variable": {
                    "value": "D_fake_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(prediction_1))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(prediction_1.shape[2], prediction_1.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_142": {
                "variable": {
                    "value": "D_fake_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(prediction_2))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(prediction_2.shape[2], prediction_2.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_146": {
                "variable": {
                    "value": "D_fake3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(u_prediction_1))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(u_prediction_1.shape[2], u_prediction_1.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_150": {
                "variable": {
                    "value": "D_fake4",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(u_prediction_2))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(u_prediction_2.shape[2], u_prediction_2.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_171": {
                "variable": {
                    "value": "D_fake_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(prediction_1))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(prediction_1.shape[2], prediction_1.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_174": {
                "variable": {
                    "value": "D_fake_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(prediction_2))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(prediction_2.shape[2], prediction_2.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_177": {
                "variable": {
                    "value": "D_real_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(labels_S1))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(labels_S1.shape[2], labels_S1.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_180": {
                "variable": {
                    "value": "D_real_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sigmoid(self.critic(labels_S2))",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(labels_S2.shape[2], labels_S2.shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_204": {
                "variable": {
                    "value": "prediction_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction_1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_1(inputs_S1)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_1)",
                            "Call"
                        ],
                        [
                            "prediction_1.detach()",
                            "Call"
                        ],
                        [
                            "prediction_1.detach()",
                            "Call"
                        ],
                        [
                            "self.model_1(images)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_207": {
                "variable": {
                    "value": "prediction_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction_2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model_2(inputs_S2)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_2)",
                            "Call"
                        ],
                        [
                            "prediction_2.detach()",
                            "Call"
                        ],
                        [
                            "prediction_2.detach()",
                            "Call"
                        ],
                        [
                            "self.model_2(images)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(prediction_2)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_259": {
                "obj": {
                    "value": "self.model_1.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "Checkpoints_Path + '/Model_1.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_260": {
                "obj": {
                    "value": "self.critic.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "Checkpoints_Path + '/Critic.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_263": {
                "obj": {
                    "value": "self.model_2.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "Checkpoints_Path + '/Model_2.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_264": {
                "obj": {
                    "value": "self.critic.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "Checkpoints_Path + '/Critic.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_139": {
                "input": {
                    "value": "self.critic(prediction_1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_142": {
                "input": {
                    "value": "self.critic(prediction_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_146": {
                "input": {
                    "value": "self.critic(u_prediction_1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_150": {
                "input": {
                    "value": "self.critic(u_prediction_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_171": {
                "input": {
                    "value": "self.critic(prediction_1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_174": {
                "input": {
                    "value": "self.critic(prediction_2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_177": {
                "input": {
                    "value": "self.critic(labels_S1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_180": {
                "input": {
                    "value": "self.critic(labels_S2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_196": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}