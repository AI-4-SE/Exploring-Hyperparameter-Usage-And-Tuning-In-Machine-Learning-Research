{
    "lib/utils/eval_utils.py": {
        "sklearn": {
            "roc_curve_59": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "{}",
                            "Dict"
                        ],
                        [
                            "{}",
                            "Dict"
                        ],
                        [
                            "np.array([], dtype=np.int8)",
                            "Call"
                        ],
                        [
                            "np.concatenate((labels, all_labels[key]), axis=0)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(scores - np.min(scores)) / (np.max(scores) - np.min(scores))",
                            "BinOp"
                        ]
                    ]
                },
                "pos_label": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "auc_61": {
                "variable": {
                    "value": "auc",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "tpr",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "run_AD.py": {
        "sklearn": {}
    },
    "lib/models/rnn_ed.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "GRUCell_19": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.args.input_embed_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.args.enc_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.hidden_to_pred_input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.args.dec_hidden_size, self.args.predictor_input_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GRUCell_44": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.args.predictor_input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.args.dec_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_63": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "h.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.pred_timesteps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.args.pred_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_65": {
                "variable": {
                    "value": "all_pred_h",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[h.shape[0], self.args.pred_timesteps, self.args.dec_hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_66": {
                "variable": {
                    "value": "all_pred_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[h.shape[0], self.args.pred_timesteps, self.args.predictor_input_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_69": {
                "variable": {
                    "value": "pred_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "h.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.predictor_input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_114": {
                "variable": {
                    "value": "self.box_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(4, self.args.input_embed_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_116": {
                "variable": {
                    "value": "self.flow_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(50, self.args.input_embed_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_118": {
                "variable": {
                    "value": "self.ego_pred_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3, self.args.input_embed_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "box_h",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.box_enc_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_151": {
                "variable": {
                    "value": "flow_h",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.flow_enc_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_154": {
                "variable": {
                    "value": "fol_predictions",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.args.pred_timesteps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.args.pred_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_238": {
                "variable": {
                    "value": "self.ego_embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3, self.args.ego_embed_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_263": {
                "variable": {
                    "value": "ego_h",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.enc_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_266": {
                "variable": {
                    "value": "predictions",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.args.pred_timesteps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.args.pred_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.hidden_to_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.args.dec_hidden_size, self.args.pred_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_53": {
                "variable": {
                    "value": "self.hidden_to_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.args.dec_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.pred_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_209": {
                "variable": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(box_h, flow_h)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "in_features": {
                    "value": "self.args.dec_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.predictor_input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_114": {
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.input_embed_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_116": {
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.input_embed_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_118": {
                "in_features": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.input_embed_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_167": {
                "variable": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(box_h, flow_h)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_238": {
                "in_features": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.ego_embed_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_239": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_49": {
                "in_features": {
                    "value": "self.args.dec_hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.args.pred_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "lib/models/trackers.py": {
        "torch": {
            "device_7": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "zeros_23": {
                "variable": {
                    "value": "self.bbox_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.box_enc_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_24": {
                "variable": {
                    "value": "self.flow_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.flow_enc_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_180": {
                "variable": {
                    "value": "pred_box_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_boxes_t",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "all_trackers.trackers[track_id].pred_boxes_t",
                            "Attribute"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_206": {
                "variable": {
                    "value": "self.ego_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.ego_enc_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_209": {
                "variable": {
                    "value": "self.prev_ego_motions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.as_tensor(self.ego_motion)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_240": {
                "variable": {
                    "value": "self.prev_ego_motions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.prev_ego_motions, self.ego_motion)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_7": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sqrt_275": {
                "variable": {
                    "value": "L_ego",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum((torch.mean(self.pred_ego_t, dim=0) - self.ego_motion) ** 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_138": {
                "variable": {
                    "value": "self.pred_boxes_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.pred_boxes_t, prev_predictions[prev_steps - i - 1][i:i + 1, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_260": {
                "variable": {
                    "value": "self.pred_ego_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.pred_ego_t, prev_predictions[prev_steps - i - 1][i:i + 1, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_275": {
                "input": {
                    "value": "(torch.mean(self.pred_ego_t, dim=0) - self.ego_motion) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "as_tensor_209": {
                "data": {
                    "value": "self.ego_motion",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_275": {
                "input": {
                    "value": "self.pred_ego_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lib/utils/fol_dataloader.py": {
        "torch": {
            "device_9": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "zeros_98": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.pred_timesteps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "session.shape[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_184": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.args.pred_timesteps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "ego_motion_session.shape[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "is_available_9": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_188": {
                "variable": {
                    "value": "target[i, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "ego_motion_session[target_start:target_start + self.args.pred_timesteps, :] - ego_motion_session[target_start - 1:target_start, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "as_tensor_103": {
                "variable": {
                    "value": "target[i, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "session[target_start:target_start + self.args.pred_timesteps, :] - session[target_start - 1:target_start, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_166": {
                "tensors": {
                    "value": "(ego_motion_session[0:1, :], ego_motion_session[start + 1:end] - ego_motion_session[start:end - 1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lib/utils/train_val_utils.py": {
        "torch": {
            "sqrt_248": {
                "variable": {
                    "value": "L2_diff",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum((x_pred - x_true) ** 2, dim=3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_250": {
                "variable": {
                    "value": "L2_all_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L2_diff",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sqrt(torch.sum((x_pred - x_true) ** 2, dim=3))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_253": {
                "variable": {
                    "value": "L2_mean_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L2_all_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sum(L2_diff, dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_256": {
                "variable": {
                    "value": "L2_mean_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "L2_mean_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.mean(L2_all_pred, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.mean(L2_mean_pred, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "set_grad_enabled_21": {
                "mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_grad_enabled_55": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_grad_enabled_87": {
                "mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_grad_enabled_124": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_grad_enabled_160": {
                "mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_grad_enabled_217": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_248": {
                "input": {
                    "value": "(x_pred - x_true) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "run_fol_for_AD.py": {
        "torch": {
            "device_47": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "is_available_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_54": {
                "f": {
                    "value": "args.best_fol_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_56": {
                "f": {
                    "value": "args.best_ego_pred_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "test_fol.py": {
        "torch": {
            "device_22": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_109": {
                "variable": {
                    "value": "test_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "HEVIDataset(args, 'val')",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_grad_enabled_45": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_91": {
                "f": {
                    "value": "args.best_fol_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_96": {
                "f": {
                    "value": "args.best_ego_pred_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train_ego_pred.py": {
        "torch": {
            "device_21": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "RMSprop_28": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_41": {
                "variable": {
                    "value": "val_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "HEVIEgoDataset(args, 'val')",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_57": {
                "variable": {
                    "value": "train_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "HEVIEgoDataset(args, 'train')",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_45": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_85": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(args.checkpoint_dir, saved_model_name)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "train_fol.py": {
        "torch": {
            "device_21": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "RMSprop_36": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "all_params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "fol_model.parameters()",
                            "Call"
                        ],
                        [
                            "list(ego_pred_model.parameters()) + list(fol_model.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_51": {
                "variable": {
                    "value": "val_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "HEVIDataset(args, 'val')",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_75": {
                "variable": {
                    "value": "train_gen",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "HEVIDataset(args, 'train')",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_59": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_60": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_61": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "args.pred_timesteps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_33": {
                "f": {
                    "value": "args.best_ego_pred_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "args.segment_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_124": {
                "obj": {
                    "value": "fol_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(args.checkpoint_dir, saved_fol_model_name)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_125": {
                "obj": {
                    "value": "ego_pred_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(args.checkpoint_dir, saved_ego_pred_model_name)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}