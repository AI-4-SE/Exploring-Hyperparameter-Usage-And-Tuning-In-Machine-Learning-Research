{
    "beam_test_model.py": {
        "tensorflow": {
            "TopKCategoricalAccuracy_35": {
                "variable": {
                    "value": "top1",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_1_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "TopKCategoricalAccuracy_36": {
                "variable": {
                    "value": "top5",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_5_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "TopKCategoricalAccuracy_37": {
                "variable": {
                    "value": "top10",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_10_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            }
        }
    },
    "beam_train_model.py": {
        "tensorflow": {
            "TopKCategoricalAccuracy_44": {
                "variable": {
                    "value": "top1",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_1_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "TopKCategoricalAccuracy_45": {
                "variable": {
                    "value": "top5",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_5_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "TopKCategoricalAccuracy_46": {
                "variable": {
                    "value": "top10",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_10_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "Adam_48": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                }
            },
            "LearningRateScheduler_51": {
                "variable": {
                    "value": "callback",
                    "type": "variable",
                    "possible_values": []
                },
                "schedule": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lambda epoch, lr: lr if epoch < 10 else lr / 10.0",
                            "Lambda"
                        ]
                    ]
                }
            },
            "reduce_sum_41": {
                "input_tensor": {
                    "value": "tf.reduce_mean(y_true[y_pred > 0] * tf.math.log(y_pred[y_pred > 0]), axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_41": {
                "input_tensor": {
                    "value": "y_true[y_pred > 0] * tf.math.log(y_pred[y_pred > 0])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_41": {
                "x": {
                    "value": "y_pred[y_pred > 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "dataloader.py": {
        "tensorflow": {}
    },
    "federated_beam.py": {
        "tensorflow": {
            "TopKCategoricalAccuracy_93": {
                "variable": {
                    "value": "top1",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_1_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "TopKCategoricalAccuracy_94": {
                "variable": {
                    "value": "top10",
                    "type": "variable",
                    "possible_values": []
                },
                "k": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "top_10_categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "Sequential_61": {
                "layers": {
                    "value": "[tf.keras.layers.Input(shape=(20, 200, 1)), tf.keras.layers.Conv2D(5, 3, 1, padding='same'), tf.keras.layers.BatchNormalization(axis=3), tf.keras.layers.PReLU(shared_axes=[1, 2]), tf.keras.layers.Conv2D(5, 3, 1, padding='same'), tf.keras.layers.BatchNormalization(axis=3), tf.keras.layers.PReLU(shared_axes=[1, 2]), tf.keras.layers.Conv2D(5, 3, 2, padding='same'), tf.keras.layers.BatchNormalization(axis=3), tf.keras.layers.PReLU(shared_axes=[1, 2]), tf.keras.layers.Conv2D(5, 3, 1, padding='same'), tf.keras.layers.BatchNormalization(axis=3), tf.keras.layers.PReLU(shared_axes=[1, 2]), tf.keras.layers.Conv2D(5, 3, 2, padding='same'), tf.keras.layers.BatchNormalization(axis=3), tf.keras.layers.PReLU(shared_axes=[1, 2]), tf.keras.layers.Conv2D(1, 3, (1, 2), padding='same'), tf.keras.layers.BatchNormalization(axis=3), tf.keras.layers.PReLU(shared_axes=[1, 2]), tf.keras.layers.Flatten(), tf.keras.layers.Dense(16), tf.keras.layers.ReLU(), tf.keras.layers.Dense(256), tf.keras.layers.Softmax()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_62": {
                "shape": {
                    "value": "(20, 200, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2D_63": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_64": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_65": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_66": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_67": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_68": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_69": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_70": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_71": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_72": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_73": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_74": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_75": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_76": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_77": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_78": {
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_79": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_80": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Flatten_81": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_82": {
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_84": {
                "units": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_104": {
                "lr": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "SGD_105": {
                "lr": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_144": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models.py": {
        "tensorflow": {
            "Sequential_3": {
                "variable": {
                    "value": "Lidar2D",
                    "type": "variable",
                    "possible_values": []
                },
                "layers": {
                    "value": "[layers.Input(shape=(20, 200, 1)), layers.Conv2D(5, 3, 1, padding='same', kernel_initializer=initializers.HeUniform), layers.BatchNormalization(axis=3), layers.PReLU(shared_axes=[1, 2]), layers.Conv2D(5, 3, 1, padding='same', kernel_initializer=initializers.HeUniform), layers.BatchNormalization(axis=3), layers.PReLU(shared_axes=[1, 2]), layers.Conv2D(5, 3, 2, padding='same', kernel_initializer=initializers.HeUniform), layers.BatchNormalization(axis=3), layers.PReLU(shared_axes=[1, 2]), layers.Conv2D(5, 3, 1, padding='same', kernel_initializer=initializers.HeUniform), layers.BatchNormalization(axis=3), layers.PReLU(shared_axes=[1, 2]), layers.Conv2D(5, 3, 2, padding='same', kernel_initializer=initializers.HeUniform), layers.BatchNormalization(axis=3), layers.PReLU(shared_axes=[1, 2]), layers.Conv2D(1, 3, (1, 2), padding='same', kernel_initializer=initializers.HeUniform), layers.BatchNormalization(axis=3), layers.PReLU(shared_axes=[1, 2]), layers.Flatten(), layers.Dense(16), layers.ReLU(), layers.Dense(256), layers.Softmax()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "LidarMarcus",
                    "type": "variable",
                    "possible_values": []
                },
                "layers": {
                    "value": "[layers.Input(shape=(20, 200, 10)), layers.Conv2D(10, kernel_size=(13, 13), activation='relu', padding='same'), layers.Conv2D(30, (11, 11), padding='SAME', activation='relu'), layers.Conv2D(25, (9, 9), padding='SAME', activation='relu'), layers.MaxPooling2D(pool_size=(2, 1)), layers.Dropout(0.3), layers.Conv2D(20, (7, 7), padding='SAME', activation='relu'), layers.MaxPooling2D(pool_size=(1, 2)), layers.Conv2D(15, (5, 5), padding='SAME', activation='relu'), layers.Dropout(0.3), layers.Conv2D(10, (3, 3), padding='SAME', activation='relu'), layers.Conv2D(1, (1, 1), padding='SAME', activation='relu'), layers.Flatten(), layers.Dense(256, activation='softmax')]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_4": {
                "shape": {
                    "value": "(20, 200, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2D_5": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.HeUniform",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_6": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_7": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_8": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.HeUniform",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_9": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_10": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_11": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.HeUniform",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_12": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_13": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_14": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.HeUniform",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_15": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_16": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_17": {
                "filters": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.HeUniform",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_18": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_19": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_20": {
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializers.HeUniform",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNormalization_21": {
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PReLU_22": {
                "shared_axes": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Flatten_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_24": {
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_27": {
                "units": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Input_32": {
                "shape": {
                    "value": "(20, 200, 10)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2D_33": {
                "filters": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(13, 13)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_36": {
                "filters": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(11, 11)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_37": {
                "filters": {
                    "value": "25",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(9, 9)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_38": {
                "pool_size": {
                    "value": "(2, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_40": {
                "filters": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MaxPooling2D_41": {
                "pool_size": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2D_42": {
                "filters": {
                    "value": "15",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_43": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2D_44": {
                "filters": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_45": {
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_47": {
                "units": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}