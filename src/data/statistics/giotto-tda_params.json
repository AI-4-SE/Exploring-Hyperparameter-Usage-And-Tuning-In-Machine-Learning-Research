{
    "gtda/curves/features.py": {
        "sklearn": {
            "check_array_231": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_147": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_230": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/curves/preprocessing.py": {
        "sklearn": {
            "check_array_109": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_71": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_108": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_151": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "gen_even_slices_115": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/curves/tests/test_features.py": {
        "sklearn": {}
    },
    "gtda/curves/tests/test_preprocessing.py": {
        "sklearn": {}
    },
    "gtda/diagrams/_metrics.py": {
        "sklearn": {
            "gen_even_slices_330": {
                "n": {
                    "value": "n_columns",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(X2)",
                            "Call"
                        ]
                    ]
                },
                "n_packs": {
                    "value": "effective_n_jobs(n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_438": {
                "n": {
                    "value": "_num_samples(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/diagrams/distance.py": {
        "sklearn": {
            "check_is_fitted_232": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/diagrams/features.py": {
        "sklearn": {
            "check_is_fitted_171": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_387": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_504": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_711": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "gen_even_slices_510": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_182": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/diagrams/preprocessing.py": {
        "sklearn": {
            "check_is_fitted_84": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_292": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_313": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_477": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/diagrams/representations.py": {
        "sklearn": {
            "check_is_fitted_158": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_201": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_394": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_444": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_663": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_714": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_910": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_967": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_1134": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_1177": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "gen_even_slices_165": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_402": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_670": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_922": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_1141": {
                "n": {
                    "value": "len(X)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/diagrams/tests/test_distance.py": {
        "sklearn": {}
    },
    "gtda/diagrams/tests/test_features_representations.py": {
        "sklearn": {}
    },
    "gtda/diagrams/tests/test_preprocessing.py": {
        "sklearn": {}
    },
    "gtda/graphs/geodesic_distance.py": {
        "sklearn": {
            "check_is_fitted_173": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/graphs/kneighbors.py": {
        "sklearn": {
            "check_is_fitted_150": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/graphs/tests/test_geodesic_distance.py": {
        "sklearn": {}
    },
    "gtda/graphs/tests/test_kneighbors.py": {
        "sklearn": {}
    },
    "gtda/graphs/tests/test_transition.py": {
        "sklearn": {}
    },
    "gtda/graphs/transition.py": {
        "sklearn": {
            "check_is_fitted_191": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/homology/cubical.py": {
        "sklearn": {
            "check_is_fitted_212": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/homology/simplicial.py": {
        "sklearn": {
            "pairwise_distances_856": {
                "variable": {
                    "value": "Xdgm",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_point_clouds(X, accept_sparse=True, distance_matrices=self._is_precomputed)",
                            "Call"
                        ],
                        [
                            "check_point_clouds(X, accept_sparse=True, force_all_finite=True, distance_matrices=self._is_precomputed)",
                            "Call"
                        ],
                        [
                            "check_point_clouds(X, accept_sparse=True, distance_matrices=self._is_precomputed)",
                            "Call"
                        ],
                        [
                            "check_point_clouds(X)",
                            "Call"
                        ],
                        [
                            "check_point_clouds(X)",
                            "Call"
                        ],
                        [
                            "check_point_clouds(X, accept_sparse=True, distance_matrices=True)",
                            "Call"
                        ]
                    ]
                },
                "metric": {
                    "value": "self.metric",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "check_is_fitted_298": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_683": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_954": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_1205": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_1430": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_1720": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/homology/tests/test_cubical.py": {
        "sklearn": {}
    },
    "gtda/homology/tests/test_simplicial.py": {
        "sklearn": {}
    },
    "gtda/images/filtrations.py": {
        "sklearn": {
            "check_array_120": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_175": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_353": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distances_374": {
                "variable": {
                    "value": "self.mesh_",
                    "type": "Attribute",
                    "possible_values": []
                },
                "X": {
                    "value": "self.center_",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "self.mesh_",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.metric",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_409": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_561": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_603": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_755": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_797": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_957": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_999": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_1157": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distances_1189": {
                "variable": {
                    "value": "self.mask_",
                    "type": "Attribute",
                    "possible_values": []
                },
                "X": {
                    "value": "center",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._size * np.ones((1, 3))",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "Y": {
                    "value": "self.mesh_",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.metric",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_1228": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "copy": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_174": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_408": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_602": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_796": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_998": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_1227": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "pairwise_distances_1167": {
                "X": {
                    "value": "[[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "Y": {
                    "value": "[[self.radius]]",
                    "type": "List",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.metric",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gen_even_slices_179": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_413": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_607": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_801": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_1003": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_1237": {
                "n": {
                    "value": "Xt.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/images/preprocessing.py": {
        "sklearn": {
            "check_array_94": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_130": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_302": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_425": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_472": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_624": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_129": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_array_261": {
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_301": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_471": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_array_592": {
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ],
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_623": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "gen_even_slices_134": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_306": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_477": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gen_even_slices_629": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/images/tests/test_filtrations.py": {
        "sklearn": {}
    },
    "gtda/images/tests/test_preprocessing.py": {
        "sklearn": {}
    },
    "gtda/mapper/cluster.py": {
        "sklearn": {
            "clone_184": {
                "variable": {
                    "value": "cloned_clusterer",
                    "type": "Variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "self.clusterer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "check_memory_298": {
                "variable": {
                    "value": "memory",
                    "type": "Variable",
                    "possible_values": []
                },
                "memory": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "check_array_438": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X)",
                            "Call"
                        ],
                        [
                            "check_array(X)",
                            "Call"
                        ]
                    ]
                }
            },
            "check_array_592": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X)",
                            "Call"
                        ],
                        [
                            "check_array(X)",
                            "Call"
                        ]
                    ]
                }
            },
            "check_array_137": {
                "array": {
                    "value": "X_tot",
                    "type": "Variable",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_138": {
                "array": {
                    "value": "masks",
                    "type": "Variable",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/cover.py": {
        "sklearn": {
            "check_array_139": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "X[:, None]",
                            "Subscript"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_180": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "X[:, None]",
                            "Subscript"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_242": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "X[:, None]",
                            "Subscript"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_439": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "X[:, None]",
                            "Subscript"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_480": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "X[:, None]",
                            "Subscript"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_521": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "check_array(X, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "X[:, None]",
                            "Subscript"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_179": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_259": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_479": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_coverers",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clone_536": {
                "estimator": {
                    "value": "coverer",
                    "type": "Call",
                    "possible_values": [
                        [
                            "OneDimensionalCover(kind=self.kind, n_intervals=self.n_intervals, overlap_frac=self.overlap_frac)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(kind=self.kind, n_intervals=self.n_intervals, overlap_frac=self.overlap_frac)",
                            "Call"
                        ]
                    ]
                }
            },
            "clone_393": {
                "estimator": {
                    "value": "coverer",
                    "type": "Call",
                    "possible_values": [
                        [
                            "OneDimensionalCover(kind=self.kind, n_intervals=self.n_intervals, overlap_frac=self.overlap_frac)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(kind=self.kind, n_intervals=self.n_intervals, overlap_frac=self.overlap_frac)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "gtda/mapper/filter.py": {
        "sklearn": {
            "check_array_96": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_array_168": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_array_71": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_95": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_140": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_167": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_216": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_239": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_243": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X[self.columns]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "copy": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_245": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "copy": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/nerve.py": {
        "sklearn": {}
    },
    "gtda/mapper/pipeline.py": {
        "sklearn": {
            "Pipeline_403": {
                "variable": {
                    "value": "map_and_cover",
                    "type": "Variable",
                    "possible_values": []
                },
                "steps": {
                    "value": "[('scaler', _scaler), ('filter_func', _filter_func), ('cover', _cover)]",
                    "type": "List",
                    "possible_values": []
                },
                "verbose": {
                    "value": "verbose",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "PCA_380": {
                "variable": {
                    "value": "_filter_func",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DBSCAN_399": {
                "variable": {
                    "value": "_clusterer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/tests/test_cluster.py": {
        "sklearn": {
            "KMeans_53": {
                "variable": {
                    "value": "kmeans",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DBSCAN_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PCA_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DBSCAN_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DBSCAN_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DBSCAN_89": {
                "metric": {
                    "value": "precomputed",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distances_90": {
                "X": {
                    "value": "X[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/tests/test_cover.py": {
        "sklearn": {
            "clone_192": {
                "variable": {
                    "value": "cover_clone",
                    "type": "Variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "cover",
                    "type": "Call",
                    "possible_values": [
                        [
                            "OneDimensionalCover(n_intervals=n_intervals)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(n_intervals=1)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(kind='uniform', n_intervals=n_intervals, overlap_frac=overlap_frac)",
                            "Call"
                        ],
                        [
                            "cover.fit(filter_values)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(kind='balanced', n_intervals=nb_intervals, overlap_frac=0.01)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(n_intervals=n_intervals)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(n_intervals=n_intervals, kind=kind, overlap_frac=overlap_frac)",
                            "Call"
                        ],
                        [
                            "OneDimensionalCover(n_intervals=10, kind='balanced', overlap_frac=0.3)",
                            "Call"
                        ],
                        [
                            "cover_cls(kind, n_intervals, overlap_fraction)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "gtda/mapper/tests/test_filter.py": {
        "sklearn": {
            "KernelDensity_106": {
                "variable": {
                    "value": "kde_desired",
                    "type": "Variable",
                    "possible_values": []
                },
                "bandwidth": {
                    "value": "np.std(X)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/tests/test_nerve.py": {
        "sklearn": {
            "DBSCAN_129": {
                "variable": {
                    "value": "clusterer",
                    "type": "Variable",
                    "possible_values": []
                },
                "eps": {
                    "value": "0.05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "make_circles_108": {
                "n_samples": {
                    "value": "2000",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/tests/test_visualization.py": {
        "sklearn": {
            "PCA_119": {
                "variable": {
                    "value": "pca",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PCA_107": {
                "n_components": {
                    "value": "self.n_components",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "PCA_111": {
                "n_components": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/utils/_list_feature_union.py": {
        "sklearn": {}
    },
    "gtda/mapper/utils/_visualization.py": {
        "sklearn": {
            "check_array_198": {
                "variable": {
                    "value": "color_data_checked",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "color_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.arange(len(data))",
                            "Call"
                        ],
                        [
                            "color_data_checked",
                            "Name"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_222": {
                "variable": {
                    "value": "node_color_statistic",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "node_color_statistic",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.mean",
                            "Attribute"
                        ],
                        [
                            "check_array(node_color_statistic, ensure_2d=False)",
                            "Call"
                        ],
                        [
                            "node_color_statistic.reshape((len_colors, -1))",
                            "Call"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/mapper/utils/decorators.py": {
        "sklearn": {}
    },
    "gtda/mapper/utils/pipeline.py": {
        "sklearn": {
            "FunctionTransformer_65": {
                "func": {
                    "value": "func_along_axis",
                    "type": "Call",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "partial(func, axis=1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "partial(_reshape_after_apply, _make_func_apply_along_axis_1(func))",
                            "Call"
                        ]
                    ]
                },
                "validate": {
                    "value": "validate",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "FunctionTransformer_69": {
                "validate": {
                    "value": "validate",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "gtda/mapper/visualization.py": {
        "sklearn": {
            "clone_170": {
                "estimator": {
                    "value": "pipeline",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "clone_461": {
                "variable": {
                    "value": "self._pipeline",
                    "type": "Attribute",
                    "possible_values": []
                },
                "estimator": {
                    "value": "self.pipeline",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/metaestimators/collection_transformer.py": {
        "sklearn": {
            "if_delegate_has_method_132": {
                "delegate": {
                    "value": "transformer",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clone_159": {
                "estimator": {
                    "value": "self.transformer",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/metaestimators/tests/test_collection_transformer.py": {
        "sklearn": {
            "PCA_57": {
                "variable": {
                    "value": "pca",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "n_components",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                }
            },
            "PCA_69": {
                "variable": {
                    "value": "pca",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PCA_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PCA_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "gtda/pipeline.py": {
        "sklearn": {
            "check_memory_102": {
                "variable": {
                    "value": "memory",
                    "type": "Variable",
                    "possible_values": []
                },
                "memory": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "if_delegate_has_method_254": {
                "delegate": {
                    "value": "_final_estimator",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "if_delegate_has_method_410": {
                "delegate": {
                    "value": "_final_estimator",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clone_119": {
                "variable": {
                    "value": "cloned_transformer",
                    "type": "Variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "transformer",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/point_clouds/rescaling.py": {
        "sklearn": {
            "pairwise_distances_109": {
                "variable": {
                    "value": "Xm",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True, copy=is_precomputed)",
                            "Call"
                        ]
                    ]
                },
                "metric": {
                    "value": "self.metric",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_187": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True, copy=is_precomputed)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_372": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True, copy=is_precomputed)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "copy": {
                    "value": "is_precomputed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.metric == 'precomputed'",
                            "Compare"
                        ]
                    ]
                }
            },
            "check_array_150": {
                "array": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True, copy=is_precomputed)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_186": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_array_334": {
                "array": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True, copy=is_precomputed)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_370": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/point_clouds/tests/test_rescaling.py": {
        "sklearn": {}
    },
    "gtda/tests/test_common.py": {
        "sklearn": {
            "parametrize_with_checks_72": {
                "estimators": {
                    "value": "[Binarizer(), Inverter()]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/tests/test_pipeline.py": {
        "sklearn": {
            "TimeSeriesSplit_112": {
                "variable": {
                    "value": "cv",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GridSearchCV_113": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "pipeline",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Pipeline(steps)",
                            "Call"
                        ],
                        [
                            "Pipeline(steps)",
                            "Call"
                        ]
                    ]
                },
                "param_grid": {
                    "value": "param_grid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{**embedding_param_grid, **diagram_param_grid, **classification_param_grid}",
                            "Dict"
                        ],
                        [
                            "get_param_grid()",
                            "Call"
                        ]
                    ]
                },
                "cv": {
                    "value": "cv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TimeSeriesSplit(n_splits=2)",
                            "Call"
                        ]
                    ]
                },
                "verbose": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MinMaxScaler_42": {
                "copy": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/_utils.py": {
        "sklearn": {
            "mutual_info_score_48": {
                "variable": {
                    "value": "mutual_information",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels_true": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "contingency": {
                    "value": "contingency",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.histogram2d(X[:-time_delay], X[time_delay:], bins=n_bins)[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "NearestNeighbors_60": {
                "variable": {
                    "value": "neighbor",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "algorithm": {
                    "value": "auto",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/embedding.py": {
        "sklearn": {
            "column_or_1d_96": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "check_array_244": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "column_or_1d_273": {
                "variable": {
                    "value": "yr",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "column_or_1d_440": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "column_or_1d_476": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "column_or_1d_507": {
                "variable": {
                    "value": "yr",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "check_array_219": {
                "array": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_243": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_272": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_475": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_506": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_716": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/features.py": {
        "sklearn": {
            "check_array_104": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_79": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_103": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gen_even_slices_108": {
                "n": {
                    "value": "len(Xt)",
                    "type": "Call",
                    "possible_values": []
                },
                "n_packs": {
                    "value": "effective_n_jobs(self.n_jobs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/multivariate.py": {
        "sklearn": {
            "check_array_102": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_75": {
                "array": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "check_array(X, allow_nd=True)",
                            "Call"
                        ]
                    ]
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_101": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/preprocessing.py": {
        "sklearn": {
            "check_array_92": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "copy": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "column_or_1d_119": {
                "variable": {
                    "value": "yr",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "column_or_1d(y)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "check_array_214": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "column_or_1d_243": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "column_or_1d(y)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "check_array_67": {
                "array": {
                    "value": "X",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_91": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_118": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_array_189": {
                "array": {
                    "value": "X",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "allow_nd": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_213": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "check_is_fitted_242": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "attributes": {
                    "value": "_is_fitted",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/target.py": {
        "sklearn": {
            "column_or_1d_105": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "column_or_1d_143": {
                "variable": {
                    "value": "Xt",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "column_or_1d(X)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "column_or_1d_170": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "column_or_1d(y)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "check_is_fitted_142": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "check_is_fitted_169": {
                "estimator": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "gtda/time_series/tests/test_embedding.py": {
        "sklearn": {}
    },
    "gtda/time_series/tests/test_preprocessing.py": {
        "sklearn": {}
    },
    "gtda/utils/_docs.py": {
        "sklearn": {}
    },
    "gtda/utils/tests/test_validation.py": {
        "sklearn": {}
    },
    "gtda/utils/validation.py": {
        "sklearn": {
            "check_array_19": {
                "variable": {
                    "value": "Xnew",
                    "type": "Variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "**kwargs",
                    "type": null,
                    "possible_values": []
                }
            },
            "check_array_25": {
                "array": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "**kwargs",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}