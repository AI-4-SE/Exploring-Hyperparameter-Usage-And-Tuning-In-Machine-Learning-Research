{
    "gensvm/core.py": {
        "sklearn": {
            "check_random_state_46": {
                "variable": {
                    "value": "rnd",
                    "type": "variable",
                    "possible_values": []
                },
                "seed": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "check_X_y_297": {
                "variable": {
                    "value": "(X, y_org)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_X_y(X, y, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "check_array(X, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ]
                    ]
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoder.fit_transform(y_org)",
                            "Call"
                        ],
                        [
                            "y + 1",
                            "BinOp"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "accept_sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "order": {
                    "value": "C",
                    "type": "str",
                    "possible_values": []
                }
            },
            "type_of_target_316": {
                "variable": {
                    "value": "y_type",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y_org",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_X_y(X, y, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ]
                    ]
                }
            },
            "LabelEncoder_327": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "check_array_413": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "array": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_X_y(X, y, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "check_array(X, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ]
                    ]
                },
                "accept_sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "order": {
                    "value": "C",
                    "type": "str",
                    "possible_values": []
                }
            },
            "check_array_301": {
                "variable": {
                    "value": "sample_weight",
                    "type": "variable",
                    "possible_values": []
                },
                "array": {
                    "value": "sample_weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_array(sample_weight, accept_sparse=False, ensure_2d=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "sample_weight",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "accept_sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "ensure_2d": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "order": {
                    "value": "C",
                    "type": "str",
                    "possible_values": []
                }
            },
            "check_array_415": {
                "variable": {
                    "value": "trainX",
                    "type": "variable",
                    "possible_values": []
                },
                "array": {
                    "value": "trainX",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_array(trainX, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "accept_sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "order": {
                    "value": "C",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "gensvm/gridsearch.py": {
        "sklearn": {
            "check_cv_263": {
                "variable": {
                    "value": "cv",
                    "type": "variable",
                    "possible_values": []
                },
                "cv": {
                    "value": "cv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_cv(cv, y, classifier=True)",
                            "Call"
                        ],
                        [
                            "cv",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoder.fit_transform(y_orig)",
                            "Call"
                        ],
                        [
                            "y + 1",
                            "BinOp"
                        ],
                        [
                            "indexable(X, y, groups)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "classifier": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "check_X_y_586": {
                "variable": {
                    "value": "(X, y_orig)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_X_y(X, y, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "indexable(X, y, groups)",
                            "Call"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ]
                    ]
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoder.fit_transform(y_orig)",
                            "Call"
                        ],
                        [
                            "y + 1",
                            "BinOp"
                        ],
                        [
                            "indexable(X, y, groups)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "accept_sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "order": {
                    "value": "C",
                    "type": "str",
                    "possible_values": []
                }
            },
            "type_of_target_590": {
                "variable": {
                    "value": "y_type",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y_orig",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_X_y(X, y, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ]
                    ]
                }
            },
            "LabelEncoder_596": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "indexable_613": {
                "variable": {
                    "value": "(X, y, groups)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*iterables": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "check_X_y(X, y, accept_sparse=False, dtype=np.float64, order='C')",
                            "Call"
                        ],
                        [
                            "indexable(X, y, groups)",
                            "Call"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ],
                        [
                            "X",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ParameterGrid_559": {
                "param_grid": {
                    "value": "self.param_grid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "check_scoring_605": {
                "variable": {
                    "value": "scorers",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "self.estimator",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scoring": {
                    "value": "self.scoring",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "gensvm/sklearn_util.py": {
        "sklearn": {}
    },
    "gensvm/util.py": {
        "sklearn": {}
    },
    "test/test_core.py": {
        "sklearn": {
            "load_digits_167": {
                "variable": {
                    "value": "digits",
                    "type": "variable",
                    "possible_values": []
                },
                "n_class": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "train_test_split_174": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "yy",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_iris_185": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_189": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_iris_202": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_206": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_iris_313": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "test/test_gridsearch.py": {
        "sklearn": {
            "load_iris_78": {
                "variable": {
                    "value": "iris",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_83": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "yy",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_iris_104": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_105": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_106": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_iris_125": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_126": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_127": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_iris_139": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_140": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_141": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_iris_156": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_157": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_158": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_iris_175": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_176": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_177": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_digits_205": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "n_class": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_iris_223": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_224": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_225": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_iris_242": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_243": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_244": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_iris_260": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "maxabs_scale_261": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "iris.data",
                            "Attribute"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "np.random.random((20, 4))",
                            "Call"
                        ],
                        [
                            "load_digits(n_class=4, return_X_y=True)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ],
                        [
                            "maxabs_scale(X)",
                            "Call"
                        ],
                        [
                            "load_iris(return_X_y=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_262": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "123",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_iris_278": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ShuffleSplit_280": {
                "variable": {
                    "value": "cv",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StratifiedShuffleSplit_284": {
                "variable": {
                    "value": "cv",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test_human/interrupt_test.py": {
        "sklearn": {
            "load_iris_24": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_iris_31": {
                "variable": {
                    "value": "(X, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "return_X_y": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}