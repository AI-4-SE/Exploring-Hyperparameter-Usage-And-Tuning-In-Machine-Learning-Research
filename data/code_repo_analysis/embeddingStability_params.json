{
    "old_stability/stability.py": {
        "sklearn": {
            "cosine_similarity_30": {
                "X": {
                    "value": "wordRep",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embeddingSpace[word].reshape(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "value.reshape(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "regression/create_balltrees_europarl.py": {
        "sklearn": {
            "BallTree_78": {
                "variable": {
                    "value": "balltree",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "[[i] for i in range(len(wordList))]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "metric": {
                    "value": "pyfunc",
                    "type": "str",
                    "possible_values": []
                },
                "func": {
                    "value": "mydist",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mydist",
                            "Call"
                        ]
                    ]
                },
                "leaf_size": {
                    "value": "LEAF_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "regression/create_balltrees_nyt.py": {
        "sklearn": {
            "BallTree_85": {
                "variable": {
                    "value": "balltree",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "[[i] for i in range(len(wordList))]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "metric": {
                    "value": "pyfunc",
                    "type": "str",
                    "possible_values": []
                },
                "func": {
                    "value": "mydist",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mydist",
                            "Call"
                        ]
                    ]
                },
                "leaf_size": {
                    "value": "LEAF_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "regression/generateClassifierFeatures.py": {
        "sklearn": {}
    },
    "regression/precalculateNearestNeighbor_europarl.py": {
        "sklearn": {}
    },
    "regression/precalculateNearestNeighbor_nyt.py": {
        "sklearn": {}
    },
    "regression/regressionModel.py": {
        "sklearn": {
            "Ridge_35": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "regression/viewResults.py": {
        "sklearn": {}
    },
    "stability.py": {
        "sklearn": {
            "normalize_31": {
                "variable": {
                    "value": "xb[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "X": {
                    "value": "xb[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}