{
    "src/util.py": {
        "sklearn": {},
        "torch": {
            "save_151": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "checkpoint_dir + '/epoch' + str(state['epoch']).zfill(3) + '.pth.tar'",
                            "BinOp"
                        ],
                        [
                            "os.path.join(checkpoint_dir, ckpt_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_162": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "checkpoint_dir + '/epoch' + str(state['epoch']).zfill(3) + '.pth.tar'",
                            "BinOp"
                        ],
                        [
                            "os.path.join(checkpoint_dir, ckpt_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_706": {
                "variable": {
                    "value": "self.trainLoader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nc.SafeDataset(ZeroDoseDataset(dataset_name, data, subj_list_train, idx_list_train, brain_mask, block_size=block_size, contrast_list=contrast_list, aug=aug, dropoff=dropoff, skull_strip=skull_strip))",
                            "Call"
                        ],
                        [
                            "ZeroDoseDataset3D(dataset_name, data, subj_list_train, contrast_list=contrast_list, aug=aug, dropoff=dropoff)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "DataLoader_707": {
                "variable": {
                    "value": "self.valLoader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nc.SafeDataset(ZeroDoseDataset(dataset_name, data, subj_list_val, idx_list_val, brain_mask, block_size=block_size, contrast_list=contrast_list, aug=False, dropoff=dropoff, skull_strip=skull_strip))",
                            "Call"
                        ],
                        [
                            "ZeroDoseDataset3D(dataset_name, data, subj_list_val, contrast_list=contrast_list, aug=False, dropoff=dropoff)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "DataLoader_708": {
                "variable": {
                    "value": "self.testLoader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nc.SafeDataset(ZeroDoseDataset(dataset_name, data, subj_list_test, idx_list_test, brain_mask, block_size=block_size, contrast_list=contrast_list, aug=False, dropoff=False, skull_strip=skull_strip))",
                            "Call"
                        ],
                        [
                            "ZeroDoseDataset3D(dataset_name, data, subj_list_test, contrast_list=contrast_list, aug=False, dropoff=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "DataLoader_837": {
                "variable": {
                    "value": "self.trainLoader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nc.SafeDataset(ZeroDoseDataset(dataset_name, data, subj_list_train, idx_list_train, brain_mask, block_size=block_size, contrast_list=contrast_list, aug=aug, dropoff=dropoff, skull_strip=skull_strip))",
                            "Call"
                        ],
                        [
                            "ZeroDoseDataset3D(dataset_name, data, subj_list_train, contrast_list=contrast_list, aug=aug, dropoff=dropoff)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "DataLoader_838": {
                "variable": {
                    "value": "self.valLoader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nc.SafeDataset(ZeroDoseDataset(dataset_name, data, subj_list_val, idx_list_val, brain_mask, block_size=block_size, contrast_list=contrast_list, aug=False, dropoff=dropoff, skull_strip=skull_strip))",
                            "Call"
                        ],
                        [
                            "ZeroDoseDataset3D(dataset_name, data, subj_list_val, contrast_list=contrast_list, aug=False, dropoff=dropoff)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "DataLoader_839": {
                "variable": {
                    "value": "self.testLoader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nc.SafeDataset(ZeroDoseDataset(dataset_name, data, subj_list_test, idx_list_test, brain_mask, block_size=block_size, contrast_list=contrast_list, aug=False, dropoff=False, skull_strip=skull_strip))",
                            "Call"
                        ],
                        [
                            "ZeroDoseDataset3D(dataset_name, data, subj_list_test, contrast_list=contrast_list, aug=False, dropoff=False)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "load_878": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "checkpoint_dir + '/epoch' + str(state['epoch']).zfill(3) + '.pth.tar'",
                            "BinOp"
                        ],
                        [
                            "os.path.join(checkpoint_dir, ckpt_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_931": {
                "input": {
                    "value": "gt - output",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_931": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "pow_933": {
                "input": {
                    "value": "gt - output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_933": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/main_missing.py": {
        "torch": {
            "device_28": {
                "variable": {
                    "value": "config[device]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:' + config['gpu']",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_118": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config['lr']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_119": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), lr=config['lr'], weight_decay=1e-05, amsgrad=True)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "patience": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_19": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ]
                    ]
                }
            },
            "manual_seed_20": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ]
                    ]
                }
            },
            "Adam_122": {
                "variable": {
                    "value": "optimizer_d_s",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config['lr']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tensor_377": {
                "variable": {
                    "value": "s_list_saved",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "h5_saved['s_list']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "config['device']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_378": {
                "variable": {
                    "value": "z_list_saved",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "h5_saved['z_list']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "config['device']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_385": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_200": {
                "variable": {
                    "value": "loss_recon_y",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_208": {
                "variable": {
                    "value": "loss_recon_y_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_213": {
                "variable": {
                    "value": "loss_recon_x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_218": {
                "variable": {
                    "value": "loss_recon_x_mix",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_227": {
                "variable": {
                    "value": "loss_kl",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_235": {
                "variable": {
                    "value": "loss_latent_z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_240": {
                "variable": {
                    "value": "loss_sim_s",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_245": {
                "variable": {
                    "value": "loss_sim_z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_250": {
                "variable": {
                    "value": "loss_adv_s",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_251": {
                "variable": {
                    "value": "loss_adv_s_d",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "isnan_265": {
                "input": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "loss + config['lambda_adv_s'] * loss_adv_s",
                            "BinOp"
                        ],
                        [
                            "0",
                            "int"
                        ]
                    ]
                }
            },
            "clip_grad_norm__272": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_453": {
                "variable": {
                    "value": "loss_recon_y",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_463": {
                "variable": {
                    "value": "loss_recon_y_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_468": {
                "variable": {
                    "value": "loss_recon_x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_473": {
                "variable": {
                    "value": "loss_recon_x_mix",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_481": {
                "variable": {
                    "value": "loss_kl",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_489": {
                "variable": {
                    "value": "loss_latent_z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_494": {
                "variable": {
                    "value": "loss_sim_s",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_499": {
                "variable": {
                    "value": "loss_sim_z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_504": {
                "variable": {
                    "value": "loss_adv_s",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_505": {
                "variable": {
                    "value": "loss_adv_s_d",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_526": {
                "variable": {
                    "value": "inputs_mix",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "inputs_mix",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(inputs_mix, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_527": {
                "variable": {
                    "value": "xi_fake_mix",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "xi_fake_mix_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.reconstruct_input_si_zj(si_list, zi_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_input_si_zj(si_list, zi_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_input_si_zj(si_list, z_list_find)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_549": {
                "tensors": {
                    "value": "y_fake_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.reconstruct_output_si(si_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_output_si(si_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_output_si(si_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_output_si(si_list)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_550": {
                "tensors": {
                    "value": "xi_fake_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.reconstruct_input_si_zi(si_list, zi_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_input_si_zi(si_list, zi_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_input_si_zi(si_list, z_list_find)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_551": {
                "tensors": {
                    "value": "xi_fake_mix_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.reconstruct_input_si_zj(si_list, zi_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_input_si_zj(si_list, zi_list)",
                            "Call"
                        ],
                        [
                            "model.reconstruct_input_si_zj(si_list, z_list_find)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_556": {
                "tensors": {
                    "value": "si_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.compute_anatomy_encoding(inputs_list, mask_img)",
                            "Call"
                        ],
                        [
                            "model.compute_anatomy_encoding(inputs_list, mask_img)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_557": {
                "tensors": {
                    "value": "zi_list",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "isfinite_275": {
                "input": {
                    "value": "param.grad",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "all_275": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_425": {
                "tensors": {
                    "value": "zi_list_find",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_559": {
                "tensors": {
                    "value": "z_list_find",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/model.py": {
        "torch": {
            "Sequential_47": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.MaxPool2d(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_down, x_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_162": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_197": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_212": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_264": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_304": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_344": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_404": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_408": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_412": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_416": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_455": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_477": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_481": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_485": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_489": {
                "variable": {
                    "value": "self.down_1_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_494": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_529": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3, down_1_4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_553": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_604": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_655": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_706": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_710": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_714": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_718": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_752": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_1006": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1074": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1143": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1147": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1151": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1156": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_1196": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_1232": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1236": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1240": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1245": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_1281": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1308": {
                "variable": {
                    "value": "self.W_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "sample_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "sample_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1309": {
                "variable": {
                    "value": "self.W_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "gate_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1310": {
                "variable": {
                    "value": "self.W_psi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_1311": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, in_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1321": {
                "variable": {
                    "value": "g_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_g(g)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "x_post_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x_post.size()",
                            "Call"
                        ],
                        [
                            "x_post.size()",
                            "Call"
                        ],
                        [
                            "x_post.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_1322": {
                "variable": {
                    "value": "xg_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_post + g_post",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_1323": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_psi(xg_post)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1324": {
                "variable": {
                    "value": "alpha_upsample",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(g_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(x_down))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(xg_down))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_1335": {
                "variable": {
                    "value": "self.W_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "sample_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "sample_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1336": {
                "variable": {
                    "value": "self.W_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "gate_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1337": {
                "variable": {
                    "value": "self.W_psi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_1338": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, in_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "flip_1348": {
                "variable": {
                    "value": "g_flip",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "[2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_1349": {
                "variable": {
                    "value": "g_diff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "g - g_flip",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "upsample_1350": {
                "variable": {
                    "value": "g_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_g(g_diff)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "x_post_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x_post.size()",
                            "Call"
                        ],
                        [
                            "x_post.size()",
                            "Call"
                        ],
                        [
                            "x_post.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_1352": {
                "variable": {
                    "value": "xg_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_post + g_post",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_1353": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_psi(xg_post)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1354": {
                "variable": {
                    "value": "alpha_upsample",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(g_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(x_down))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(xg_down))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_1365": {
                "variable": {
                    "value": "self.W_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "sample_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "sample_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "(2",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1366": {
                "variable": {
                    "value": "self.W_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "gate_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1367": {
                "variable": {
                    "value": "self.W_psi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_1368": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, in_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "flip_1378": {
                "variable": {
                    "value": "g_flip",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "[2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_1379": {
                "variable": {
                    "value": "g_diff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "g - g_flip",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "upsample_1380": {
                "variable": {
                    "value": "g_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_g(g_diff)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "x_post_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x_post.size()",
                            "Call"
                        ],
                        [
                            "x_post.size()",
                            "Call"
                        ],
                        [
                            "x_post.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_1382": {
                "variable": {
                    "value": "xg_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_post + g_post",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_1383": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_psi(xg_post)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1384": {
                "variable": {
                    "value": "alpha_upsample",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(g_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(x_down))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(xg_down))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_1395": {
                "variable": {
                    "value": "self.W_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "gate_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1396": {
                "variable": {
                    "value": "self.W_g_diff",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "gate_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1397": {
                "variable": {
                    "value": "self.W_psi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "flip_1408": {
                "variable": {
                    "value": "g_flip",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "[2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_1409": {
                "variable": {
                    "value": "g_diff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "g - g_flip",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_1410": {
                "variable": {
                    "value": "g_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_g(g) + self.W_g_diff(g_diff)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_1411": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_psi(g_post)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1412": {
                "variable": {
                    "value": "alpha_upsample",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(g_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(x_down))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(xg_down))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Linear_1422": {
                "variable": {
                    "value": "self.W_down",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "in_num_ch // sample_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_1423": {
                "variable": {
                    "value": "self.W_up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_num_ch // sample_factor",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mean_1426": {
                "variable": {
                    "value": "x_gp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "(2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "relu_1428": {
                "variable": {
                    "value": "x_down",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_down(x_gp)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_1429": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_up(x_down)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_1438": {
                "variable": {
                    "value": "self.W_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1439": {
                "variable": {
                    "value": "self.W_g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "gate_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_1440": {
                "variable": {
                    "value": "self.AvgPool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "tuple([z * kernel_stride_ratio for z in sample_factor_spatial])",
                    "type": "Call",
                    "possible_values": []
                },
                "stride": {
                    "value": "sample_factor_spatial",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_1441": {
                "variable": {
                    "value": "self.W_down",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch / sample_factor_channel",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1442": {
                "variable": {
                    "value": "self.W_up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch / sample_factor_channel",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_1457": {
                "variable": {
                    "value": "g_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_g(g_diff)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "x_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_1458": {
                "variable": {
                    "value": "xg_post",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_post + g_post",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_1462": {
                "variable": {
                    "value": "xg_down",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_down(xg_post_avg)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_1463": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.W_up(xg_down)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1464": {
                "variable": {
                    "value": "alpha_upsample",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(xg_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_psi(g_post))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(x_down))",
                            "Call"
                        ],
                        [
                            "F.sigmoid(self.W_up(xg_down))",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x_size[2:]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ],
                        [
                            "x.size()",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Linear_1595": {
                "variable": {
                    "value": "self.net.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_1596": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1609": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_1638": {
                "variable": {
                    "value": "cat_5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(down_5, output_P)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_1660": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "eps_np",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.random.normal(0, 1, size=mean.size())",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_1667": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_1702": {
                "variable": {
                    "value": "self.query_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1703": {
                "variable": {
                    "value": "self.key_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1704": {
                "variable": {
                    "value": "self.value_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_1705": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_1707": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "bmm_1720": {
                "variable": {
                    "value": "energy",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_query",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.query_conv(x).view(m_batchsize, -1, width * height).permute(0, 2, 1)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_key",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.key_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1).permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_1724": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.value_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "attention.permute(0, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_1737": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_1738": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "bmm_1751": {
                "variable": {
                    "value": "energy",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_query",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.query_conv(x).view(m_batchsize, -1, width * height).permute(0, 2, 1)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_key",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.key_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1).permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_1756": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.softmax(energy)",
                            "Call"
                        ],
                        [
                            "self.softmax(energy_new)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.value_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_1785": {
                "variable": {
                    "value": "self.conv5a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1789": {
                "variable": {
                    "value": "self.conv5c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1795": {
                "variable": {
                    "value": "self.conv51",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1798": {
                "variable": {
                    "value": "self.conv52",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1802": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1803": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1805": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1831": {
                "variable": {
                    "value": "self.input_module",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "upsample_1846": {
                "variable": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "size": {
                    "value": "imsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.size()[2:]",
                            "Subscript"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "upsample_1847": {
                "variable": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "size": {
                    "value": "imsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.size()[2:]",
                            "Subscript"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "upsample_1848": {
                "variable": {
                    "value": "x[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "x[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "size": {
                    "value": "imsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.size()[2:]",
                            "Subscript"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_1859": {
                "variable": {
                    "value": "self.gn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_groups": {
                    "value": "n_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "num_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_1860": {
                "variable": {
                    "value": "self.relu1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_1861": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "GroupNorm_1862": {
                "variable": {
                    "value": "self.gn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_groups": {
                    "value": "n_groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "num_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_1863": {
                "variable": {
                    "value": "self.relu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_1864": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_1889": {
                "variable": {
                    "value": "self.hidden_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.GroupNorm(8, init_channels * 8)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_1895": {
                "variable": {
                    "value": "self.mu_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.squeeze_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.squeeze_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_1896": {
                "variable": {
                    "value": "self.logvar_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.squeeze_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.squeeze_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_1900": {
                "variable": {
                    "value": "self.reconstraction",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.squeeze_channels // 2, init_channels * 8 * recon_shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1903": {
                "variable": {
                    "value": "self.vconv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(init_channels * 8, init_channels * 8, (1, 1, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1906": {
                "variable": {
                    "value": "self.vconv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(init_channels * 8, init_channels * 4, (3, 3, 3), padding=(1, 1, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1910": {
                "variable": {
                    "value": "self.vconv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(init_channels * 4, init_channels * 2, (3, 3, 3), padding=(1, 1, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_1914": {
                "variable": {
                    "value": "self.vconv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(init_channels * 2, init_channels, (3, 3, 3), padding=(1, 1, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_1918": {
                "variable": {
                    "value": "self.vconv0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "exp_1921": {
                "variable": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5 * logvar",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_like_1922": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.exp(0.5 * logvar)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_1968": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "Method Argument"
                        ],
                        [
                            "0.2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv3d_1972": {
                "variable": {
                    "value": "self.conv1a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.in_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_1975": {
                "variable": {
                    "value": "self.ds1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "init_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_1981": {
                "variable": {
                    "value": "self.ds2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_1986": {
                "variable": {
                    "value": "self.ds3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_1995": {
                "variable": {
                    "value": "self.up4conva",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_1996": {
                "variable": {
                    "value": "self.up4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_1999": {
                "variable": {
                    "value": "self.up3conva",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_2000": {
                "variable": {
                    "value": "self.up3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_2003": {
                "variable": {
                    "value": "self.up2conva",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_2004": {
                "variable": {
                    "value": "self.up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_2007": {
                "variable": {
                    "value": "self.up1conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "init_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "self.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_2069": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_experts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Parameter_2090": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(num_experts, out_channels, in_channels // groups, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_2113": {
                "variable": {
                    "value": "kernels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "routing_weights[:, :, None, None, None, None] * self.weight",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2179": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_2201": {
                "variable": {
                    "value": "self.down_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LeakyReLU_2227": {
                "variable": {
                    "value": "self.act_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "round_2268": {
                "variable": {
                    "value": "output_act_bi",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_act",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "self.output_act(output)",
                            "Call"
                        ],
                        [
                            "'softmax'",
                            "Method Argument"
                        ],
                        [
                            "'softmax'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_2302": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_num_ch + s_num_ch, first_num_ch, 3, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_2315": {
                "variable": {
                    "value": "self.fcs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(5 * 6 * 8 * first_num_ch, 2 * z_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_2318": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_2319": {
                "variable": {
                    "value": "self.log_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_2346": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_num_ch + s_num_ch, first_num_ch, 3, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_2359": {
                "variable": {
                    "value": "self.fcs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(5 * 6 * 8 * first_num_ch, 2 * z_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_2363": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_2364": {
                "variable": {
                    "value": "self.log_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "InstanceNorm2d_2405": {
                "variable": {
                    "value": "self.zi_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_2406": {
                "variable": {
                    "value": "self.si_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(size=input_size, mode='bilinear')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_2410": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_2411": {
                "variable": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_2412": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "InstanceNorm2d_2431": {
                "variable": {
                    "value": "self.zi_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Upsample_2432": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(112",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(160",
                            "Method Argument"
                        ],
                        [
                            "(160",
                            "Method Argument"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Linear_2461": {
                "variable": {
                    "value": "self.zi_scaler",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "image_size[0] * image_size[1] * z_num_ch // 1024",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Upsample_2463": {
                "variable": {
                    "value": "self.up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2465": {
                "variable": {
                    "value": "self.up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2467": {
                "variable": {
                    "value": "self.up3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2469": {
                "variable": {
                    "value": "self.up4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2471": {
                "variable": {
                    "value": "self.up5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_2473": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(z_num_ch // 8, in_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_2499": {
                "variable": {
                    "value": "self.zi_scaler",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "image_size[0] * image_size[1] * z_num_ch // 1024",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Upsample_2501": {
                "variable": {
                    "value": "self.up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2503": {
                "variable": {
                    "value": "self.up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2505": {
                "variable": {
                    "value": "self.up3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2507": {
                "variable": {
                    "value": "self.up4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2509": {
                "variable": {
                    "value": "self.up5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Linear_2549": {
                "variable": {
                    "value": "self.zi_scaler",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "image_size[0] * image_size[1] * z_num_ch // 1024",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Upsample_2551": {
                "variable": {
                    "value": "self.up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2553": {
                "variable": {
                    "value": "self.up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2555": {
                "variable": {
                    "value": "self.up3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2601": {
                "variable": {
                    "value": "self.up4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_2603": {
                "variable": {
                    "value": "self.up5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2695": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_2722": {
                "variable": {
                    "value": "self.down_1_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_2772": {
                "variable": {
                    "value": "self.discrim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, inter_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_2806": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_2816": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.MaxPool2d(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_2827": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.MaxPool2d(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MaxPool2d_2838": {
                "variable": {
                    "value": "self.bottleneck",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_2839": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 64, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Upsample_2849": {
                "variable": {
                    "value": "self.up3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_2850": {
                "variable": {
                    "value": "self.dconv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(128, 64, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Upsample_2860": {
                "variable": {
                    "value": "self.up2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_2861": {
                "variable": {
                    "value": "self.dconv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(96, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Upsample_2871": {
                "variable": {
                    "value": "self.up1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_2872": {
                "variable": {
                    "value": "self.dconv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_2906": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(1, inter_num_ch)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_3092": {
                "variable": {
                    "value": "encoder_list",
                    "type": "variable",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ModuleList_3106": {
                "variable": {
                    "value": "encoder_list",
                    "type": "variable",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ModuleList_3116": {
                "variable": {
                    "value": "decoder_list",
                    "type": "variable",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "normal_3160": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "std": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "size": {
                    "value": "(z_mean.shape[0], z_mean.shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_3241": {
                "variable": {
                    "value": "si_cat",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "si_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_3269": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_3288": {
                "variable": {
                    "value": "loss_seg",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "gt.squeeze(1).long()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "weight.to(self.device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_3290": {
                "variable": {
                    "value": "y_act",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_3300": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_3316": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_3329": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_3356": {
                "variable": {
                    "value": "zi_mean_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zi_mean_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_3357": {
                "variable": {
                    "value": "zi_log_var_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zi_log_var_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_3358": {
                "variable": {
                    "value": "mask_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask[:, i] for i in range(mask.shape[1])]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_3385": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_3400": {
                "variable": {
                    "value": "idx_sel",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cosine_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "self.compute_cosine(s_all, s_tar_tile)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_3410": {
                "variable": {
                    "value": "x_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum(torch.pow(x, 2), 1) + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_3411": {
                "variable": {
                    "value": "x_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_norm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt(torch.sum(torch.pow(x, 2), 1) + 1e-08)",
                            "Call"
                        ],
                        [
                            "torch.max(x_norm, 1e-08 * torch.ones_like(x_norm))",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_3412": {
                "variable": {
                    "value": "y_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum(torch.pow(y, 2), 1) + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_3413": {
                "variable": {
                    "value": "y_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_norm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt(torch.sum(torch.pow(y, 2), 1) + 1e-08)",
                            "Call"
                        ],
                        [
                            "torch.max(y_norm, 1e-08 * torch.ones_like(y_norm))",
                            "Call"
                        ]
                    ]
                }
            },
            "pad_3420": {
                "variable": {
                    "value": "x_pad",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(pad_y, pad_y, pad_x, pad_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "str",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pad_3422": {
                "variable": {
                    "value": "y_pad",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "pad": {
                    "value": "(pad_y, pad_y, pad_x, pad_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "str",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mse_loss_3428": {
                "variable": {
                    "value": "content_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "content_feat_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.vgg.features[:21](x_pre)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "content_feat_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.vgg.features[:21](y_pre)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_pool2d_3449": {
                "variable": {
                    "value": "x_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(16, 16)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "avg_pool2d_3454": {
                "variable": {
                    "value": "x_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(16, 16)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "pad_3461": {
                "variable": {
                    "value": "x_pad",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(pad_y, pad_y, pad_x, pad_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "str",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_3464": {
                "variable": {
                    "value": "x_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_vgg",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.vgg.features(x_pre)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_3479": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_3490": {
                "variable": {
                    "value": "si_perm",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[si[1:], si[0:1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_3491": {
                "variable": {
                    "value": "mask_i_perm",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask[1:, i], mask[0:1, i]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_3538": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, out_num_ch, filter_size, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, out_num_ch, filter_size, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_60": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_65": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "up_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_92": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, out_num_ch, filter_size, stride, padding=padding)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_126": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_128": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_130": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_132": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_134": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_146": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_148": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_150": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_152": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_156": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_161": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_down, x_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_181": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_183": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_185": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_187": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_191": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_196": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sigmoid_233": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_279": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_319": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_366": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_437": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_516": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_575": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_626": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_677": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_740": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_776": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_780": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_784": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_789": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_794": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_798": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_802": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_806": {
                "variable": {
                    "value": "self.down_1_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_811": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sigmoid_834": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_847": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_857": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3, down_1_4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_886": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_890": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_894": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_899": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_904": {
                "variable": {
                    "value": "self.down_1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_908": {
                "variable": {
                    "value": "self.down_1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_912": {
                "variable": {
                    "value": "self.down_1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_916": {
                "variable": {
                    "value": "self.down_1_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, first_num_ch, 4, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_921": {
                "variable": {
                    "value": "self.down_1_comb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4 * first_num_ch, first_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sigmoid_949": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_962": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_972": {
                "variable": {
                    "value": "down_1_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[down_1_1, down_1_2, down_1_3, down_1_4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_1034": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_1102": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_1184": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_1269": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1399": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, in_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_1404": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_1444": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_num_ch, in_num_ch, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_1449": {
                "variable": {
                    "value": "self.W_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_1624": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_2073": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "conv2d_2104": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.input_module(x)",
                            "Call"
                        ],
                        [
                            "(i + 1) * torch.ones(bs, 1).to(self.device)",
                            "BinOp"
                        ]
                    ]
                },
                "weight": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([1.0",
                            "Method Argument"
                        ],
                        [
                            "torch.tensor([1.0",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "self.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_2117": {
                "tensors": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2132": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_2135": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_2137": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_2139": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_2141": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_2165": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_2167": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_2169": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_2171": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Upsample_2175": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_2178": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_2192": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_down, x_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_2257": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_2259": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_2287": {
                "variable": {
                    "value": "inputs_type",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "down_list[0].shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_2372": {
                "variable": {
                    "value": "xsi",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[xi, si]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_2375": {
                "variable": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv1(xsi, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x1, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv1(xsi)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x1, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2377": {
                "variable": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv2(x1, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x2, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv2(x1)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x2, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2379": {
                "variable": {
                    "value": "x3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3(x2, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x3, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv3(x2)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x3, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2381": {
                "variable": {
                    "value": "x4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv4(x3, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x4, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv4(x3)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x4, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2383": {
                "variable": {
                    "value": "x5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv5(x4, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x5, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv5(x4)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x5, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2386": {
                "variable": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv1(xsi, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x1, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv1(xsi)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x1, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2388": {
                "variable": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv2(x1, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x2, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv2(x1)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x2, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2390": {
                "variable": {
                    "value": "x3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3(x2, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x3, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv3(x2)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x3, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2392": {
                "variable": {
                    "value": "x4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv4(x3, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x4, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv4(x3)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x4, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_2394": {
                "variable": {
                    "value": "x5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv5(x4, inputs_type)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x5, 0.2)",
                            "Call"
                        ],
                        [
                            "self.conv5(x4)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(x5, 0.2)",
                            "Call"
                        ]
                    ]
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Softplus_2514": {
                "variable": {
                    "value": "self.out_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_2608": {
                "variable": {
                    "value": "self.out_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_2646": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_2649": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_2651": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_2653": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_2655": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_2681": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_2683": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ELU_2685": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_2687": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Upsample_2691": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_2694": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_2708": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_down, x_up]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_2734": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2789": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_2791": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Flatten()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_2921": {
                "type": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_2946": {
                "variable": {
                    "value": "self.vgg_pre",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "s_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_3246": {
                "variable": {
                    "value": "si_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "si_sel_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_cat[mask == 1]",
                            "Subscript"
                        ],
                        [
                            "si_sel_list.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_3287": {
                "data": {
                    "value": "[1.0, 5.0, 5.0, 5.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sum_3294": {
                "variable": {
                    "value": "denominator",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_act[:, i] ** 2 + gt_i ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_3299": {
                "data": {
                    "value": "[1.0, 5.0, 5.0, 5.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_3345": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_3374": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bmm_3433": {
                "variable": {
                    "value": "gram",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feature.view(batch_size, num_ch, height * width)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "feature.transpose(1, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_3544": {
                "variable": {
                    "value": "zi_perm",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[zi[1:], zi[0:1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_3545": {
                "variable": {
                    "value": "mask_i_perm",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask[1:, i], mask[0:1, i]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_3570": {
                "variable": {
                    "value": "d_loss_0",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_3571": {
                "variable": {
                    "value": "g_loss_0",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_3576": {
                "variable": {
                    "value": "d_loss_1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_3577": {
                "variable": {
                    "value": "g_loss_1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_48": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_94": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_213": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_214": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_235": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_265": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_266": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_281": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_305": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_306": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_321": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_345": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_346": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_368": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_405": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_406": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_409": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_410": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_413": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_414": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_417": {
                "in_channels": {
                    "value": "3 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_418": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_439": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_478": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_479": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_482": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_483": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_486": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_487": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_490": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_491": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_495": {
                "in_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_496": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_518": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_554": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_555": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_577": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_605": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_606": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_628": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_656": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_657": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_679": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_707": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_708": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_711": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_712": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_715": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_716": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_719": {
                "in_channels": {
                    "value": "3 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_720": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_742": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_836": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_951": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1007": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1008": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_1036": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1075": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1076": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_1104": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1144": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1145": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1148": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1149": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1152": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1153": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1157": {
                "in_channels": {
                    "value": "3 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1158": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_1186": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1233": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1234": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1237": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1238": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1241": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1242": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1246": {
                "in_channels": {
                    "value": "3 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1247": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_1271": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1312": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1313": {
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_1339": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1340": {
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_1369": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1370": {
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "flip_1456": {
                "input": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "[2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2d_1610": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1611": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_1626": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1668": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_1669": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_1705": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_1737": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1785": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_1787": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1789": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_1791": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1795": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_1797": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1798": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_1800": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout2d_1802": {
                "p": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1802": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout2d_1803": {
                "p": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1803": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout2d_1805": {
                "p": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1805": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_1832": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_1833": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_1834": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_1889": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_1890": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_1891": {
                "in_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.squeeze_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool3d_1893": {
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_1900": {
                "in_features": {
                    "value": "self.squeeze_channels // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "init_channels * 8 * recon_shape",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_1901": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_1903": {
                "in_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_1904": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_1906": {
                "in_channels": {
                    "value": "init_channels * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_1907": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_1910": {
                "in_channels": {
                    "value": "init_channels * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_1911": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_1914": {
                "in_channels": {
                    "value": "init_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "self.init_channels",
                            "Attribute"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_1915": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_2101": {
                "input": {
                    "value": "F.pad(input, self._padding_repeated_twice, mode=self.padding_mode)",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([1.0",
                            "Method Argument"
                        ],
                        [
                            "torch.tensor([1.0",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "_pair(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dilation": {
                    "value": "self.dilation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.groups",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_2202": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2203": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2303": {
                "in_channels": {
                    "value": "img_num_ch + s_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2304": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2305": {
                "in_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2306": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2307": {
                "in_channels": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2308": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2309": {
                "in_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2310": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2311": {
                "in_channels": {
                    "value": "8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2312": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_2316": {
                "in_features": {
                    "value": "5 * 6 * 8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2 * z_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2317": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2347": {
                "in_channels": {
                    "value": "img_num_ch + s_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2348": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2349": {
                "in_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2350": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2351": {
                "in_channels": {
                    "value": "2 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2352": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2353": {
                "in_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2354": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_2355": {
                "in_channels": {
                    "value": "8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2356": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_2360": {
                "in_features": {
                    "value": "5 * 6 * 8 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2 * z_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2361": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_2407": {
                "size": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(112",
                            "Method Argument"
                        ],
                        [
                            "(256",
                            "Method Argument"
                        ],
                        [
                            "(160",
                            "Method Argument"
                        ],
                        [
                            "(160",
                            "Method Argument"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_2408": {
                "in_channels": {
                    "value": "s_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_2474": {
                "in_channels": {
                    "value": "z_num_ch // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softplus_2475": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_2516": {
                "variable": {
                    "value": "self.out_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_2610": {
                "variable": {
                    "value": "self.out_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_2736": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2773": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_2774": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_2775": {
                "in_channels": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "2 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2776": {
                "num_features": {
                    "value": "2 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2777": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_2778": {
                "in_channels": {
                    "value": "2 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2779": {
                "num_features": {
                    "value": "4 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2780": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_2781": {
                "in_channels": {
                    "value": "4 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2782": {
                "num_features": {
                    "value": "8 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2783": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_2784": {
                "in_channels": {
                    "value": "8 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2785": {
                "num_features": {
                    "value": "4 * inter_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2786": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_2807": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2808": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2809": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2810": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2811": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2812": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2813": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2814": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2815": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_2817": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_2818": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2819": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2820": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2821": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2822": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2823": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2824": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2825": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2826": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_2828": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_2829": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2830": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2831": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2832": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2833": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2834": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2835": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2836": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2837": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2840": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2841": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2842": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2843": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2844": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2845": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2846": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2847": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2848": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2851": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2852": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2853": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2854": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2855": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2856": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2857": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2858": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2859": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2862": {
                "in_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2863": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2864": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2865": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2866": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2867": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2868": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2869": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2870": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2873": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2874": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2875": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2876": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2877": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2878": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2879": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_2880": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_2881": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_2882": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_2883": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_2892": {
                "tensors": {
                    "value": "[up3, conv3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_2894": {
                "tensors": {
                    "value": "[up2, conv2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_2896": {
                "tensors": {
                    "value": "[up1, conv1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_2907": {
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_2908": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_2909": {
                "in_features": {
                    "value": "inter_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "2 * z_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softplus_3146": {
                "variable": {
                    "value": "si_act",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "si",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.up(si)",
                            "Call"
                        ],
                        [
                            "si_list[i]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "max_3248": {
                "variable": {
                    "value": "(si_fused, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "si_sel_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_cat[mask == 1]",
                            "Subscript"
                        ],
                        [
                            "si_sel_list.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_3264": {
                "input": {
                    "value": "gt - output",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_3264": {
                "input": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[i for i in range(1, len(gt.shape))]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "pow_3266": {
                "input": {
                    "value": "gt - output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_3266": {
                "input": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[i for i in range(1, len(gt.shape))]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "sum_3346": {
                "input": {
                    "value": "torch.exp(z_log_var) + z_mean ** 2 - 1.0 - z_log_var",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_3414": {
                "input": {
                    "value": "x * y",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_30": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "in_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_37": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_61": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "in_channels": {
                    "value": "up_num_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_96": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_98": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_122": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_123": {
                "num_features": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Upsample_157": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_158": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Upsample_192": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_193": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(stride)",
                            "Call"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_pair(padding)",
                            "Call"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_237": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_239": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_283": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_285": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_323": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_325": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_370": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_372": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_441": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_443": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_520": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_522": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_579": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_581": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_630": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_632": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_681": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_683": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_744": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_746": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_777": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_778": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_781": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_782": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_785": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_786": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_790": {
                "in_channels": {
                    "value": "3 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_791": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_795": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_796": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_799": {
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_800": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_803": {
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_804": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_807": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_808": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_812": {
                "in_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_813": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_838": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_840": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_887": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_888": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_891": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_892": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_895": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_896": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_900": {
                "in_channels": {
                    "value": "3 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_901": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_905": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_906": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_909": {
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_910": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_913": {
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_914": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_917": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_918": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_922": {
                "in_channels": {
                    "value": "4 * first_num_ch",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "first_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "16",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_923": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_953": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_955": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1038": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_1040": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1106": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_1108": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1188": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_1190": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1273": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_1275": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_1400": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1401": {
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_1445": {
                "in_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1446": {
                "num_features": {
                    "value": "in_num_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_1628": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_1630": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "pad_2101": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.input_module(x)",
                            "Call"
                        ],
                        [
                            "(i + 1) * torch.ones(bs, 1).to(self.device)",
                            "BinOp"
                        ]
                    ]
                },
                "pad": {
                    "value": "self._padding_repeated_twice",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "self.padding_mode",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_2325": {
                "tensors": {
                    "value": "[xi, si]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_2738": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softplus_2740": {
                "variable": {
                    "value": "self.output_act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Flatten_2792": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_2793": {
                "in_features": {
                    "value": "int(input_shape[0] * input_shape[1] * 4 * inter_num_ch / (32 * 32))",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "inter_num_ch * 16",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_2794": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_2795": {
                "in_features": {
                    "value": "inter_num_ch * 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_3138": {
                "*size": {
                    "value": "inputs_list[0].shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_3150": {
                "variable": {
                    "value": "si_cat",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[100 * mask_img.unsqueeze(1), si]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_3152": {
                "variable": {
                    "value": "si_act_cat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "si_cat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat([100 * mask_img.unsqueeze(1), si], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.stack(si_list, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_3155": {
                "variable": {
                    "value": "si_act",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "si",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.up(si)",
                            "Call"
                        ],
                        [
                            "si_list[i]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "exp_3161": {
                "input": {
                    "value": "0.5 * z_log_var",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_3169": {
                "*size": {
                    "value": "inputs_list[0].shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_3190": {
                "*size": {
                    "value": "si_list[0].shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_3235": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_list[0].shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_3250": {
                "variable": {
                    "value": "(si_max, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "si_sel_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_cat[mask == 1]",
                            "Subscript"
                        ],
                        [
                            "si_sel_list.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_3251": {
                "variable": {
                    "value": "si_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "si_sel_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_cat[mask == 1]",
                            "Subscript"
                        ],
                        [
                            "si_sel_list.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_3252": {
                "variable": {
                    "value": "(si_min, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "si_sel_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_cat[mask == 1]",
                            "Subscript"
                        ],
                        [
                            "si_sel_list.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_3253": {
                "variable": {
                    "value": "si_fused",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[si_mean, si_max, si_min]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_3293": {
                "input": {
                    "value": "y_act[:, i] * gt_i",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_3366": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "si_list[0].shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_3410": {
                "input": {
                    "value": "torch.pow(x, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_like_3411": {
                "input": {
                    "value": "x_norm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt(torch.sum(torch.pow(x, 2), 1) + 1e-08)",
                            "Call"
                        ],
                        [
                            "torch.max(x_norm, 1e-08 * torch.ones_like(x_norm))",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_3412": {
                "input": {
                    "value": "torch.pow(y, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_like_3413": {
                "input": {
                    "value": "y_norm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt(torch.sum(torch.pow(y, 2), 1) + 1e-08)",
                            "Call"
                        ],
                        [
                            "torch.max(y_norm, 1e-08 * torch.ones_like(y_norm))",
                            "Call"
                        ]
                    ]
                }
            },
            "mse_loss_3443": {
                "input": {
                    "value": "gram_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gram_matrix(style_feat_x)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "gram_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gram_matrix(style_feat_y)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_3211": {
                "*size": {
                    "value": "si_list[0].shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_3375": {
                "input": {
                    "value": "z_log_var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.log_var(x)",
                            "Call"
                        ],
                        [
                            "self.log_var(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_3410": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.bn(x_up)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "self.pretrained.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.relu(x)",
                            "Call"
                        ],
                        [
                            "self.pretrained.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.head(c4)",
                            "Call"
                        ],
                        [
                            "list(x)",
                            "Call"
                        ],
                        [
                            "self.relu1(self.gn1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.relu2(self.gn2(x))",
                            "Call"
                        ],
                        [
                            "self.conv2(x)",
                            "Call"
                        ],
                        [
                            "x + residul",
                            "BinOp"
                        ],
                        [
                            "self.hidden_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view((batch_size, -1))",
                            "Call"
                        ],
                        [
                            "self.vconv4(re_x)",
                            "Call"
                        ],
                        [
                            "self.vconv3(x)",
                            "Call"
                        ],
                        [
                            "self.vconv2(x)",
                            "Call"
                        ],
                        [
                            "self.vconv1(x)",
                            "Call"
                        ],
                        [
                            "self.fc(inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(xi)",
                            "Call"
                        ],
                        [
                            "self.convs(torch.cat([xi, si], 1))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "x5.view(-1, 5 * 6 * 128)",
                            "Call"
                        ],
                        [
                            "self.fcs(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x, inputs_type)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.act(x)",
                            "Call"
                        ],
                        [
                            "x_up",
                            "variable"
                        ],
                        [
                            "torch.cat([x_down, x_up], 1)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_3412": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_1752": {
                "input": {
                    "value": "energy",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.bmm(proj_query, proj_key)",
                            "Call"
                        ],
                        [
                            "torch.bmm(proj_query, proj_key)",
                            "Call"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "exp_3346": {
                "input": {
                    "value": "z_log_var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.log_var(x)",
                            "Call"
                        ],
                        [
                            "self.log_var(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_3391": {
                "input": {
                    "value": "zi_mean_list[i] - zi_mean_list_new[i]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_3573": {
                "input": {
                    "value": "d_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[i]).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "torch.zeros_like(d_0)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_3574": {
                "input": {
                    "value": "d_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[i]).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "torch.ones_like(d_0)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_3579": {
                "input": {
                    "value": "d_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[j]).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "torch.ones_like(d_1)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_3580": {
                "input": {
                    "value": "d_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[j]).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "torch.ones_like(d_1)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "max_3502": {
                "input": {
                    "value": "torch.zeros_like(mask[:, 0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_3554": {
                "input": {
                    "value": "torch.zeros_like(mask[:, 0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_3573": {
                "input": {
                    "value": "d_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[i]).squeeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_3574": {
                "input": {
                    "value": "d_0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[i]).squeeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_3579": {
                "input": {
                    "value": "d_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[j]).squeeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_3580": {
                "input": {
                    "value": "d_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discrim_s(si_list[j]).squeeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_3502": {
                "input": {
                    "value": "mask[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_3554": {
                "input": {
                    "value": "mask[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}