{
    "run_model_tf_bin.py": {
        "sklearn": {
            "train_test_split_94": {
                "variable": {
                    "value": "(x_train, x_val, y_train, y_val)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "int"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "Graph_141": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_166": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_with_default_167": {
                "variable": {
                    "value": "self.in_training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "shape": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "name": {
                    "value": "in_training",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_169": {
                "variable": {
                    "value": "self.X",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, window_size, input_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "X",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_170": {
                "variable": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "Y",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_178": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.nn.sigmoid_cross_entropy_with_logits(labels=self.Y, logits=self.pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "merge_all_187": {
                "variable": {
                    "value": "self.summary",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_189": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DropoutWrapper_306": {
                "variable": {
                    "value": "cell1",
                    "type": "variable",
                    "possible_values": []
                },
                "cell": {
                    "value": "tf.nn.rnn_cell.GRUCell(self.hidden1, activation=tf.nn.tanh, kernel_initializer=tf.glorot_uniform_initializer(seed=seed))",
                    "type": "Call",
                    "possible_values": []
                },
                "input_keep_prob": {
                    "value": "1.0 - 0.0 * in_training",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dynamic_rnn_323": {
                "variable": {
                    "value": "(output, state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell": {
                    "value": "cell1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.rnn_cell.DropoutWrapper(tf.nn.rnn_cell.GRUCell(self.hidden1, activation=tf.nn.tanh, kernel_initializer=tf.glorot_uniform_initializer(seed=seed)), input_keep_prob=1.0 - 0.0 * in_training)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dense_338": {
                "variable": {
                    "value": "output1",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.dynamic_rnn(cell1, x, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "self.hidden2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.glorot_uniform_initializer(seed=seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dense_344": {
                "variable": {
                    "value": "output2",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "output1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.layers.dense(inputs=state, units=self.hidden2, activation='sigmoid', kernel_initializer=tf.glorot_uniform_initializer(seed=seed))",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.glorot_uniform_initializer(seed=seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdamOptimizer_181": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_183": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_186": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_223": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_step_231": {
                "variable": {
                    "value": "step0",
                    "type": "variable",
                    "possible_values": []
                },
                "sess": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sess",
                            "Method Argument"
                        ]
                    ]
                },
                "global_step_tensor": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "FileWriter_232": {
                "variable": {
                    "value": "train_summary_writer",
                    "type": "variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.dir + '/train'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "FileWriter_233": {
                "variable": {
                    "value": "val_summary_writer",
                    "type": "variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.dir + '/validation'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_267": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_cross_entropy_with_logits_178": {
                "labels": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.pred",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_220": {
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_266": {
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRUCell_306": {
                "units": {
                    "value": "self.hidden1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.glorot_uniform_initializer(seed=seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "latest_checkpoint_268": {
                "checkpoint_dir": {
                    "value": "self.dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "latest_checkpoint_225": {
                "checkpoint_dir": {
                    "value": "self.dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "run_model_tf_value.py": {
        "sklearn": {
            "train_test_split_78": {
                "variable": {
                    "value": "(x_train, x_val, y_train, y_val)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "int"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "Graph_110": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_135": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_with_default_136": {
                "variable": {
                    "value": "self.in_training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "shape": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "name": {
                    "value": "in_training",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_138": {
                "variable": {
                    "value": "self.X",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, window_size, input_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "X",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_139": {
                "variable": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "Y",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_147": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.abs(tf.divide(tf.subtract(self.pred, self.Y), self.Y))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "merge_all_156": {
                "variable": {
                    "value": "self.summary",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_158": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DropoutWrapper_272": {
                "variable": {
                    "value": "cell1",
                    "type": "variable",
                    "possible_values": []
                },
                "cell": {
                    "value": "tf.nn.rnn_cell.GRUCell(self.hidden1, activation=tf.nn.tanh, kernel_initializer=tf.glorot_uniform_initializer(seed=seed))",
                    "type": "Call",
                    "possible_values": []
                },
                "input_keep_prob": {
                    "value": "1.0 - 0.0 * in_training",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dynamic_rnn_289": {
                "variable": {
                    "value": "(output, state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell": {
                    "value": "cell1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.rnn_cell.DropoutWrapper(tf.nn.rnn_cell.GRUCell(self.hidden1, activation=tf.nn.tanh, kernel_initializer=tf.glorot_uniform_initializer(seed=seed)), input_keep_prob=1.0 - 0.0 * in_training)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dense_304": {
                "variable": {
                    "value": "output1",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.dynamic_rnn(cell1, x, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "self.hidden2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "sigmoid",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.glorot_uniform_initializer(seed=seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dense_310": {
                "variable": {
                    "value": "output2",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "output1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.layers.dense(inputs=state, units=self.hidden2, activation='sigmoid', kernel_initializer=tf.glorot_uniform_initializer(seed=seed))",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.glorot_uniform_initializer(seed=seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdamOptimizer_150": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_152": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_155": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_192": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_step_200": {
                "variable": {
                    "value": "step0",
                    "type": "variable",
                    "possible_values": []
                },
                "sess": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sess",
                            "Method Argument"
                        ]
                    ]
                },
                "global_step_tensor": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "FileWriter_201": {
                "variable": {
                    "value": "train_summary_writer",
                    "type": "variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.dir + '/train'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "FileWriter_202": {
                "variable": {
                    "value": "val_summary_writer",
                    "type": "variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.dir + '/validation'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_236": {
                "variable": {
                    "value": "saver",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_147": {
                "x": {
                    "value": "tf.divide(tf.subtract(self.pred, self.Y), self.Y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_189": {
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_235": {
                "graph": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRUCell_272": {
                "units": {
                    "value": "self.hidden1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.glorot_uniform_initializer(seed=seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "divide_147": {
                "x": {
                    "value": "tf.subtract(self.pred, self.Y)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "latest_checkpoint_237": {
                "checkpoint_dir": {
                    "value": "self.dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "subtract_147": {
                "x": {
                    "value": "self.pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "latest_checkpoint_194": {
                "checkpoint_dir": {
                    "value": "self.dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}