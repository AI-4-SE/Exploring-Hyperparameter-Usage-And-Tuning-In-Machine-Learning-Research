{
    "data.py": {
        "torch": {
            "zeros_70": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_nodes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.y.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "*size": {
                    "value": "new_y.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "*size": {
                    "value": "new_y.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "*size": {
                    "value": "new_y.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Linear_19": {
                "variable": {
                    "value": "self.halt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "h_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_21": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_32": {
                "variable": {
                    "value": "steps",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "local_preds.size(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "sum_h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "local_preds.size(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_34": {
                "variable": {
                    "value": "continue_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "local_preds.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_35": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "local_preds",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ModuleList_95": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "layers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "Dropout_99": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "variable": {
                    "value": "self.act_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_48": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.halt(prop)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "t_48": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "squeeze_48": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "where_58": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "condition",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prob_mask & final_iter",
                            "BinOp"
                        ]
                    ]
                },
                "x": {
                    "value": "sum_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(sz).to(local_preds.device)",
                            "Call"
                        ],
                        [
                            "sum_h + prob_fmask * h",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "1 - sum_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_softmax_122": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.niter + 1) // 1",
                            "BinOp"
                        ],
                        [
                            "torch.zeros_like(local_preds).to(local_preds.device)",
                            "Call"
                        ],
                        [
                            "x + (prop * p[:, None] + old_prop * (1 - p)[:, None]) * to_update",
                            "BinOp"
                        ],
                        [
                            "x / steps[:, None]",
                            "BinOp"
                        ],
                        [
                            "data.x",
                            "Attribute"
                        ],
                        [
                            "layer(self.dropout(x))",
                            "Call"
                        ],
                        [
                            "self.prop(x, edge_index)",
                            "Call"
                        ],
                        [
                            "self.act_fn(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_91": {
                "in_features": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(num_features[:-1], num_features[1:])",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(num_features[:-1], num_features[1:])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}