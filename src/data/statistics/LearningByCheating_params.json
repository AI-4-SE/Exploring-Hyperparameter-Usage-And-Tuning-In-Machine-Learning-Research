{
    "benchmark_agent.py": {
        "torch": {
            "device_121": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_125": {
                "variable": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_122": {
                "seed": {
                    "value": "random.randint(1, 10000)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "bird_view/models/agent_IAs_RL.py": {
        "torch": {
            "from_numpy_118": {
                "variable": {
                    "value": "images",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "state_buffer[-1].image",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_119": {
                "variable": {
                    "value": "speeds",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.stack(speeds).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_122": {
                "variable": {
                    "value": "steerings",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.stack(steerings).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_176": {
                "variable": {
                    "value": "torch_tensor_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np_array_RGB_input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.concatenate([self.RGB_image_buffer[indice_image + self.window - 1] for indice_image in self.args.steps_image])",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_176": {
                "variable": {
                    "value": "torch_tensor_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_65": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "current_model",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tab_model",
                            "Name"
                        ]
                    ]
                }
            },
            "load_39": {
                "f": {
                    "value": "path_model_supervised",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "os.path.join(path_to_model_supervised, file)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "args.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_125": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_182": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "bird_view/models/model_RL.py": {
        "torch": {
            "Parameter_21": {
                "variable": {
                    "value": "self.weight_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.empty(out_features, in_features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_22": {
                "variable": {
                    "value": "self.weight_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.empty(out_features, in_features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_24": {
                "variable": {
                    "value": "self.bias_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.empty(out_features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_25": {
                "variable": {
                    "value": "self.bias_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.empty(out_features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "variable": {
                    "value": "self.iqn_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.quantile_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "size_RL_state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "6144",
                            "Constant"
                        ],
                        [
                            "8192",
                            "Constant"
                        ]
                    ]
                }
            },
            "cos_117": {
                "variable": {
                    "value": "quantile_net",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.arange(1, self.quantile_embedding_dim + 1, 1, device=torch.device('cuda'), dtype=torch.float32) * math.pi * quantile_net",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_130": {
                "variable": {
                    "value": "quantile_net",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "quantile_net",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "quantiles.repeat([1, self.quantile_embedding_dim])",
                            "Call"
                        ],
                        [
                            "torch.cos(torch.arange(1, self.quantile_embedding_dim + 1, 1, device=torch.device('cuda'), dtype=torch.float32) * math.pi * quantile_net)",
                            "Call"
                        ],
                        [
                            "self.iqn_fc(quantile_net)",
                            "Call"
                        ],
                        [
                            "F.relu(quantile_net)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_152": {
                "variable": {
                    "value": "just_before_order_heads_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fcnoisy_h_a(rl_state_net)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_159": {
                "variable": {
                    "value": "just_before_order_heads_a_plus_speed_steering",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(just_before_order_heads_a, speeds, steerings)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_39": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "empty_21": {
                "*size": {
                    "value": "out_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "empty_22": {
                "*size": {
                    "value": "out_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "empty_23": {
                "*size": {
                    "value": "out_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "empty_24": {
                "*size": {
                    "value": "out_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "empty_25": {
                "*size": {
                    "value": "out_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "empty_26": {
                "*size": {
                    "value": "out_features",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "linear_52": {
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.weight_mu + self.weight_sigma * self.weight_epsilon",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias_mu + self.bias_sigma * self.bias_epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "linear_58": {
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.weight_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias_mu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_166": {
                "input": {
                    "value": "a_lane_follow",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fcnoisy0_z_a_lane_follow(just_before_order_heads_a_plus_speed_steering)",
                            "Call"
                        ],
                        [
                            "self.fcnoisy1_z_a_lane_follow(F.relu(a_lane_follow))",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_169": {
                "input": {
                    "value": "a_straight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fcnoisy0_z_a_straight(just_before_order_heads_a_plus_speed_steering)",
                            "Call"
                        ],
                        [
                            "self.fcnoisy1_z_a_straight(F.relu(a_straight))",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_172": {
                "input": {
                    "value": "a_right",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fcnoisy0_z_a_right(just_before_order_heads_a_plus_speed_steering)",
                            "Call"
                        ],
                        [
                            "self.fcnoisy1_z_a_right(F.relu(a_right))",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_175": {
                "input": {
                    "value": "a_left",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fcnoisy0_z_a_left(just_before_order_heads_a_plus_speed_steering)",
                            "Call"
                        ],
                        [
                            "self.fcnoisy1_z_a_left(F.relu(a_left))",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_118": {
                "start": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "self.quantile_embedding_dim + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "step": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "torch.device('cuda')",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_122": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "bird_view/models/model_supervised.py": {
        "torch": {
            "Sequential_9": {
                "variable": {
                    "value": "basic_block",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(size=(width_output_feature_map, height_output_feature_map), mode='nearest')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_81": {
                "variable": {
                    "value": "new_conv1",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nb_images_input * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_86": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(resnet18.children())[:-2]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_89": {
                "variable": {
                    "value": "self.last_conv_downsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(512, 512, kernel_size=(2, 2), stride=(2, 2), bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_93": {
                "variable": {
                    "value": "self.fc1_traffic_light_inters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.size_state_RL",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_94": {
                "variable": {
                    "value": "self.fc2_tl_inters_none",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_97": {
                "variable": {
                    "value": "self.fc2_traffic_light_state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "variable": {
                    "value": "self.fc2_distance_to_tl",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nb_class_dist_to_tl",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_104": {
                "variable": {
                    "value": "self.fc1_delta_y_yaw_camera",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.size_state_RL",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int(hidden_size / 4)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_107": {
                "variable": {
                    "value": "self.fc2_delta_y_yaw_camera",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(hidden_size / 4)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2 * nb_images_output",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "variable": {
                    "value": "self.last_conv_segmentation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nb_class_segmentation * nb_images_output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_126": {
                "variable": {
                    "value": "self.last_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nb_class_segmentation * nb_images_output",
                    "type": "BinOp",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "track_running_stats": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_155": {
                "variable": {
                    "value": "traffic_light_state_net",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "traffic_light_state_net",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fc1_traffic_light_inters(classif_state_net)",
                            "Call"
                        ],
                        [
                            "nn.functional.relu(traffic_light_state_net)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_162": {
                "variable": {
                    "value": "delta_position_yaw_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "delta_position_yaw_state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fc1_delta_y_yaw_camera(classif_state_net)",
                            "Call"
                        ],
                        [
                            "nn.functional.relu(delta_position_yaw_state)",
                            "Call"
                        ]
                    ]
                }
            },
            "Upsample_10": {
                "size": {
                    "value": "(width_output_feature_map, height_output_feature_map)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "in_channels": {
                    "value": "nb_channel_in",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nb_channel_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "nb_channel_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "track_running_stats": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "nb_channel_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nb_channel_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "nb_channel_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "track_running_stats": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_91": {
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "track_running_stats": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}