{
    "GF_Attack/GCN.py": {
        "sklearn": {
            "accuracy_score_257": {
                "y_true": {
                    "value": "test_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_obs[ids_to_eval]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "test_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predictions.eval(session=model.session, feed_dict={model.An: tf.SparseTensorValue(np.array(An.nonzero()).T, An[An.nonzero()].A1, An.shape), model.node_ids: ids_to_eval}).argmax(1)",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "cast_14": {
                "variable": {
                    "value": "dropout_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.floor(random_tensor)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Graph_51": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "floor_14": {
                "x": {
                    "value": "random_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "keep_prob",
                            "variable"
                        ],
                        [
                            "random_tensor + tf.random_uniform(noise_shape)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "set_random_seed_53": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "placeholder_71": {
                "variable": {
                    "value": "self.node_ids",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "node_ids",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_72": {
                "variable": {
                    "value": "self.node_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sizes[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "node_labels",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_with_default_75": {
                "variable": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "shape": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sparse_placeholder_77": {
                "variable": {
                    "value": "self.An",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SparseTensor_78": {
                "variable": {
                    "value": "self.X_sparse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "np.array(X_obs.nonzero()).T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "X_obs[X_obs.nonzero()].A1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dense_shape": {
                    "value": "X_obs.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dropout_94": {
                "variable": {
                    "value": "self.h1_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "1 - self.dropout",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gather_107": {
                "variable": {
                    "value": "self.logits_gather",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self.node_ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_109": {
                "variable": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.logits_gather",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_111": {
                "variable": {
                    "value": "self.loss_per_node",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.logits_gather",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.node_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_113": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.loss_per_node",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_122": {
                "variable": {
                    "value": "self.train_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_collection_125": {
                "variable": {
                    "value": "self.varlist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "self.name",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variables_initializer_126": {
                "variable": {
                    "value": "self.local_init_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "self.varlist",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "InteractiveSession_136": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto(device_count={'GPU': 0})",
                            "Call"
                        ],
                        [
                            "tf.ConfigProto(gpu_options=gpu_options)",
                            "Call"
                        ]
                    ]
                }
            },
            "global_variables_initializer_137": {
                "variable": {
                    "value": "self.init_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SparseTensorValue_221": {
                "indices": {
                    "value": "np.array(An.nonzero()).T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "An[An.nonzero()].A1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dense_shape": {
                    "value": "An.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_57": {
                "name_or_scope": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_92": {
                "variable": {
                    "value": "self.h1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "self.h1 + self.b1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ConfigProto_129": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "device_count": {
                    "value": "{'GPU': 0}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "GPUOptions_133": {
                "variable": {
                    "value": "gpu_options",
                    "type": "variable",
                    "possible_values": []
                },
                "visible_device_list": {
                    "value": "'{}'.format(gpu_id)",
                    "type": "Call",
                    "possible_values": []
                },
                "allow_growth": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConfigProto_134": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "gpu_options": {
                    "value": "gpu_options",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.GPUOptions(visible_device_list='{}'.format(gpu_id), allow_growth=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "cond_82": {
                "pred": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : self.X_dropout",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self.X_sparse",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_97": {
                "pred": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : self.h1_dropout",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self.h1",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "placeholder_178": {
                "dtype": {
                    "value": "v.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "v.get_shape()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "assign_179": {
                "ref": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "self.assign_placeholders[v.name]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_87": {
                "shape": {
                    "value": "sizes[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "shape": {
                    "value": "sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "add_n_117": {
                "inputs": {
                    "value": "[tf.nn.l2_loss(v) for v in [self.W1, self.b1]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "SparseTensorValue_254": {
                "indices": {
                    "value": "np.array(An.nonzero()).T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "An[An.nonzero()].A1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dense_shape": {
                    "value": "An.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "l2_loss_117": {
                "t": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "GF_Attack/utils.py": {
        "sklearn": {
            "train_test_split_115": {
                "variable": {
                    "value": "(idx_train_and_val, idx_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "train_size": {
                    "value": "train_size + val_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "Method Argument"
                        ]
                    ]
                },
                "stratify": {
                    "value": "stratify",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stratify[idx_train_and_val]",
                            "Subscript"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "train_test_split_122": {
                "variable": {
                    "value": "(idx_train, idx_val)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "idx_train_and_val",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "train_size": {
                    "value": "train_size / (train_size + val_size)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "test_size": {
                    "value": "val_size / (train_size + val_size)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "stratify": {
                    "value": "stratify",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stratify[idx_train_and_val]",
                            "Subscript"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "main.py": {
        "tensorflow": {}
    }
}