{
    "rotatingMNIST/model.py": {
        "sklearn": {
            "TSNE_239": {
                "variable": {
                    "value": "self.tsne",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PCA_240": {
                "variable": {
                    "value": "self.pca",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "triu_indices_153": {
                "variable": {
                    "value": "idx",
                    "type": "Variable",
                    "possible_values": []
                },
                "row": {
                    "value": "A_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                },
                "col": {
                    "value": "A_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                }
            },
            "DataLoader_890": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "RotateMNIST(rotate_angle=(0, 360))",
                            "Call"
                        ],
                        [
                            "MNIST(root=root, download=True)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_896": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "RotateMNIST(rotate_angle=(0, 360))",
                            "Call"
                        ],
                        [
                            "MNIST(root=root, download=True)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_87": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(x).to(device)",
                            "Call"
                        ],
                        [
                            "x.to(device)",
                            "Call"
                        ],
                        [
                            "F.grid_sample(x, grid)",
                            "Call"
                        ],
                        [
                            "self.stn(x, u)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_98": {
                "variable": {
                    "value": "(self.data, self.targets)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(processed_folder, data_file)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_182": {
                "variable": {
                    "value": "self.fc_stn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(opt.dim_domain + 28 * 28, nh)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_190": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, nh, 3, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_197": {
                "variable": {
                    "value": "self.fc_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(nz, nh, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "symeig_208": {
                "variable": {
                    "value": "(_, evs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "A_vec.new_zeros((A_vec.shape[0], A_dim, A_dim))",
                            "Call"
                        ],
                        [
                            "convert_Avec_to_A(A_vec)",
                            "Call"
                        ]
                    ]
                },
                "eigenvectors": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "atan2_211": {
                "variable": {
                    "value": "self.theta_angle",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "tsin[:, 0, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "tcos[:, 0, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_214": {
                "variable": {
                    "value": "theta_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tcos, tsin, tcos * 0]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_215": {
                "variable": {
                    "value": "theta_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[-tsin, tcos, tcos * 0]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_216": {
                "variable": {
                    "value": "theta",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[theta_0, theta_1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "affine_grid_218": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "theta": {
                    "value": "theta",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat([theta_0, theta_1], 1)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "grid_sample_219": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(x).to(device)",
                            "Call"
                        ],
                        [
                            "x.to(device)",
                            "Call"
                        ],
                        [
                            "F.grid_sample(x, grid)",
                            "Call"
                        ],
                        [
                            "self.stn(x, u)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.affine_grid(theta, x.size())",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_420": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_421": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_427": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_430": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_445": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(nin, nh, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_465": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_466": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_467": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 50)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_468": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 50)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_481": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mse_loss_486": {
                "variable": {
                    "value": "E_gan_src",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.u[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mse_loss_487": {
                "variable": {
                    "value": "E_gan_tgt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d[self.is_source == 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.u[self.is_source == 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "nll_loss_492": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_source",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y_source",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mse_loss_499": {
                "variable": {
                    "value": "D_src",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.u[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mse_loss_500": {
                "variable": {
                    "value": "D_tgt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d[self.is_source == 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.u[self.is_source == 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Adam_530": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_531": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 50)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_543": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_source",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y_source",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_565": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_566": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_567": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_568": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_575": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_578": {
                "variable": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_581": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sigmoid_586": {
                "variable": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e.detach())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_615": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_616": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_618": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_619": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_633": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_636": {
                "variable": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_639": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y[self.is_source == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "log_softmax_644": {
                "variable": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e.detach())",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_645": {
                "variable": {
                    "value": "self.loss_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "self.t_class",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_726": {
                "variable": {
                    "value": "self.d_src",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e_src.detach())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_727": {
                "variable": {
                    "value": "self.d_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e_tgt.detach())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_137": {
                "data": {
                    "value": "[1 - 0.01, 0.01, 1 - 0.01]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_165": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(x).to(device)",
                            "Call"
                        ],
                        [
                            "x.to(device)",
                            "Call"
                        ],
                        [
                            "F.grid_sample(x, grid)",
                            "Call"
                        ],
                        [
                            "self.stn(x, u)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_264": {
                "obj": {
                    "value": "self.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_676": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters())",
                            "Call"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_678": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 50)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_687": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_689": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_691": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 50)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_693": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 50)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_708": {
                "variable": {
                    "value": "self.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.y_src, self.y_tgt]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_715": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_720": {
                "variable": {
                    "value": "self.g_src",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_src.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_721": {
                "variable": {
                    "value": "self.g_rpy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_rpy.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_722": {
                "variable": {
                    "value": "self.g_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_tgt.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_723": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.g_src, self.g_tgt]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_736": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_source",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y_source",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "nll_loss_739": {
                "variable": {
                    "value": "self.loss_E_replay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_rpy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "self.y_rpy",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_740": {
                "variable": {
                    "value": "self.d_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.netD(self.e_tgt)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_940": {
                "variable": {
                    "value": "continual_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "continual_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ContinousRotateMNIST()",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_951": {
                "variable": {
                    "value": "target_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "continual_dataset.ds_target[phase]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_183": {
                "in_features": {
                    "value": "opt.dim_domain + 28 * 28",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "LeakyReLU_183": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_183": {
                "p": {
                    "value": "opt.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_184": {
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "BatchNorm1d_184": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "LeakyReLU_184": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_184": {
                "p": {
                    "value": "opt.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_185": {
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_191": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_191": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_191": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_191": {
                "p": {
                    "value": "opt.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_192": {
                "in_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_192": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_192": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_192": {
                "p": {
                    "value": "opt.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_193": {
                "in_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_193": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_193": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_193": {
                "p": {
                    "value": "opt.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_194": {
                "in_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nz",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nz",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_194": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_198": {
                "in_channels": {
                    "value": "nz",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nz",
                            "Attribute"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_198": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_198": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_199": {
                "in_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_199": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_199": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_201": {
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_206": {
                "tensors": {
                    "value": "[u, x.reshape(-1, 28 * 28)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_231": {
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.fc_pred(z)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_446": {
                "in_channels": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_446": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "LeakyReLU_446": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_447": {
                "in_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_447": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "LeakyReLU_447": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_448": {
                "in_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_448": {
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                }
            },
            "LeakyReLU_448": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_450": {
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ],
                        [
                            "512",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nout",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_580": {
                "input": {
                    "value": "self.d_t + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_580": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_590": {
                "input": {
                    "value": "1 - self.d_t + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_590": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_638": {
                "input": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "self.t_class",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_729": {
                "input": {
                    "value": "1 - self.d_tgt + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_729": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_269": {
                "f": {
                    "value": "self.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_589": {
                "input": {
                    "value": "self.d_s + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_589": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_709": {
                "tensors": {
                    "value": "[self.u_src, self.u_tgt]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_728": {
                "input": {
                    "value": "self.d_src + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_728": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_741": {
                "input": {
                    "value": "self.d_tgt + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_741": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_523": {
                "input": {
                    "value": "logvar",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "toy-circle/model.py": {
        "sklearn": {
            "TSNE_58": {
                "variable": {
                    "value": "self.tsne",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PCA_59": {
                "variable": {
                    "value": "self.pca",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "from_numpy_22": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(x).to(device)",
                            "Call"
                        ],
                        [
                            "x.to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_98": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_274": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_275": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_283": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_306": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_307": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_308": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_309": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_322": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_349": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_351": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_354": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_355": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_364": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_368": {
                "variable": {
                    "value": "self.loss_ADV_src",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_adv[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_370": {
                "variable": {
                    "value": "f_adv_tgt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1 - self.f_adv_softmax[self.domain_mask == 0] + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_371": {
                "variable": {
                    "value": "self.loss_ADV_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(f_adv_tgt)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_380": {
                "variable": {
                    "value": "self.loss_ADV_src",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_adv[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_382": {
                "variable": {
                    "value": "f_adv_tgt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1 - self.f_adv_softmax[self.domain_mask == 0] + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_384": {
                "variable": {
                    "value": "self.loss_ADV_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(f_adv_tgt)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_398": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_399": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_400": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_401": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_407": {
                "variable": {
                    "value": "d_max",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_422": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_424": {
                "variable": {
                    "value": "self.f_seq_softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_434": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_441": {
                "variable": {
                    "value": "self.loss_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.d_seq)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.z_seq)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_458": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_459": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_460": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.gamma)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_461": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.gamma)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_like_505": {
                "variable": {
                    "value": "self.p_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.y_seq",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "nll_loss_528": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "l1_loss_544": {
                "variable": {
                    "value": "self.loss_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.d_seq * self.domain_weight)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.t_seq * self.domain_weight)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_728": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_729": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_730": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_731": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_741": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_756": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_31": {
                "input": {
                    "value": "d",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(diff ** 2).sum(3)",
                            "Call"
                        ]
                    ]
                }
            },
            "min_32": {
                "input": {
                    "value": "d",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(diff ** 2).sum(3)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_136": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_137": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_163": {
                "obj": {
                    "value": "self.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_213": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_214": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_601": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_602": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_603": {
                "variable": {
                    "value": "idx_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "idx_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(idx_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(idx_seq, 0).to(self.device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_648": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_649": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_650": {
                "variable": {
                    "value": "idx_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "idx_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(idx_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(idx_seq, 0).to(self.device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_804": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_806": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.lr_decay_period)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_816": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_818": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_820": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.lr_decay_period)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_822": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.lr_decay_period)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_854": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_858": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_862": {
                "variable": {
                    "value": "self.g_rpy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_rpy.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_886": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_889": {
                "variable": {
                    "value": "self.loss_E_replay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_rpy)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_rpy)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_977": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_978": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_151": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_151": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_248": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_248": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_318": {
                "input": {
                    "value": "self.d_seq_target + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_318": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_333": {
                "input": {
                    "value": "1 - self.d_seq_target + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_333": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_429": {
                "input": {
                    "value": "flat(self.d_seq)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.z_seq)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "l1_loss_522": {
                "input": {
                    "value": "flat(self.d_seq * self.domain_weight)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.t_seq * self.domain_weight)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_617": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_617": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Adam_690": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "self.opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(self.opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_691": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(self.opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_692": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / self.opt.gamma)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_693": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / self.opt.gamma)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_711": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_711": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_736": {
                "input": {
                    "value": "prob",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mean_736": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_748": {
                "input": {
                    "value": "-torch.abs(t_tmp - flat(self.d_mean_seq)) / flat(self.d_std_seq)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "exp_765": {
                "input": {
                    "value": "-torch.abs(t_tmp - flat(self.d_mean_seq)) / flat(self.d_std_seq)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_876": {
                "input": {
                    "value": "1 - self.d_tgt + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_876": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_920": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_921": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_943": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_944": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_947": {
                "variable": {
                    "value": "x_rpy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_rpy",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_rpy, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_948": {
                "variable": {
                    "value": "y_rpy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_rpy",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_rpy, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_168": {
                "f": {
                    "value": "self.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_332": {
                "input": {
                    "value": "self.d_seq_source + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_332": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_532": {
                "input": {
                    "value": "self.f_seq[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "self.p_seq[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "log_875": {
                "input": {
                    "value": "self.d_src + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_875": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_891": {
                "input": {
                    "value": "self.d_tgt + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_891": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_935": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_935": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_961": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_961": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "abs_748": {
                "input": {
                    "value": "t_tmp - flat(self.d_mean_seq)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_765": {
                "input": {
                    "value": "t_tmp - flat(self.d_mean_seq)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "toy-circle/plot.py": {
        "sklearn": {
            "SVC_86": {
                "variable": {
                    "value": "svc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "gamma": {
                    "value": "gamma",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "30",
                            "Constant"
                        ],
                        [
                            "15",
                            "Constant"
                        ]
                    ]
                },
                "C": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_118": {
                "variable": {
                    "value": "svc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "C": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_120": {
                "variable": {
                    "value": "svc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "gamma": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "C": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "toy-sine/model.py": {
        "sklearn": {
            "TSNE_58": {
                "variable": {
                    "value": "self.tsne",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PCA_59": {
                "variable": {
                    "value": "self.pca",
                    "type": "Attribute",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "from_numpy_22": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(x).to(device)",
                            "Call"
                        ],
                        [
                            "x.to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_98": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_274": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_275": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_283": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_306": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_307": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_308": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_309": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_322": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_349": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_351": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_354": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_355": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_364": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_368": {
                "variable": {
                    "value": "self.loss_ADV_src",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_adv[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_370": {
                "variable": {
                    "value": "f_adv_tgt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1 - self.f_adv_softmax[self.domain_mask == 0] + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_371": {
                "variable": {
                    "value": "self.loss_ADV_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(f_adv_tgt)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_380": {
                "variable": {
                    "value": "self.loss_ADV_src",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_adv[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_382": {
                "variable": {
                    "value": "f_adv_tgt",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1 - self.f_adv_softmax[self.domain_mask == 0] + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "nll_loss_384": {
                "variable": {
                    "value": "self.loss_ADV_tgt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(f_adv_tgt)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.g_seq[self.domain_mask == 0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_398": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_399": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ExponentialLR_400": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_401": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / 100)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_407": {
                "variable": {
                    "value": "d_max",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.d_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_422": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_424": {
                "variable": {
                    "value": "self.f_seq_softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_434": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_seq_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_seq_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_441": {
                "variable": {
                    "value": "self.loss_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.d_seq)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.z_seq)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_31": {
                "input": {
                    "value": "d",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(diff ** 2).sum(3)",
                            "Call"
                        ]
                    ]
                }
            },
            "min_32": {
                "input": {
                    "value": "d",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(diff ** 2).sum(3)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_136": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_137": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_163": {
                "obj": {
                    "value": "self.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_213": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_214": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_463": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "non_D_parameters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ],
                        [
                            "list(self.netE.parameters()) + list(self.netF.parameters())",
                            "BinOp"
                        ]
                    ]
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_465": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.lr_decay_period)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_475": {
                "variable": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_477": {
                "variable": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ExponentialLR_479": {
                "variable": {
                    "value": "self.lr_scheduler_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.lr_decay_period)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialLR_481": {
                "variable": {
                    "value": "self.lr_scheduler_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer_D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.5 ** (1 / opt.lr_decay_period)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "argmax_513": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_517": {
                "variable": {
                    "value": "self.g_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_seq.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_521": {
                "variable": {
                    "value": "self.g_rpy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f_rpy.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nll_loss_545": {
                "variable": {
                    "value": "self.loss_E_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_source)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "nll_loss_548": {
                "variable": {
                    "value": "self.loss_E_replay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "flat(self.f_rpy)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.y_rpy)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_636": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_637": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_151": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_151": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_248": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_248": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_318": {
                "input": {
                    "value": "self.d_seq_target + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_318": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_333": {
                "input": {
                    "value": "1 - self.d_seq_target + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_333": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "nll_loss_429": {
                "input": {
                    "value": "flat(self.d_seq)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "flat(self.z_seq)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_535": {
                "input": {
                    "value": "1 - self.d_tgt + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_535": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_579": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_580": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_602": {
                "variable": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(x_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_603": {
                "variable": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ],
                        [
                            "torch.cat(y_seq, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_606": {
                "variable": {
                    "value": "x_rpy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_rpy",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(x_rpy, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_607": {
                "variable": {
                    "value": "y_rpy",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_rpy",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.cat(y_rpy, 0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_168": {
                "f": {
                    "value": "self.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_332": {
                "input": {
                    "value": "self.d_seq_source + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_332": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_534": {
                "input": {
                    "value": "self.d_src + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_534": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_550": {
                "input": {
                    "value": "self.d_tgt + 1e-10",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_550": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_594": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_594": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_620": {
                "tensors": {
                    "value": "acc_curve",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_620": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "toy-sine/plot.py": {
        "sklearn": {
            "SVC_86": {
                "variable": {
                    "value": "svc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "gamma": {
                    "value": "gamma",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "30",
                            "Constant"
                        ],
                        [
                            "15",
                            "Constant"
                        ]
                    ]
                },
                "C": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_118": {
                "variable": {
                    "value": "svc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                },
                "C": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_120": {
                "variable": {
                    "value": "svc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "gamma": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "C": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "toy-circle/dataset.py": {
        "torch": {}
    },
    "toy-circle/modules.py": {
        "torch": {
            "Linear_21": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nx",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.fc1_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc2_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "relu_37": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_38": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1_var(t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_39": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2_var(t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_42": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, t)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_45": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_46": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_67": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_70": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_73": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_75": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_76": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_78": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_79": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_103": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_104": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_105": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.fc5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_106": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.fc6(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_107": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn7(self.fc7(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_144": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_145": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_147": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nmid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh * 2",
                            "BinOp"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_148": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_150": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_151": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_153": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_154": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_156": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_157": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_166": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.num_domain",
                            "Attribute"
                        ],
                        [
                            "opt.dim_domain * nmix * 3",
                            "BinOp"
                        ]
                    ]
                }
            },
            "relu_176": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_180": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_181": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.fc5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_182": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.fc6(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_183": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn7(self.fc7(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_softmax_185": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_203": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_204": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_206": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_207": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_209": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_210": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_212": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_213": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_221": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.num_domain",
                            "Attribute"
                        ],
                        [
                            "opt.dim_domain * nmix * 3",
                            "BinOp"
                        ]
                    ]
                }
            },
            "relu_232": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_233": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_234": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.fc5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_235": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.fc6(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_241": {
                "variable": {
                    "value": "x_weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.softmax(x_weight, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_255": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_256": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_257": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_258": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_259": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nc",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nc",
                            "Attribute"
                        ]
                    ]
                }
            },
            "relu_270": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_271": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_273": {
                "variable": {
                    "value": "x_softmax",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_274": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_131": {
                "variable": {
                    "value": "self.cond",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(nc, nh)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_179": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, f]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_91": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_132": {
                "in_features": {
                    "value": "nc",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nc",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_133": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_134": {
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_135": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_240": {
                "input": {
                    "value": "x_std",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(x_std) * 2 + 0.1",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "toy-sine/data_loader.py": {
        "torch": {}
    },
    "toy-sine/dataset.py": {
        "torch": {}
    },
    "toy-sine/modules.py": {
        "torch": {
            "Linear_21": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nx",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.fc1_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc2_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "relu_37": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_38": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1_var(t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_39": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2_var(t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_42": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, t)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_45": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_46": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_67": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_70": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_73": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_75": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_76": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_78": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_79": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_103": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_104": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_105": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.fc5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_106": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.fc6(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_107": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn7(self.fc7(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_144": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_145": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_147": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nmid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh * 2",
                            "BinOp"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_148": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_150": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_151": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_153": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_154": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_156": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_157": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_166": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.num_domain",
                            "Attribute"
                        ],
                        [
                            "opt.dim_domain * nmix * 3",
                            "BinOp"
                        ]
                    ]
                }
            },
            "relu_176": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_180": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_181": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.fc5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_182": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.fc6(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_183": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn7(self.fc7(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_softmax_185": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_203": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_204": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_206": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_207": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_209": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_210": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_212": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_213": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_221": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.num_domain",
                            "Attribute"
                        ],
                        [
                            "opt.dim_domain * nmix * 3",
                            "BinOp"
                        ]
                    ]
                }
            },
            "relu_232": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_233": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_234": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.fc5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_235": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.fc6(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_241": {
                "variable": {
                    "value": "x_weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.softmax(x_weight, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_255": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nin",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ],
                        [
                            "nh",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_256": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_257": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "BatchNorm1d_258": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Linear_259": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nc",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nc",
                            "Attribute"
                        ]
                    ]
                }
            },
            "relu_270": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.fc3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_271": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.fc4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_273": {
                "variable": {
                    "value": "x_softmax",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_274": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_131": {
                "variable": {
                    "value": "self.cond",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(nc, nh)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_179": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, f]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_91": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "torch.cat((x, t), dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc3(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc4(x))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.output(self.fc_final(x))",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, f], dim=1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn7(self.fc7(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn5(self.fc5(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn6(self.fc6(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x).reshape(-1, 3, self.ndomain, self.nmix)",
                            "Call"
                        ],
                        [
                            "x.reshape(T * B, -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn3(self.fc3(x)))",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn4(self.fc4(x)))",
                            "Call"
                        ],
                        [
                            "self.fc_final(x)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(x, dim=1)",
                            "Call"
                        ],
                        [
                            "x.reshape(T, B, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_132": {
                "in_features": {
                    "value": "nc",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nc",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_133": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_134": {
                "in_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nh",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ],
                        [
                            "opt.nh",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_135": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_240": {
                "input": {
                    "value": "x_std",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(x_std) * 2 + 0.1",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "toy-sine/utils.py": {
        "torch": {
            "nll_loss_25": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "temp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred * mask.unsqueeze(1)",
                            "BinOp"
                        ]
                    ]
                },
                "target": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mse_loss_79": {
                "variable": {
                    "value": "term1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred1",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mse_loss_80": {
                "variable": {
                    "value": "term2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred2",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "label",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sum_33": {
                "input": {
                    "value": "(pred_m - label) ** 2 / torch.exp(pred_s)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_50": {
                "input": {
                    "value": "(pred - label) ** 2 * delta",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_56": {
                "input": {
                    "value": "label - mean",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_59": {
                "input": {
                    "value": "(pred - label) ** 2 * delta",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_68": {
                "input": {
                    "value": "torch.abs(pred - label) * delta",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_74": {
                "input": {
                    "value": "torch.abs(pred - label) ** n",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_35": {
                "input": {
                    "value": "pred_s",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "abs_37": {
                "input": {
                    "value": "label - mean",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_40": {
                "input": {
                    "value": "(1 / torch.exp(pred_s) - delta) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_47": {
                "input": {
                    "value": "label - mean",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_65": {
                "input": {
                    "value": "label - mean",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_82": {
                "input": {
                    "value": "F.sigmoid(pred1 - pred2) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "exp_33": {
                "input": {
                    "value": "pred_s",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "abs_68": {
                "input": {
                    "value": "pred - label",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_74": {
                "input": {
                    "value": "pred - label",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_82": {
                "input": {
                    "value": "pred1 - pred2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "exp_40": {
                "input": {
                    "value": "pred_s",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}