{
    "data_generator.py": {
        "tensorflow": {
            "squeeze_67": {
                "input": {
                    "value": "tf.cast(inputs['raw_token'], tf.string)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cast_68": {
                "x": {
                    "value": "inputs['sequence_lengths']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_67": {
                "x": {
                    "value": "inputs['raw_token']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.string",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "tensorflow": {
            "Embedding_42": {
                "variable": {
                    "value": "self.pos_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_dim": {
                    "value": "len(vocab.pos)",
                    "type": "Call",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "train_param.pos_emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "pos_embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_43": {
                "variable": {
                    "value": "self.char_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_dim": {
                    "value": "len(vocab.char)",
                    "type": "Call",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "train_param.char_emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_length": {
                    "value": "(train_param.max_word, train_param.max_char)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "char_embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_59": {
                "variable": {
                    "value": "self.token_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "train_param.token_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_60": {
                "variable": {
                    "value": "self.pos_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "train_param.pos_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_71": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "label_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(vocab.label)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "logits",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_72": {
                "variable": {
                    "value": "self.transition_params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random.uniform(shape=(label_size, label_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_121": {
                "variable": {
                    "value": "feature",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[token_embedding, char_embedding, pos_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "function_97": {
                "experimental_relax_shapes": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Embedding_40": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_dim": {
                    "value": "len(vocab.token)",
                    "type": "Call",
                    "possible_values": []
                },
                "output_dim": {
                    "value": "train_param.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "word_embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TimeDistributed_47": {
                "variable": {
                    "value": "self.char_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layer": {
                    "value": "Bidirectional(LSTM(units=train_param.char_lstm_units, recurrent_dropout=train_param.char_lstm_recurrent_dropout, dropout=train_param.char_lstm_dropout), name='char_blstm')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TimeDistributed_53": {
                "variable": {
                    "value": "self.char_cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layer": {
                    "value": "Conv1D(train_param.char_cnn_filter_num, train_param.char_cnn_window_size, padding='same')",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "char_cnn",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TimeDistributed_56": {
                "variable": {
                    "value": "self.char_max_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layer": {
                    "value": "GlobalMaxPooling1D()",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "char_pooling",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_57": {
                "variable": {
                    "value": "self.char_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "train_param.char_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "add_128": {
                "variable": {
                    "value": "feature",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "immediate_feature",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "uniform_72": {
                "shape": {
                    "value": "(label_size, label_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Bidirectional_47": {
                "layer": {
                    "value": "LSTM(units=train_param.char_lstm_units, recurrent_dropout=train_param.char_lstm_recurrent_dropout, dropout=train_param.char_lstm_dropout)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "char_blstm",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1D_54": {
                "filters": {
                    "value": "train_param.char_cnn_filter_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "train_param.char_cnn_window_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Bidirectional_65": {
                "layer": {
                    "value": "LSTM(units=train_param.lstm_units, recurrent_dropout=train_param.lstm_recurrent_dropout, dropout=train_param.lstm_dropout, return_sequences=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "f'blstm-{idx}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "LSTM_47": {
                "units": {
                    "value": "train_param.char_lstm_units",
                    "type": "Attribute",
                    "possible_values": []
                },
                "recurrent_dropout": {
                    "value": "train_param.char_lstm_recurrent_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dropout": {
                    "value": "train_param.char_lstm_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_65": {
                "units": {
                    "value": "train_param.lstm_units",
                    "type": "Attribute",
                    "possible_values": []
                },
                "recurrent_dropout": {
                    "value": "train_param.lstm_recurrent_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dropout": {
                    "value": "train_param.lstm_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "tensorflow": {
            "function_28": {
                "experimental_relax_shapes": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "function_39": {
                "experimental_relax_shapes": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "TensorBoard_102": {
                "variable": {
                    "value": "tb_callback",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "train_param.output_dir",
                    "type": "Attribute",
                    "possible_values": []
                },
                "profile_batch": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Checkpoint_116": {
                "variable": {
                    "value": "ckpt",
                    "type": "Name",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.keras.optimizers.Adam(train_param.learning_rate, decay=train_param.lr_decay_rate, **train_param.optimizer_param)",
                            "Call"
                        ],
                        [
                            "tf.keras.optimizers.SGD(train_param.learning_rate, decay=train_param.lr_decay_rate, **train_param.optimizer_param)",
                            "Call"
                        ]
                    ]
                },
                "model": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "BiLstmCrfModel(train_param, vocab)",
                            "Call"
                        ]
                    ]
                }
            },
            "CheckpointManager_118": {
                "variable": {
                    "value": "ckpt_manager",
                    "type": "Name",
                    "possible_values": []
                },
                "checkpoint": {
                    "value": "ckpt",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.train.Checkpoint(optimizer=optimizer, model=model)",
                            "Call"
                        ]
                    ]
                },
                "directory": {
                    "value": "train_param.output_dir",
                    "type": "Attribute",
                    "possible_values": []
                },
                "checkpoint_name": {
                    "value": "model.ckpt",
                    "type": "Constant",
                    "possible_values": []
                },
                "max_to_keep": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_107": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "train_param.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "train_param.lr_decay_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_110": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "train_param.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "train_param.lr_decay_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "latest_checkpoint_117": {
                "checkpoint_dir": {
                    "value": "train_param.output_dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "create_file_writer_127": {
                "logdir": {
                    "value": "train_param.output_dir + '/train'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_32": {
                "input_tensor": {
                    "value": "log_likelihood",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "scalar_152": {
                "name": {
                    "value": "valid f1-score",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "valid_f1_score",
                    "type": "Name",
                    "possible_values": [
                        [
                            "test_loop(idx_to_label, model, output_path, valid_generator)",
                            "Call"
                        ]
                    ]
                },
                "step": {
                    "value": "epoch * train_param.train_steps + step",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "scalar_139": {
                "name": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "train_loss / num_batches",
                    "type": "BinOp",
                    "possible_values": []
                },
                "step": {
                    "value": "epoch * train_param.train_steps + step",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "scalar_159": {
                "name": {
                    "value": "test f1-score",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "test_f1_score",
                    "type": "Name",
                    "possible_values": [
                        [
                            "test_loop(idx_to_label, model, output_path, test_generator)",
                            "Call"
                        ]
                    ]
                },
                "step": {
                    "value": "epoch * train_param.train_steps + step",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "tensorflow": {
            "set_seed_35": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datetime.now()",
                            "Call"
                        ]
                    ]
                }
            },
            "list_physical_devices_45": {
                "variable": {
                    "value": "gpus",
                    "type": "Name",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_floatx_55": {
                "value": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "trace_on_56": {
                "graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_memory_growth_48": {
                "device": {
                    "value": "gpu",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gpus",
                            "Name"
                        ]
                    ]
                },
                "enable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "manual_seed_37": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datetime.now()",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_all_38": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "datetime.now()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}