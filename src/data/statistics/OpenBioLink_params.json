{
    "src/openbiolink/evaluation/dataLoader.py": {
        "torch": {
            "cat_145": {
                "variable": {
                    "value": "_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self._training, self._validation, self._testing)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_142": {
                "data": {
                    "value": "triples_of_ids",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.concatenate([head_column, relation_column, tail_column], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_208": {
                "variable": {
                    "value": "true_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(true_targets)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_212": {
                "variable": {
                    "value": "true_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(true_targets)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "src/openbiolink/evaluation/evaluation.py": {
        "torch": {
            "cat_29": {
                "variable": {
                    "value": "ranking_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ranking_head, ranking_tail]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_24": {
                "input": {
                    "value": "y_pred_neg_head >= y_pred_pos_head.view(-1, 1)",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_25": {
                "input": {
                    "value": "y_pred_neg_tail >= y_pred_pos_tail.view(-1, 1)",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_27": {
                "input": {
                    "value": "y_pred_neg_head <= y_pred_pos_head.view(-1, 1)",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_28": {
                "input": {
                    "value": "y_pred_neg_tail <= y_pred_pos_tail.view(-1, 1)",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/openbiolink/obl2021/obl2021.py": {
        "torch": {
            "cat_194": {
                "variable": {
                    "value": "pred_top10",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(t_pred_top10, h_pred_top10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_195": {
                "variable": {
                    "value": "correct_index",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(t_correct_index, h_correct_index)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "nonzero_211": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "correct_index.view(-1, 1) == pred_top10",
                    "type": "Compare",
                    "possible_values": []
                },
                "as_tuple": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_215": {
                "variable": {
                    "value": "rr",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(correct_index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_223": {
                "variable": {
                    "value": "total_h10",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.any(correct_index.view(-1, 1) == pred_top10, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "arange_118": {
                "start": {
                    "value": "self.num_entities",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_206": {
                "variable": {
                    "value": "container",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "container",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(container)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_88": {
                "data": {
                    "value": "df.values",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_152": {
                "variable": {
                    "value": "true_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(true_targets)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_156": {
                "variable": {
                    "value": "true_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(true_targets)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "any_223": {
                "input": {
                    "value": "correct_index.view(-1, 1) == pred_top10",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test/evaluation_tests/obl2021.py": {
        "torch": {
            "arange_32": {
                "start": {
                    "value": "dl.num_entities",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_33": {
                "start": {
                    "value": "dl.num_relations",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "top10_heads",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(top10_heads, top10_heads_batch)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_77": {
                "variable": {
                    "value": "top10_tails",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(top10_tails, top10_tails_batch)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "topk_67": {
                "input": {
                    "value": "scores_head",
                    "type": "variable",
                    "possible_values": [
                        [
                            "head_neg_score(neg_head, pos_rel_emb, tail, 1, len(batch), dl.num_entities).squeeze(0)",
                            "Call"
                        ],
                        [
                            "dl.filter_scores(batch, scores_head, 0, float('-Inf'))",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "topk_73": {
                "input": {
                    "value": "scores_tail",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tail_neg_score(head, pos_rel_emb, neg_tail, 1, len(batch), dl.num_entities).squeeze(0)",
                            "Call"
                        ],
                        [
                            "dl.filter_scores(batch, scores_tail, 2, float('-Inf'))",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test/evaluation_tests/obl2021_mwe.py": {
        "torch": {
            "cat_40": {
                "variable": {
                    "value": "top10_heads",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "top10_heads",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(top10_heads, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_41": {
                "variable": {
                    "value": "top10_tails",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "top10_tails",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(top10_tails, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_17": {
                "data": {
                    "value": "rand",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "tensor_23": {
                "data": {
                    "value": "rand",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "test/evaluation_tests/test_dglke_evaluation.py": {
        "torch": {
            "manual_seed_76": {
                "seed": {
                    "value": "145",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test/evaluation_tests/test_evaluator.py": {
        "torch": {
            "randn_13": {
                "variable": {
                    "value": "y_pred_pos",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "180",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_14": {
                "variable": {
                    "value": "y_pred_neg",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "180",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "5000",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test/evaluation_tests/test_safran_evaluation.py": {
        "torch": {
            "zeros_63": {
                "variable": {
                    "value": "pos_score_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(len(batch),)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "neg_score_head",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(100, self.num_neg)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_65": {
                "variable": {
                    "value": "pos_score_tail",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(len(batch),)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_66": {
                "variable": {
                    "value": "neg_score_tail",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(100, self.num_neg)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}