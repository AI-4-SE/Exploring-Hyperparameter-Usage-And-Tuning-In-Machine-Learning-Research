{
    "software/yai_alternative/aix/explainable_loan_risk_classifier.py": {
        "sklearn": {
            "LabelEncoder_195": {
                "variable": {
                    "value": "enc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "get_logger_4": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_204": {
                "labels": {
                    "value": "correct",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "set_random_seed_148": {
                "seed": {
                    "value": "tf_random_seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "software/yai_alternative/oke/core/misc/tree_cluster_builder.py": {
        "sklearn": {
            "cosine_similarity_74": {
                "variable": {
                    "value": "similarity_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "[entity_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "Y": {
                    "value": "value_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[leaf['value'] for leaf in leaf_list]",
                            "ListComp"
                        ]
                    ]
                }
            }
        }
    },
    "software/yai_alternative/oke/core/models/classification/sentence_classifier.py": {
        "sklearn": {
            "cosine_similarity_171": {
                "variable": {
                    "value": "similarity_dict[combined_wordvec]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "X": {
                    "value": "map(get_avg_wordvec_similarity, formatted_query_list)",
                    "type": "Call",
                    "possible_values": []
                },
                "Y": {
                    "value": "map(get_avg_wordvec_similarity, self.spacy_documents)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "software/yai_alternative/oke/core/models/model_manager.py": {
        "sklearn": {
            "normalize_225": {
                "variable": {
                    "value": "embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "X": {
                    "value": "embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.concatenate(batched_embeddings, 0)",
                            "Call"
                        ],
                        [
                            "normalize(embeddings, norm=norm)",
                            "Call"
                        ]
                    ]
                },
                "norm": {
                    "value": "norm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "list_physical_devices_14": {
                "variable": {
                    "value": "gpu_devices",
                    "type": "variable",
                    "possible_values": []
                },
                "device_type": {
                    "value": "GPU",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_logger_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_memory_growth_16": {
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpu_devices",
                            "variable"
                        ]
                    ]
                },
                "enable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "constant_140": {
                "value": {
                    "value": "tuple(map(lambda x: x[0] if is_listable(x) else x, y))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "constant_142": {
                "value": {
                    "value": "tuple(map(lambda x: x[1] if is_listable(x) else '', y))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_count_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_33": {
                "device": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "device_count_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "software/yai_baseline/aix/explainable_loan_risk_classifier.py": {
        "sklearn": {
            "LabelEncoder_195": {
                "variable": {
                    "value": "enc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "get_logger_4": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_204": {
                "labels": {
                    "value": "correct",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "set_random_seed_148": {
                "seed": {
                    "value": "tf_random_seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    }
}