{
    "dataset.py": {
        "torch": {}
    },
    "demo_multilength.py": {
        "torch": {
            "SummaryWriter_34": {
                "variable": {
                    "value": "writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "log_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(args.demo_path, args.demo_name + '/log')",
                            "Call"
                        ]
                    ]
                }
            },
            "device_36": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_39": {
                "variable": {
                    "value": "G",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "G",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Generator().to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(G)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_45": {
                "variable": {
                    "value": "za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n_za_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_za",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_40": {
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_49": {
                "variable": {
                    "value": "zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n_zm_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_zm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "i + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "demo_nxm.py": {
        "torch": {
            "SummaryWriter_36": {
                "variable": {
                    "value": "writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "log_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(args.demo_path, args.demo_name + '/log')",
                            "Call"
                        ]
                    ]
                }
            },
            "device_38": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_41": {
                "variable": {
                    "value": "G",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "G",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Generator().to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(G)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_48": {
                "variable": {
                    "value": "za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n_za_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_za",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_49": {
                "variable": {
                    "value": "zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n_zm_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_zm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_42": {
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "demo_random.py": {
        "torch": {
            "SummaryWriter_35": {
                "variable": {
                    "value": "writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "log_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(args.demo_path, args.demo_name + '/log')",
                            "Call"
                        ]
                    ]
                }
            },
            "device_37": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_40": {
                "variable": {
                    "value": "G",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "G",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Generator().to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(G)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_46": {
                "variable": {
                    "value": "za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_za",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_47": {
                "variable": {
                    "value": "zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_zm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_41": {
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/dataset.py": {
        "torch": {}
    },
    "evaluation/fid.py": {
        "torch": {
            "DataLoader_54": {
                "variable": {
                    "value": "dl",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ds",
                    "type": "Call",
                    "possible_values": [
                        [
                            "VideoDataset(files, length, transform)",
                            "Call"
                        ],
                        [
                            "FrameDataset(files, length, transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(files)",
                            "Call"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "cpu_count()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "pred_arr",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(files)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "dims",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataParallel_180": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "resnet101(sample_duration=16).cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool3d_68": {
                "variable": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "Call",
                    "possible_values": [
                        [
                            "model(batch)",
                            "Call"
                        ],
                        [
                            "adaptive_avg_pool3d(pred, output_size=(1, 1, 1))",
                            "Call"
                        ],
                        [
                            "pred.squeeze(4).squeeze(3).squeeze(2)",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "no_grad_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_181": {
                "f": {
                    "value": "resnext-101-kinetics.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/models/resnext.py": {
        "torch": {
            "avg_pool3d_20": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Tensor_21": {
                "variable": {
                    "value": "zero_pads",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_14": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_38": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_39": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv3d_40": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "cardinality",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_49": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv3d_50": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "mid_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cardinality * int(planes / 32)",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_53": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_95": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_98": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_100": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool3d_115": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(last_duration, last_size, last_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_116": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "cardinality * 32 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "400",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_27": {
                "tensors": {
                    "value": "[out.data, zero_pads]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_149": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_132": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_133": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_140": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/precalc_stats.py": {
        "torch": {
            "DataParallel_14": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "resnet101(sample_duration=16).cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_15": {
                "f": {
                    "value": "resnext-101-kinetics.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "evaluation/transforms_vid.py": {
        "torch": {
            "zeros_23": {
                "variable": {
                    "value": "th_clip",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[3, len(clip), int(h), int(w)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "from_numpy_51": {
                "variable": {
                    "value": "img_convert",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.array(img, copy=False)",
                            "Call"
                        ],
                        [
                            "np.array(img, copy=False)",
                            "Call"
                        ],
                        [
                            "clip",
                            "Name"
                        ]
                    ]
                }
            },
            "permute_51": {
                "variable": {
                    "value": "img_convert",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_28": {
                "variable": {
                    "value": "img_convert",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.array(img, copy=False)",
                            "Call"
                        ],
                        [
                            "np.array(img, copy=False)",
                            "Call"
                        ],
                        [
                            "clip",
                            "Name"
                        ]
                    ]
                }
            },
            "permute_28": {
                "variable": {
                    "value": "img_convert",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "generate_videos.py": {
        "torch": {
            "device_24": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_27": {
                "variable": {
                    "value": "G",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "G",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Generator().to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(G)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_28": {
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randn_39": {
                "variable": {
                    "value": "za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "min(batch_size, args.n - epoch * batch_size)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "args.d_za",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_40": {
                "variable": {
                    "value": "zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "min(batch_size, args.n - epoch * batch_size)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "args.d_zm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/networks.py": {
        "torch": {
            "randn_135": {
                "variable": {
                    "value": "za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_136": {
                "variable": {
                    "value": "zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.to_rgb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(ch * 2, 3, (1, 3, 3), 1, (0, 1, 1))",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_41": {
                "variable": {
                    "value": "zv",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[za.repeat(1, 1, zm.size(2), 1, 1), zm]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.Conv3d(3, ch, (1, 4, 4), (1, 2, 2), (0, 1, 1)))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_103": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.Conv2d(3, ch, 4, 2, 1))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_23": {
                "in_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Tanh_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_61": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_63": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_66": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_68": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_71": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_73": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_76": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_78": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_81": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_105": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_108": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_111": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_114": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_60": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_62": {
                "in_channels": {
                    "value": "ch",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ch",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(4, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_65": {
                "in_channels": {
                    "value": "ch",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_67": {
                "in_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_70": {
                "in_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_72": {
                "in_channels": {
                    "value": "ch * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_75": {
                "in_channels": {
                    "value": "ch * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_77": {
                "in_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_80": {
                "in_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_82": {
                "in_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "in_channels": {
                    "value": "ch",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "in_channels": {
                    "value": "ch * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_113": {
                "in_channels": {
                    "value": "ch * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "in_channels": {
                    "value": "ch * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/ops.py": {
        "torch": {
            "randn_137": {
                "variable": {
                    "value": "x_v",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_138": {
                "variable": {
                    "value": "x_s",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_139": {
                "variable": {
                    "value": "x_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_14": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_15": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_23": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.q_conv(x).permute(0, 3, 4, 1, 2).contiguous().view(b * h * w, -1, t).transpose(2, 1)",
                            "Call"
                        ],
                        [
                            "self.q_conv(x).transpose(2, 1).contiguous().view(b * t, -1, h * w).transpose(2, 1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "key",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.k_conv(x).permute(0, 3, 4, 1, 2).contiguous().view(b * h * w, -1, t)",
                            "Call"
                        ],
                        [
                            "self.k_conv(x).transpose(2, 1).contiguous().view(b * t, -1, h * w)",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_26": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.softmax(scores)",
                            "Call"
                        ],
                        [
                            "self.softmax(scores)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "value",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.v_conv(x).permute(0, 3, 4, 1, 2).contiguous().view(b * h * w, -1, t).transpose(2, 1)",
                            "Call"
                        ],
                        [
                            "self.v_conv(x).transpose(2, 1).contiguous().view(b * t, -1, h * w).transpose(2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_41": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_42": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_50": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.q_conv(x).permute(0, 3, 4, 1, 2).contiguous().view(b * h * w, -1, t).transpose(2, 1)",
                            "Call"
                        ],
                        [
                            "self.q_conv(x).transpose(2, 1).contiguous().view(b * t, -1, h * w).transpose(2, 1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "key",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.k_conv(x).permute(0, 3, 4, 1, 2).contiguous().view(b * h * w, -1, t)",
                            "Call"
                        ],
                        [
                            "self.k_conv(x).transpose(2, 1).contiguous().view(b * t, -1, h * w)",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_53": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.softmax(scores)",
                            "Call"
                        ],
                        [
                            "self.softmax(scores)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "value",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.v_conv(x).permute(0, 3, 4, 1, 2).contiguous().view(b * h * w, -1, t).transpose(2, 1)",
                            "Call"
                        ],
                        [
                            "self.v_conv(x).transpose(2, 1).contiguous().view(b * t, -1, h * w).transpose(2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_109": {
                "variable": {
                    "value": "self.conv_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.ConvTranspose3d(in_cs, out_c, (1, k_s, k_s), (1, s_s, s_s), (0, p_s, p_s)))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_115": {
                "variable": {
                    "value": "self.conv_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.ConvTranspose3d(in_ct, out_c, (k_t, 1, 1), (s_t, 1, 1), (p_t, 0, 0)))",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_130": {
                "variable": {
                    "value": "h_v",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h_s_r, h_v]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "variable": {
                    "value": "self.conv_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.ConvTranspose3d(in_cv, out_c, (k_t, k_s, k_s), (s_t, s_s, s_s), (p_t, p_s, p_s)))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv3d_11": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_c // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_12": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_c // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_13": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_14": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_38": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_c // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_39": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_c // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_40": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_87": {
                "variable": {
                    "value": "self.conv_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.ConvTranspose3d(in_cv, out_c, (1, k_s, k_s), (1, s_s, s_s), (0, p_s, p_s)))",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm3d_111": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_112": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_117": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_118": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_82": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_83": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_97": {
                "variable": {
                    "value": "self.conv_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "spectralnorm(nn.ConvTranspose3d(in_cv, out_c, (k_t, 1, 1), (s_t, 1, 1), (p_t, 0, 0)))",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose3d_110": {
                "in_channels": {
                    "value": "in_cs",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k_s, k_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, s_s, s_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, p_s, p_s)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_116": {
                "in_channels": {
                    "value": "in_ct",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k_t, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(s_t, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p_t, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_81": {
                "in_channels": {
                    "value": "in_cv",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k_t, k_s, k_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(s_t, s_s, s_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p_t, p_s, p_s)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm3d_89": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_90": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_92": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_93": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_88": {
                "in_channels": {
                    "value": "in_cv",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k_s, k_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, s_s, s_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, p_s, p_s)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_91": {
                "in_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k_t, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(s_t, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p_t, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm3d_99": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_102": {
                "num_features": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_98": {
                "in_channels": {
                    "value": "in_cv",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k_t, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(s_t, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p_t, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_101": {
                "in_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k_s, k_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, s_s, s_s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, p_s, p_s)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "SummaryWriter_31": {
                "variable": {
                    "value": "writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "log_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(args.save_path, args.exp_name + '/log')",
                            "Call"
                        ]
                    ]
                }
            },
            "device_34": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_40": {
                "variable": {
                    "value": "G",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "G",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Generator(args.d_za, args.d_zm, args.ch_g, args.g_mode, args.use_attention).to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(G)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_41": {
                "variable": {
                    "value": "VD",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "VD",
                    "type": "Call",
                    "possible_values": [
                        [
                            "VideoDiscriminator(args.ch_d).to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(VD)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_42": {
                "variable": {
                    "value": "ID",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "ID",
                    "type": "Call",
                    "possible_values": [
                        [
                            "ImageDiscriminator(args.ch_d).to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(ID)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_45": {
                "variable": {
                    "value": "optimizer_G",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "G.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.5, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_46": {
                "variable": {
                    "value": "optimizer_VD",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "VD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.5, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_47": {
                "variable": {
                    "value": "optimizer_ID",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "ID.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.5, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_50": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_62": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "UVA(args.data_path, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_72": {
                "variable": {
                    "value": "fixed_za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n_za_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_za",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_73": {
                "variable": {
                    "value": "fixed_zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "args.n_zm_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "args.d_zm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_21": {
                "seed": {
                    "value": "args.random_seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_83": {
                "obj": {
                    "value": "G.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(model_path, 'G_%d.pth' % epoch)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_84": {
                "obj": {
                    "value": "VD.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(model_path, 'VD_%d.pth' % epoch)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_85": {
                "obj": {
                    "value": "ID.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(model_path, 'ID_%d.pth' % epoch)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "trainer.py": {
        "torch": {
            "randn_25": {
                "variable": {
                    "value": "za",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "args.d_za",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_26": {
                "variable": {
                    "value": "zm",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "args.d_zm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_33": {
                "variable": {
                    "value": "y_real",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "VD_real.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "y_fake",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "VD_fake.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "transforms_vid.py": {
        "torch": {
            "zeros_23": {
                "variable": {
                    "value": "th_clip",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[3, len(clip), int(h), int(w)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "from_numpy_28": {
                "variable": {
                    "value": "img_convert",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.array(img, copy=False)",
                            "Call"
                        ],
                        [
                            "clip",
                            "Name"
                        ]
                    ]
                }
            },
            "permute_28": {
                "variable": {
                    "value": "img_convert",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}