{
    "tests/test_helpers.py": {
        "sklearn": {
            "shuffle_21": {
                "variable": {
                    "value": "(x, y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "normal_18": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[512, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "mean": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stddev": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "uniform_31": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1024]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "uniform_39": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1024]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normal_32": {
                "shape": {
                    "value": "[1, 1024]",
                    "type": "List",
                    "possible_values": []
                },
                "mean": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normal_40": {
                "shape": {
                    "value": "[1, 1024]",
                    "type": "List",
                    "possible_values": []
                },
                "mean": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normal_19": {
                "shape": {
                    "value": "[512, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "mean": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "stddev": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "optimizers/ClassicMomentumOptimizer.py": {
        "tensorflow": {
            "assign_69": {
                "ref": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ]
                    ]
                },
                "value": {
                    "value": "np.array(x.val).reshape(var.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "optimizers/RGDOptimizer.py": {
        "tensorflow": {
            "reshape_89": {
                "variable": {
                    "value": "dx_identity",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.identity(dx)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_90": {
                "variable": {
                    "value": "dx_numpy",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "dx_identity",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(tf.identity(dx), [-1])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_107": {
                "variable": {
                    "value": "dv_identity",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.identity(dv)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_108": {
                "variable": {
                    "value": "dv_numpy",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "dv_identity",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(tf.identity(dv), [-1])",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_100": {
                "ref": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ]
                    ]
                },
                "value": {
                    "value": "np.array(x.val).reshape(var.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "assign_add_106": {
                "ref": {
                    "value": "dv",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.get_slot(var, 'd_v')",
                            "Call"
                        ]
                    ]
                },
                "value": {
                    "value": "lr * dx",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "assign_113": {
                "ref": {
                    "value": "dv",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.get_slot(var, 'd_v')",
                            "Call"
                        ]
                    ]
                },
                "value": {
                    "value": "dv * decay",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "assign_78": {
                "ref": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ]
                    ]
                },
                "value": {
                    "value": "np.array(self.var_preciserep[var.ref()].val).reshape(var.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "identity_89": {
                "input": {
                    "value": "dx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.get_slot(var, 'd_x')",
                            "Call"
                        ]
                    ]
                }
            },
            "identity_107": {
                "input": {
                    "value": "dv",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.get_slot(var, 'd_v')",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_sub_112": {
                "ref": {
                    "value": "dx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.get_slot(var, 'd_x')",
                            "Call"
                        ]
                    ]
                },
                "value": {
                    "value": "tf.reshape(new_dx, var.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "assign_123": {
                "ref": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ]
                    ]
                },
                "value": {
                    "value": "np.array(self.var_preciserep[var.ref()].val).reshape(var.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "assign_135": {
                "ref": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ],
                        [
                            "var_list",
                            "Name"
                        ]
                    ]
                },
                "value": {
                    "value": "np.array(self.var_preciserep[var.ref()].val).reshape(var.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_112": {
                "tensor": {
                    "value": "new_dx",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1 - decay) * self.hes.estimators[var.ref()].get_Hv_op(tf.transpose(dv_identity))",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "var.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_111": {
                "a": {
                    "value": "dv_identity",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(tf.identity(dv), [-1])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pyhessian/hessian.py": {
        "tensorflow": {
            "map_fn_142": {
                "variable": {
                    "value": "H_op",
                    "type": "Variable",
                    "possible_values": []
                },
                "fn": {
                    "value": "self.get_Hv_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "elems": {
                    "value": "tf.eye(self.P, self.P)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "split_161": {
                "variable": {
                    "value": "ex_X",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "self.batch_size_G",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "split_162": {
                "variable": {
                    "value": "ex_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "self.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "self.batch_size_G",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_170": {
                "variable": {
                    "value": "ex_grads",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.flatten(tf.gradients(ex_cost[ex], ex_params[ex])) for ex in range(self.batch_size_G)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "concat_108": {
                "values": {
                    "value": "flattened_params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[tf.reshape(_params, [-1]) for _params in params]",
                            "ListComp"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_107": {
                "tensor": {
                    "value": "_params",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "GradientTape_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "transpose_126": {
                "variable": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.stop_gradient(v)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensordot_127": {
                "variable": {
                    "value": "vprod",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "cost_gradient",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.flatten(tape.gradient(target=cost, sources=self.params))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.transpose(tf.stop_gradient(v))",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_142": {
                "num_rows": {
                    "value": "self.P",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_columns": {
                    "value": "self.P",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_173": {
                "a": {
                    "value": "tf.transpose(ex_grads)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "ex_grads",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.stack([self.flatten(tf.gradients(ex_cost[ex], ex_params[ex])) for ex in range(self.batch_size_G)])",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "identity_157": {
                "input": {
                    "value": "_params",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "transpose_173": {
                "a": {
                    "value": "ex_grads",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.stack([self.flatten(tf.gradients(ex_cost[ex], ex_params[ex])) for ex in range(self.batch_size_G)])",
                            "Call"
                        ]
                    ]
                }
            },
            "stop_gradient_126": {
                "input": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.transpose(tf.stop_gradient(v))",
                            "Call"
                        ]
                    ]
                }
            },
            "gradients_170": {
                "ys": {
                    "value": "ex_cost[ex]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "xs": {
                    "value": "ex_params[ex]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "tests/optimizers_tests.py": {
        "tensorflow": {
            "Variable_24": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random.uniform([1], minval=1000, maxval=1000, seed=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "x",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_25": {
                "variable": {
                    "value": "x2",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random.uniform([1], minval=1000, maxval=1000, seed=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "x",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_40": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random.uniform([1], minval=1, maxval=2, seed=7)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "x",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_53": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random.uniform([1], minval=1, maxval=2, seed=5)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "x",
                    "type": "str",
                    "possible_values": []
                }
            },
            "main_90": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "uniform_24": {
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "uniform_25": {
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "uniform_40": {
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "maxval": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "seed": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "uniform_53": {
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "maxval": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "seed": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/preciseRep_test.py": {
        "tensorflow": {
            "main_158": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/training.py": {
        "tensorflow": {
            "MeanSquaredError_12": {
                "variable": {
                    "value": "loss_object",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Mean_51": {
                "variable": {
                    "value": "epoch_loss_avg",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CategoricalAccuracy_52": {
                "variable": {
                    "value": "epoch_accuracy",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}