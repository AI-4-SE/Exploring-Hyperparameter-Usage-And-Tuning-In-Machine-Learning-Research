{
    "scripts/AdversarialTraining.py": {
        "torch": {
            "SubsetRandomSampler_48": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "train_indices",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_63": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/BalancedLabels.npy', transformations=transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(train_indices)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_65": {
                "variable": {
                    "value": "valid_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/BalancedLabels.npy', transformations=transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "valid_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_67": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/BalancedLabels.npy', transformations=transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "test_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataParallel_85": {
                "variable": {
                    "value": "CAE",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "CAE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Model(z_dim=2048)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(CAE).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_93": {
                "variable": {
                    "value": "NN",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "NN",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "NeuralNet()",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(NN).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_108": {
                "variable": {
                    "value": "adv_optimiser",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "NN.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_110": {
                "variable": {
                    "value": "CAE_optimiser",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "CAE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_114": {
                "variable": {
                    "value": "adv_criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_216": {
                "obj": {
                    "value": "CAE.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'./models/FairBroadCAE.pth'",
                            "Constant"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_56": {
                "indices": {
                    "value": "valid_indices",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "load_87": {
                "f": {
                    "value": "./models/BroadCAE.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_95": {
                "f": {
                    "value": "./models/PretrainedNeuralNetwork.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "set_grad_enabled_184": {
                "mode": {
                    "value": "phase == 'train'",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "set_grad_enabled_151": {
                "mode": {
                    "value": "phase == 'train'",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "scripts/PretrainCAE.py": {
        "torch": {
            "SubsetRandomSampler_51": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "train_indices",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_66": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/Balanced.npy', transformations=transforms.Compose([transforms.RandomHorizontalFlip(), transforms.RandomVerticalFlip(), transforms.RandomAffine(degrees=0, shear=0.05), transforms.ColorJitter(brightness=0.03, contrast=0.05, saturation=0.03, hue=0.03), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(train_indices)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_68": {
                "variable": {
                    "value": "valid_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/Balanced.npy', transformations=transforms.Compose([transforms.RandomHorizontalFlip(), transforms.RandomVerticalFlip(), transforms.RandomAffine(degrees=0, shear=0.05), transforms.ColorJitter(brightness=0.03, contrast=0.05, saturation=0.03, hue=0.03), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "valid_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_70": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/Balanced.npy', transformations=transforms.Compose([transforms.RandomHorizontalFlip(), transforms.RandomVerticalFlip(), transforms.RandomAffine(degrees=0, shear=0.05), transforms.ColorJitter(brightness=0.03, contrast=0.05, saturation=0.03, hue=0.03), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "test_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataParallel_90": {
                "variable": {
                    "value": "CAE",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "CAE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Model(z_dim=latent_dim)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(CAE).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_96": {
                "variable": {
                    "value": "optimiser",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "CAE.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MSELoss_114": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_59": {
                "indices": {
                    "value": "valid_indices",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "set_grad_enabled_134": {
                "mode": {
                    "value": "phase == 'train'",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "save_162": {
                "obj": {
                    "value": "CAE.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'./models/BroadCAE.pth'",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "scripts/PretrainNeuralNetwork.py": {
        "torch": {
            "DataParallel_29": {
                "variable": {
                    "value": "NN",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "NN",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "NeuralNet()",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(NN).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_51": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "train_indices",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_66": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/BalancedLabels.npy', transformations=transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1000",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(train_indices)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_68": {
                "variable": {
                    "value": "valid_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/BalancedLabels.npy', transformations=transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1000",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "valid_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_70": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "CellDataset('./data/BalancedData.npy', './data/BalancedLabels.npy', transformations=transforms.ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "b_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1000",
                            "Constant"
                        ]
                    ]
                },
                "sampler": {
                    "value": "test_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataParallel_90": {
                "variable": {
                    "value": "CAE",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "CAE",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Model(z_dim=latent_dim)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(CAE).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "SGD_100": {
                "variable": {
                    "value": "optimiser",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "NN.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_118": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_59": {
                "indices": {
                    "value": "valid_indices",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "load_92": {
                "f": {
                    "value": "./models/BroadCAE.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "set_grad_enabled_142": {
                "mode": {
                    "value": "phase == 'train'",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "save_167": {
                "obj": {
                    "value": "NN.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'./models/PretrainedNeuralNework.pth'",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "scripts/architectures.py": {
        "torch": {}
    },
    "scripts/utils.py": {
        "torch": {}
    }
}