{
    "colab scripts/ses2seqattn_filtered_colab.py": {
        "sklearn": {
            "train_test_split_71": {
                "variable": {
                    "value": "(x_tr, x_validation, y_tr, y_validation)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "df['Function']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "df['Comments']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "Input_243": {
                "variable": {
                    "value": "encoder_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len_code,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "LSTM_248": {
                "variable": {
                    "value": "encoder_lstm1",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_252": {
                "variable": {
                    "value": "encoder_lstm2",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_256": {
                "variable": {
                    "value": "encoder_lstm3",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Input_260": {
                "variable": {
                    "value": "decoder_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Embedding_261": {
                "variable": {
                    "value": "dec_emb_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "input_dim": {
                    "value": "y_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(y_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_265": {
                "variable": {
                    "value": "decoder_lstm",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "TimeDistributed_278": {
                "variable": {
                    "value": "decoder_dense",
                    "type": "variable",
                    "possible_values": []
                },
                "layer": {
                    "value": "Dense(y_voc_size, activation='softmax')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Model_282": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[encoder_inputs, decoder_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "decoder_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_dense(decoder_concat_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "EarlyStopping_287": {
                "variable": {
                    "value": "es",
                    "type": "variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Model_298": {
                "variable": {
                    "value": "encoder_model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "encoder_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(max_len_code,))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "[encoder_outputs, state_h, state_c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_303": {
                "variable": {
                    "value": "decoder_state_input_h",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_304": {
                "variable": {
                    "value": "decoder_state_input_c",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_305": {
                "variable": {
                    "value": "decoder_hidden_state_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len_code, latent_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_324": {
                "variable": {
                    "value": "decoder_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[decoder_inputs] + [decoder_hidden_state_input, decoder_state_input_h, decoder_state_input_c]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "[decoder_outputs2] + [state_h2, state_c2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clear_session_239": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rnn_218": {
                "variable": {
                    "value": "(last_out, e_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "step_function": {
                    "value": "energy_step",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "decoder_out_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_states": {
                    "value": "[fake_state_e]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rnn_223": {
                "variable": {
                    "value": "(last_out, c_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "step_function": {
                    "value": "context_step",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "e_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_states": {
                    "value": "[fake_state_c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Embedding_244": {
                "input_dim": {
                    "value": "x_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(x_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Concatenate_274": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "concat_layer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_278": {
                "units": {
                    "value": "y_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(y_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_317": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "concat",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reshape_160": {
                "variable": {
                    "value": "reshaped_enc_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_out_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_hidden)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_162": {
                "variable": {
                    "value": "W_a_dot_s",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "K.dot(reshaped_enc_outputs, self.W_a)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_seq_len, en_hidden)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "expand_dims_168": {
                "variable": {
                    "value": "U_a_dot_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.dot(inputs, self.U_a)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_175": {
                "variable": {
                    "value": "reshaped_Ws_plus_Uh",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "K.reshape(W_a_dot_s + U_a_dot_h, (-1, en_hidden))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_182": {
                "variable": {
                    "value": "e_i",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "K.dot(reshaped_Ws_plus_Uh, self.V_a)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_seq_len)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "softmax_185": {
                "variable": {
                    "value": "e_i",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "e_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.reshape(K.dot(reshaped_Ws_plus_Uh, self.V_a), (-1, en_seq_len))",
                            "Call"
                        ],
                        [
                            "K.softmax(e_i)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_195": {
                "variable": {
                    "value": "c_i",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "encoder_out_seq * K.expand_dims(inputs, -1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_203": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_204": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.zeros_like(inputs)",
                            "Call"
                        ],
                        [
                            "K.sum(fake_state, axis=[1, 2])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(fake_state)",
                            "Call"
                        ],
                        [
                            "K.tile(fake_state, [1, hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "expand_dims_205": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.zeros_like(inputs)",
                            "Call"
                        ],
                        [
                            "K.sum(fake_state, axis=[1, 2])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(fake_state)",
                            "Call"
                        ],
                        [
                            "K.tile(fake_state, [1, hidden_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "tile_207": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.zeros_like(inputs)",
                            "Call"
                        ],
                        [
                            "K.sum(fake_state, axis=[1, 2])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(fake_state)",
                            "Call"
                        ],
                        [
                            "K.tile(fake_state, [1, hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "TensorShape_232": {
                "dims": {
                    "value": "(input_shape[1][0], input_shape[1][1], input_shape[1][2])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_234": {
                "dims": {
                    "value": "(input_shape[1][0], input_shape[1][1], input_shape[0][1])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_118": {
                "dims": {
                    "value": "(input_shape[0][2], input_shape[0][2])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_123": {
                "dims": {
                    "value": "(input_shape[1][2], input_shape[0][2])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_128": {
                "dims": {
                    "value": "(input_shape[0][2], 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dot_163": {
                "a": {
                    "value": "reshaped_enc_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.reshape(encoder_out_seq, (-1, en_hidden))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.W_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dot_169": {
                "a": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.U_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_176": {
                "tensor": {
                    "value": "W_a_dot_s + U_a_dot_h",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_hidden)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dot_182": {
                "a": {
                    "value": "reshaped_Ws_plus_Uh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.tanh(K.reshape(W_a_dot_s + U_a_dot_h, (-1, en_hidden)))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.V_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_195": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "colab scripts/ses2seqattn_tokenized_colab.py": {
        "sklearn": {
            "train_test_split_70": {
                "variable": {
                    "value": "(x_tr, x_validation, y_tr, y_validation)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "df['Function']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "df['Comments']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "Input_242": {
                "variable": {
                    "value": "encoder_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len_code,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "LSTM_247": {
                "variable": {
                    "value": "encoder_lstm1",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_251": {
                "variable": {
                    "value": "encoder_lstm2",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_255": {
                "variable": {
                    "value": "encoder_lstm3",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Input_259": {
                "variable": {
                    "value": "decoder_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Embedding_260": {
                "variable": {
                    "value": "dec_emb_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "input_dim": {
                    "value": "y_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(y_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_264": {
                "variable": {
                    "value": "decoder_lstm",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "TimeDistributed_277": {
                "variable": {
                    "value": "decoder_dense",
                    "type": "variable",
                    "possible_values": []
                },
                "layer": {
                    "value": "Dense(y_voc_size, activation='softmax')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Model_281": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[encoder_inputs, decoder_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "decoder_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_dense(decoder_concat_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "EarlyStopping_286": {
                "variable": {
                    "value": "es",
                    "type": "variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Model_297": {
                "variable": {
                    "value": "encoder_model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "encoder_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(max_len_code,))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "[encoder_outputs, state_h, state_c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_302": {
                "variable": {
                    "value": "decoder_state_input_h",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_303": {
                "variable": {
                    "value": "decoder_state_input_c",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_304": {
                "variable": {
                    "value": "decoder_hidden_state_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len_code, latent_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_323": {
                "variable": {
                    "value": "decoder_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[decoder_inputs] + [decoder_hidden_state_input, decoder_state_input_h, decoder_state_input_c]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "[decoder_outputs2] + [state_h2, state_c2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Embedding_243": {
                "input_dim": {
                    "value": "x_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(x_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Concatenate_273": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "concat_layer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_277": {
                "units": {
                    "value": "y_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(y_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_316": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "concat",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "models/seq2seqattn.py": {
        "sklearn": {
            "train_test_split_40": {
                "variable": {
                    "value": "(x_tr, x_validation, y_tr, y_validation)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "df['Function']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "df['Comments']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "Input_71": {
                "variable": {
                    "value": "encoder_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len_text,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "LSTM_75": {
                "variable": {
                    "value": "encoder_lstm_1",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_79": {
                "variable": {
                    "value": "encoder_lstm_2",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_83": {
                "variable": {
                    "value": "encoder_lstm_3",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Input_87": {
                "variable": {
                    "value": "decoder_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Embedding_88": {
                "variable": {
                    "value": "decoder_embedding_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "input_dim": {
                    "value": "y_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(y_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_92": {
                "variable": {
                    "value": "decoder_lstm",
                    "type": "variable",
                    "possible_values": []
                },
                "units": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "return_state": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "TimeDistributed_105": {
                "variable": {
                    "value": "decoder_dense",
                    "type": "variable",
                    "possible_values": []
                },
                "layer": {
                    "value": "Dense(y_voc_size, activation='softmax')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Model_109": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[encoder_inputs, decoder_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "decoder_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "decoder_dense(decoder_concat_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "EarlyStopping_115": {
                "variable": {
                    "value": "es",
                    "type": "variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "str",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Model_124": {
                "variable": {
                    "value": "encoder_model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "encoder_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(max_len_text,))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "[encoder_outputs, state_h, state_c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_128": {
                "variable": {
                    "value": "decoder_state_input_h",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_129": {
                "variable": {
                    "value": "decoder_state_input_c",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(latent_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Input_130": {
                "variable": {
                    "value": "decoder_hidden_state_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(max_len_text, latent_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_149": {
                "variable": {
                    "value": "decoder_model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[decoder_inputs] + [decoder_hidden_state_input, decoder_state_input_h, decoder_state_input_c]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "[decoder_outputs2] + [state_h2, state_c2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clear_session_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_72": {
                "input_dim": {
                    "value": "x_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(x_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "output_dim": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "500",
                            "Constant"
                        ]
                    ]
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Concatenate_101": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "concat_layer",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_105": {
                "units": {
                    "value": "y_voc_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(y_tokenizer.word_index) + 1",
                            "BinOp"
                        ]
                    ]
                },
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_142": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "name": {
                    "value": "concat",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "models/attention.py": {
        "tensorflow": {
            "rnn_118": {
                "variable": {
                    "value": "(last_out, e_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "step_function": {
                    "value": "energy_step",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "decoder_out_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_states": {
                    "value": "[fake_state_e]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rnn_123": {
                "variable": {
                    "value": "(last_out, c_outputs, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "step_function": {
                    "value": "context_step",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "e_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_states": {
                    "value": "[fake_state_c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_60": {
                "variable": {
                    "value": "reshaped_enc_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "encoder_out_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_hidden)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_62": {
                "variable": {
                    "value": "W_a_dot_s",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "K.dot(reshaped_enc_outputs, self.W_a)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_seq_len, en_hidden)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "expand_dims_68": {
                "variable": {
                    "value": "U_a_dot_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.dot(inputs, self.U_a)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_75": {
                "variable": {
                    "value": "reshaped_Ws_plus_Uh",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "K.reshape(W_a_dot_s + U_a_dot_h, (-1, en_hidden))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_82": {
                "variable": {
                    "value": "e_i",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "K.dot(reshaped_Ws_plus_Uh, self.V_a)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_seq_len)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "softmax_85": {
                "variable": {
                    "value": "e_i",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "e_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.reshape(K.dot(reshaped_Ws_plus_Uh, self.V_a), (-1, en_seq_len))",
                            "Call"
                        ],
                        [
                            "K.softmax(e_i)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_95": {
                "variable": {
                    "value": "c_i",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "encoder_out_seq * K.expand_dims(inputs, -1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_103": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_104": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.zeros_like(inputs)",
                            "Call"
                        ],
                        [
                            "K.sum(fake_state, axis=[1, 2])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(fake_state)",
                            "Call"
                        ],
                        [
                            "K.tile(fake_state, [1, hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "expand_dims_105": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.zeros_like(inputs)",
                            "Call"
                        ],
                        [
                            "K.sum(fake_state, axis=[1, 2])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(fake_state)",
                            "Call"
                        ],
                        [
                            "K.tile(fake_state, [1, hidden_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "tile_107": {
                "variable": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.zeros_like(inputs)",
                            "Call"
                        ],
                        [
                            "K.sum(fake_state, axis=[1, 2])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(fake_state)",
                            "Call"
                        ],
                        [
                            "K.tile(fake_state, [1, hidden_size])",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, hidden_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "TensorShape_132": {
                "dims": {
                    "value": "(input_shape[1][0], input_shape[1][1], input_shape[1][2])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_134": {
                "dims": {
                    "value": "(input_shape[1][0], input_shape[1][1], input_shape[0][1])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_18": {
                "dims": {
                    "value": "(input_shape[0][2], input_shape[0][2])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_23": {
                "dims": {
                    "value": "(input_shape[1][2], input_shape[0][2])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_28": {
                "dims": {
                    "value": "(input_shape[0][2], 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dot_63": {
                "a": {
                    "value": "reshaped_enc_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.reshape(encoder_out_seq, (-1, en_hidden))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.W_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dot_69": {
                "a": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.U_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_76": {
                "tensor": {
                    "value": "W_a_dot_s + U_a_dot_h",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, en_hidden)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dot_82": {
                "a": {
                    "value": "reshaped_Ws_plus_Uh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.tanh(K.reshape(W_a_dot_s + U_a_dot_h, (-1, en_hidden)))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.V_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_95": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    }
}