{
    "gan_cifar10.py": {
        "torch": {
            "is_available_136": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_236": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "1234",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_all_15": {
                "seed": {
                    "value": "1234",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_150": {
                "variable": {
                    "value": "optimizerD",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "float(sys.argv[2])",
                            "Call"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.5, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_151": {
                "variable": {
                    "value": "optimizerG",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "netG.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "float(sys.argv[2])",
                            "Call"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.5, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_176": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_209": {
                "variable": {
                    "value": "fixed_noise_128",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_304": {
                "variable": {
                    "value": "noise",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_92": {
                "variable": {
                    "value": "deconv_out",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "DIM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_98": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_113": {
                "variable": {
                    "value": "main",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, DIM, 3, 2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_123": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4 * 4 * 4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_258": {
                "variable": {
                    "value": "real_data",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[preprocess(item) for item in _data]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "randn_271": {
                "variable": {
                    "value": "noise",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "preprocess",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(128, 4 * 4 * 4 * DIM)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "variable": {
                    "value": "block1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(4 * DIM, 2 * DIM, 2, stride=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_77": {
                "variable": {
                    "value": "block2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(2 * DIM, DIM, 2, stride=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "preprocess",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(128, 4 * 4 * 4 * DIM)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_85": {
                "variable": {
                    "value": "block1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(4 * DIM, 2 * DIM, 2, stride=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "block2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(2 * DIM, DIM, 2, stride=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_212": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_336": {
                "obj": {
                    "value": "netG.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'results_2/' + str(name) + '/gen_' + str(iteration)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_337": {
                "obj": {
                    "value": "netD.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'results_2/' + str(name) + '/dis_' + str(iteration)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_114": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "DIM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "in_channels": {
                    "value": "DIM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "in_channels": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_192": {
                "outputs": {
                    "value": "disc_interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "netD(interpolates)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "alpha * real_data + (1 - alpha) * fake_data",
                            "BinOp"
                        ],
                        [
                            "interpolates.cuda(gpu)",
                            "Call"
                        ],
                        [
                            "autograd.Variable(interpolates, requires_grad=True)",
                            "Call"
                        ]
                    ]
                },
                "grad_outputs": {
                    "value": "torch.ones(disc_interpolates.size()).cuda(gpu)",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "only_inputs": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_197": {
                "outputs": {
                    "value": "disc_interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "netD(interpolates)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "alpha * real_data + (1 - alpha) * fake_data",
                            "BinOp"
                        ],
                        [
                            "interpolates.cuda(gpu)",
                            "Call"
                        ],
                        [
                            "autograd.Variable(interpolates, requires_grad=True)",
                            "Call"
                        ]
                    ]
                },
                "grad_outputs": {
                    "value": "torch.ones(disc_interpolates.size())",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "only_inputs": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "no_grad_274": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_70": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4 * 4 * 4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_71": {
                "num_features": {
                    "value": "4 * 4 * 4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_72": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_74": {
                "in_channels": {
                    "value": "4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_75": {
                "num_features": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_78": {
                "in_channels": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "DIM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_79": {
                "num_features": {
                    "value": "DIM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_80": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4 * 4 * 4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_86": {
                "in_channels": {
                    "value": "4 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_87": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_89": {
                "in_channels": {
                    "value": "2 * DIM",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "DIM",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_90": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ones_194": {
                "*size": {
                    "value": "disc_interpolates.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_199": {
                "*size": {
                    "value": "disc_interpolates.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "gan_pytorch.py": {
        "torch": {
            "BCEWithLogitsLoss_297": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_7": {
                "seed": {
                    "value": "1234",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_all_8": {
                "seed": {
                    "value": "1234",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_151": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_257": {
                "variable": {
                    "value": "dis_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "dis.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_rates[args.learning_rate_idx]",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.5, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_260": {
                "variable": {
                    "value": "gen_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "gen.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_rates[args.learning_rate_idx]",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.5, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randn_358": {
                "variable": {
                    "value": "noise",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "main",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(z_dim, dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_93": {
                "variable": {
                    "value": "main",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(2, dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_299": {
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                }
            },
            "zeros_300": {
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                }
            },
            "randn_313": {
                "variable": {
                    "value": "noise",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                },
                "out": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                }
            },
            "stack_376": {
                "variable": {
                    "value": "gen_grad_gen",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.autograd.grad(gen_param_grad[p], gen_param, create_graph=True, retain_graph=True)[0].view(-1) for p in range(len(gen_param_grad))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_380": {
                "variable": {
                    "value": "gen_grad_dis",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.autograd.grad(gen_param_grad[p], dis_param, create_graph=True, retain_graph=True)[0] for p in range(len(gen_param_grad))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_386": {
                "variable": {
                    "value": "joc_gen",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(gen_grad_dis, gen_grad_gen)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_387": {
                "variable": {
                    "value": "joc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(joc_gen, joc_dis)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_406": {
                "variable": {
                    "value": "noise",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                }
            },
            "grad_163": {
                "outputs": {
                    "value": "disc_interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "netD(interpolates)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "alpha * real_data + (1 - alpha) * fake_data",
                            "BinOp"
                        ],
                        [
                            "interpolates.cuda()",
                            "Call"
                        ],
                        [
                            "autograd.Variable(interpolates, requires_grad=True)",
                            "Call"
                        ]
                    ]
                },
                "grad_outputs": {
                    "value": "torch.ones(disc_interpolates.size()).cuda() if use_cuda else torch.ones(disc_interpolates.size())",
                    "type": "IfExp",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "only_inputs": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_271": {
                "variable": {
                    "value": "dis_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "dis.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_rates[args.learning_rate_idx]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "SGD_272": {
                "variable": {
                    "value": "gen_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "gen.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_rates[args.learning_rate_idx]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "stack_347": {
                "variable": {
                    "value": "dis_grad_dis",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.autograd.grad(dis_param_grad[p], dis_param, create_graph=True, retain_graph=True)[0].view(-1) for p in range(len(dis_param_grad))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_351": {
                "variable": {
                    "value": "dis_grad_gen",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.autograd.grad(dis_param_grad[p], gen_param, create_graph=True, retain_graph=True)[0].view(-1) for p in range(len(dis_param_grad))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_355": {
                "variable": {
                    "value": "joc_dis",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(dis_grad_dis, dis_grad_gen)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_359": {
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                }
            },
            "zeros_360": {
                "*size": {
                    "value": "_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_73": {
                "in_features": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_74": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_77": {
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_78": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_95": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_96": {
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_97": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_99": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_282": {
                "variable": {
                    "value": "gen_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "gen.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_rates[args.learning_rate_idx]",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.5, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_165": {
                "*size": {
                    "value": "disc_interpolates.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_166": {
                "*size": {
                    "value": "disc_interpolates.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "SGD_288": {
                "variable": {
                    "value": "gen_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "gen.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_rates[args.learning_rate_idx]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "grad_381": {
                "outputs": {
                    "value": "gen_param_grad[p]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "dis_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dis.parameters().next()",
                            "Call"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_377": {
                "outputs": {
                    "value": "gen_param_grad[p]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "gen_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen.parameters()",
                            "Call"
                        ],
                        [
                            "gen_param.next()",
                            "Call"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_348": {
                "outputs": {
                    "value": "dis_param_grad[p]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "dis_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dis.parameters().next()",
                            "Call"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "grad_352": {
                "outputs": {
                    "value": "dis_param_grad[p]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "gen_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen.parameters()",
                            "Call"
                        ],
                        [
                            "gen_param.next()",
                            "Call"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "inception_score.py": {
        "torch": {
            "Upsample_44": {
                "variable": {
                    "value": "up",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(299, 299)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "randn_48": {
                "variable": {
                    "value": "z_",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "N_s",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_60": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.forward(z_)",
                            "Call"
                        ],
                        [
                            "up(x)",
                            "Call"
                        ],
                        [
                            "inception_model(x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "zeros_like_63": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_65": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_148": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_150": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_68": {
                "variable": {
                    "value": "state[max_exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_88": {
                "input": {
                    "value": "max_exp_avg_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ],
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "max_exp_avg_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ],
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_like_153": {
                "variable": {
                    "value": "state[max_exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_170": {
                "input": {
                    "value": "max_exp_avg_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ],
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "max_exp_avg_sq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ],
                        [
                            "state['max_exp_avg_sq']",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    }
}