{
    "train.py": {
        "torch": {
            "tensor_126": {
                "variable": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0, 0.0, 1.0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_131": {
                "variable": {
                    "value": "ki",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[fx, 0, px], [0, fy, py], [0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "pt.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "inverse_131": {
                "variable": {
                    "value": "ki",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_136": {
                "variable": {
                    "value": "ref_k",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[tt['fx'], 0, tt['px']], [0, tt['fy'], tt['py']], [0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_149": {
                "variable": {
                    "value": "coords",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[selection % output_shape[1], selection // output_shape[1], pt.ones_like(selection)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_159": {
                "variable": {
                    "value": "scale",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[input_shape[1] - 1, input_shape[0] - 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cumprod_183": {
                "variable": {
                    "value": "cp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "roll_184": {
                "variable": {
                    "value": "cp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pt.cumprod(x, 0)",
                            "Call"
                        ],
                        [
                            "pt.roll(cp, 1, 0)",
                            "Call"
                        ]
                    ]
                },
                "shifts": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_194": {
                "variable": {
                    "value": "warp3d",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[warp3d, pt.ones_like(warp3d[:, :, :, :, :1]) * depths]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_248": {
                "variable": {
                    "value": "coords",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[coords, pt.ones_like(coords[:, :1])]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_255": {
                "variable": {
                    "value": "ki",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[feature['fx'][0], 0, feature['px'][0]], [0, feature['fy'][0], feature['py'][0]], [0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "pt.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "inverse_255": {
                "variable": {
                    "value": "ki",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "meshgrid_412": {
                "variable": {
                    "value": "(y, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[pt.arange(0, sh, dtype=pt.float) / (sh - 1) * 2 - 1, pt.arange(0, sw, dtype=pt.float) / (sw - 1) * 2 - 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_416": {
                "variable": {
                    "value": "coords",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x[:, :, None].cuda(), y[:, :, None].cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "meshgrid_421": {
                "variable": {
                    "value": "(y_v, x_v)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[pt.linspace(-rangey, rangey, sh_v), pt.linspace(-rangex, rangex, sw_v)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_425": {
                "variable": {
                    "value": "viewing",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_v[:, :, None].cuda(), y_v[:, :, None].cuda()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_430": {
                "variable": {
                    "value": "pe_view",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pt.sin(0.5 * np.pi * hinv_xy), pt.cos(0.5 * np.pi * hinv_xy)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tanh_434": {
                "variable": {
                    "value": "imgs_b",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out2.permute([3, 0, 1, 2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "SummaryWriter_608": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "runpath + args.model_dir",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_708": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "repeat_interleave_190": {
                "variable": {
                    "value": "depths",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pt.linspace(-1, 1, args.layers)",
                    "type": "Call",
                    "possible_values": []
                },
                "repeats": {
                    "value": "args.sublayers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_192": {
                "variable": {
                    "value": "depths",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "args.layers * args.sublayers",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataParallel_207": {
                "variable": {
                    "value": "self.seq_basis",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "ReluMLP(args.basis_mlp, args.basis_hidden, self.order * 4, args.lrelu_slope, out_node=args.basis_out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Tensor_219": {
                "variable": {
                    "value": "self.pos_freq_viewing",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_227": {
                "variable": {
                    "value": "big",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hinv_xy",
                    "type": "variable",
                    "possible_values": [
                        [
                            "viewing.view(1, sh_v, sw_v, 2, 1) * model.specular.pos_freq_viewing",
                            "BinOp"
                        ],
                        [
                            "hinv_xy.view(1, sh_v, sw_v, -1)",
                            "Call"
                        ],
                        [
                            "vi[..., :2, None] * self.pos_freq_viewing",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[n, sel, 1, hinv_xy.shape[-2] * hinv_xy.shape[-1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_228": {
                "variable": {
                    "value": "vi",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pt.sin(0.5 * np.pi * big), pt.cos(0.5 * np.pi * big)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tanh_231": {
                "variable": {
                    "value": "out2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.specular.seq_basis(pe_view)",
                            "Call"
                        ],
                        [
                            "self.seq_basis(vi)",
                            "Call"
                        ],
                        [
                            "pt.tanh(out2)",
                            "Call"
                        ]
                    ]
                }
            },
            "tanh_236": {
                "variable": {
                    "value": "coeff",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "coeff.view(coeff.shape[0], coeff.shape[1], coeff.shape[2], 3, -1)",
                            "Call"
                        ],
                        [
                            "pt.tanh(coeff)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_238": {
                "variable": {
                    "value": "illumination",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff * vi",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "permute_238": {
                "variable": {
                    "value": "illumination",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "[0, 3, 1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "device_count_275": {
                "variable": {
                    "value": "total_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_279": {
                "variable": {
                    "value": "mpi_c",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(shape[0], 3, shape[2], shape[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Parameter_280": {
                "variable": {
                    "value": "self.mpi_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "mpi_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pt.empty((shape[0], 3, shape[2], shape[3]), device='cuda:0').uniform_(-1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_282": {
                "variable": {
                    "value": "self.seq1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "VanillaMLP(args.mlp, args.hidden, args.pos_level, args.depth_level, args.lrelu_slope, out_node=1 + args.basis_out * 3, first_gpu=mlp_first_device)",
                    "type": "Call",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "mlp_devices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(range(mlp_first_device, total_cuda))",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_296": {
                "variable": {
                    "value": "self.pos_freq",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_297": {
                "variable": {
                    "value": "self.depth_freq",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_299": {
                "variable": {
                    "value": "self.z_coords",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "args.layers * args.sublayers",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_349": {
                "variable": {
                    "value": "vxyz",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vxy, vz]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_350": {
                "variable": {
                    "value": "bigcoords",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pt.sin(vxyz), pt.cos(vxyz)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sigmoid_359": {
                "variable": {
                    "value": "mpi_a_sig",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.mpi_a - args.sigmoid_offset",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_389": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weight * rgb * mpi_a_sig",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_471": {
                "variable": {
                    "value": "mpi_c_sig",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model.mpi_c",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_472": {
                "variable": {
                    "value": "mpi_a_sig",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "imgs_a",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_473": {
                "variable": {
                    "value": "mpi_v_tanh",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "imgs_v",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_481": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_529": {
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_561": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': mlp_params, 'lr': 0}, {'params': other_params, 'lr': 0}]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Adam_565": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_682": {
                "variable": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pt.std(model.illumination, 2) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_683": {
                "variable": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model.illumination",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_701": {
                "obj": {
                    "value": "{'epoch': epoch, 'model_state_dict': model.state_dict(), 'optimizer_state_dict': optimizer.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_158": {
                "input": {
                    "value": "Hs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "computeHomographies(sfm, feature, planes)",
                            "Call"
                        ],
                        [
                            "Hs.inverse()",
                            "Call"
                        ]
                    ]
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim1": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_177": {
                "input": {
                    "value": "pt.abs(pixel_dif1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "sum_axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1, 2, 3]",
                            "List"
                        ]
                    ]
                }
            },
            "sum_178": {
                "input": {
                    "value": "pt.abs(pixel_dif2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "sum_axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1, 2, 3]",
                            "List"
                        ]
                    ]
                }
            },
            "Tensor_253": {},
            "from_numpy_306": {
                "variable": {
                    "value": "self.rainbow_mpi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.rainbow_mpi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "grid_sample_368": {
                "variable": {
                    "value": "samples",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rainbow_3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rainbow_mpi.permute([1, 0, 2, 3])[None]",
                            "Subscript"
                        ]
                    ]
                },
                "grid": {
                    "value": "warp3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "warp[None]",
                            "Subscript"
                        ],
                        [
                            "pt.cat([warp3d, pt.ones_like(warp3d[:, :, :, :, :1]) * depths], -1)",
                            "Call"
                        ],
                        [
                            "getWarp3d(warp)",
                            "Call"
                        ],
                        [
                            "getWarp3d(warp)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_372": {
                "variable": {
                    "value": "mpi_sig",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.mpi_c",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "grid_sample_378": {
                "variable": {
                    "value": "samples",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mpi_sig3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mpi_sig.permute([1, 0, 2, 3])[None]",
                            "Subscript"
                        ]
                    ]
                },
                "grid": {
                    "value": "warp3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "warp[None]",
                            "Subscript"
                        ],
                        [
                            "pt.cat([warp3d, pt.ones_like(warp3d[:, :, :, :, :1]) * depths], -1)",
                            "Call"
                        ],
                        [
                            "getWarp3d(warp)",
                            "Call"
                        ],
                        [
                            "getWarp3d(warp)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "repeat_interleave_382": {
                "variable": {
                    "value": "cof",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cof",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out[::args.sublayers, ..., node:]",
                            "Subscript"
                        ],
                        [
                            "pt.repeat_interleave(cof, args.sublayers, 0)",
                            "Call"
                        ]
                    ]
                },
                "repeats": {
                    "value": "args.sublayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clamp_385": {
                "variable": {
                    "value": "rgb",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rgb + self.illumination",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "no_grad_439": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_449": {
                "variable": {
                    "value": "vxyz",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vxy, vz]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_450": {
                "variable": {
                    "value": "bigcoords",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pt.sin(vxyz), pt.cos(vxyz)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "mean_635": {
                "variable": {
                    "value": "mse",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(output - gt) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_177": {
                "input": {
                    "value": "pixel_dif1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "images[:, :, 1:, :] - images[:, :, :-1, :]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_178": {
                "input": {
                    "value": "pixel_dif2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "images[:, :, :, 1:] - images[:, :, :, :-1]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "norm_198": {
                "input": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ones_like_248": {
                "input": {
                    "value": "coords[:, :1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "linspace_422": {
                "start": {
                    "value": "-rangey",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "rangey",
                    "type": "variable",
                    "possible_values": []
                },
                "steps": {
                    "value": "sh_v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Constant"
                        ]
                    ]
                }
            },
            "linspace_423": {
                "start": {
                    "value": "-rangex",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "rangex",
                    "type": "variable",
                    "possible_values": []
                },
                "steps": {
                    "value": "sw_v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Constant"
                        ]
                    ]
                }
            },
            "sin_430": {
                "input": {
                    "value": "0.5 * np.pi * hinv_xy",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_430": {
                "input": {
                    "value": "0.5 * np.pi * hinv_xy",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_453": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[model.seq1(bigy) for bigy in [bigcoords[:, :int(sh / 2)], bigcoords[:, int(sh / 2):]]]",
                            "ListComp"
                        ],
                        [
                            "pt.cat(out, 1)",
                            "Call"
                        ],
                        [
                            "model.seq1(bigcoords)",
                            "Call"
                        ],
                        [
                            "out[..., node:].cpu()",
                            "Call"
                        ],
                        [
                            "evaluation(model, dataset, dataloader, args.ray, runpath + args.model_dir + suffix_str, webpath=args.eval_path, write_csv=not args.no_csv)",
                            "Call"
                        ],
                        [
                            "self.seq1(bigcoords).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_468": {
                "variable": {
                    "value": "mpi_v",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mpi_v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out.view(out.shape[0], out.shape[1], out.shape[2], 3, -1)",
                            "Call"
                        ],
                        [
                            "mpi_v.permute([0, 3, 1, 2, 4])",
                            "Call"
                        ],
                        [
                            "mpi_v[0]",
                            "Subscript"
                        ],
                        [
                            "pt.tanh(mpi_v)",
                            "Call"
                        ]
                    ]
                }
            },
            "empty_cache_598": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_680": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_194": {
                "input": {
                    "value": "warp3d[:, :, :, :, :1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_228": {
                "input": {
                    "value": "0.5 * np.pi * big",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_228": {
                "input": {
                    "value": "0.5 * np.pi * big",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_347": {
                "input": {
                    "value": "warp[:, :, :, :1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_350": {
                "input": {
                    "value": "vxyz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ],
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_350": {
                "input": {
                    "value": "vxyz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ],
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_461": {
                "input": {
                    "value": "mpi_a[0] - args.sigmoid_offset",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_640": {
                "input": {
                    "value": "totalVariation(pt.sigmoid(model.mpi_c[:, :3]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_665": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_676": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "std_682": {
                "input": {
                    "value": "model.illumination",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_like_150": {
                "input": {
                    "value": "selection",
                    "type": "variable",
                    "possible_values": [
                        [
                            "selection.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_447": {
                "input": {
                    "value": "coords.view(1, sh, sw, -1)[..., :1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_450": {
                "input": {
                    "value": "vxyz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ],
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_450": {
                "input": {
                    "value": "vxyz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ],
                        [
                            "pt.cat([vxy, vz], -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_413": {
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "sh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sfm.ref_cam['height'] + sfm.offset * 2",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "pt.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_414": {
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "sw",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sfm.ref_cam['width'] + sfm.offset * 2",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "pt.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_640": {
                "input": {
                    "value": "model.mpi_c[:, :3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_648": {
                "input": {
                    "value": "pt.abs(oy - gy)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_669": {
                "tensors": {
                    "value": "[feature['image'].cuda(), render]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_670": {
                "input": {
                    "value": "Spec['mpi_a']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "size": {
                    "value": "(int(mpi_h * 0.3), int(mpi_w * 0.3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "area",
                    "type": "str",
                    "possible_values": []
                }
            },
            "interpolate_673": {
                "input": {
                    "value": "Spec['mpi_c']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "size": {
                    "value": "(int(mpi_h * 0.3), int(mpi_w * 0.3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "area",
                    "type": "str",
                    "possible_values": []
                }
            },
            "linspace_190": {
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "args.layers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_648": {
                "input": {
                    "value": "oy - gy",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils/mlp.py": {
        "torch": {
            "LeakyReLU_18": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "lrelu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "self.seq1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*ls",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "LeakyReLU_34": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "lrelu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.seq1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*ls",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "pos_level * 2 * 2 + depth_level * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_35": {
                "in_features": {
                    "value": "in_node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_23": {
                "in_features": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "utils/mpi_utils.py": {
        "torch": {
            "meshgrid_437": {
                "variable": {
                    "value": "(y, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[pt.arange(0, size) + select_row[0], pt.arange(0, size) + select_col[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "flatten_439": {
                "variable": {
                    "value": "sel",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y * output_shape[1] + x",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_449": {
                "variable": {
                    "value": "selRow",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.random.randint(0, shape[0] - 1, int(ray / 3))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_450": {
                "variable": {
                    "value": "selCol",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.random.randint(0, shape[1] - 1, int(ray / 3))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_451": {
                "variable": {
                    "value": "sel",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3 * int(ray / 3)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "from_numpy_44": {
                "variable": {
                    "value": "self.sfm.ref_rT",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.sfm.ref_img['r']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "t_44": {
                "variable": {
                    "value": "self.sfm.ref_rT",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_45": {
                "variable": {
                    "value": "self.sfm.ref_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.sfm.ref_img['t']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_379": {
                "variable": {
                    "value": "predicted_image",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "predicted_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pt.cat(predicted_image, 2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_tensor_100": {
                "obj": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "idx.tolist()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_304": {
                "variable": {
                    "value": "feature[key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(feature[key], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_331": {
                "variable": {
                    "value": "feature[r]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(dataset.sfm.ref_rT.T, axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_332": {
                "variable": {
                    "value": "feature[t]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(dataset.sfm.ref_t, axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_336": {
                "variable": {
                    "value": "feature[r]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(pose['r'], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_337": {
                "variable": {
                    "value": "feature[t]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(pose['t'], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_367": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_326": {
                "variable": {
                    "value": "feature[r]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(pose['r'], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_327": {
                "variable": {
                    "value": "feature[t]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(pose['t'], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "arange_371": {
                "variable": {
                    "value": "selection",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "ray * i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "ray * (i + 1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_373": {
                "variable": {
                    "value": "selection",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "ray * i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "gt.shape[2] * gt.shape[3]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_437": {
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "arange_438": {
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mean_344": {
                "input": {
                    "value": "(feature['center'][0] - feature_train['center'][0]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils/utils.py": {
        "torch": {
            "DataLoader_63": {
                "variable": {
                    "value": "dataloader_train",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "sampler": {
                    "value": "sampler_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(indices_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_64": {
                "variable": {
                    "value": "dataloader_val",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "sampler": {
                    "value": "sampler_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(indices_val)",
                            "Call"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_114": {
                "variable": {
                    "value": "sampler_train",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "indices_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(filter(lambda x: x not in indices_val, indices_total))",
                            "Call"
                        ],
                        [
                            "dataset.sfm.index_split[0]",
                            "Subscript"
                        ],
                        [
                            "get_indices('train')",
                            "Call"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_115": {
                "variable": {
                    "value": "sampler_val",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "indices_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indices_total[::8]",
                            "Subscript"
                        ],
                        [
                            "dataset.sfm.index_split[1]",
                            "Subscript"
                        ],
                        [
                            "get_indices('val')",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_116": {
                "variable": {
                    "value": "dataloader_train",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "sampler": {
                    "value": "sampler_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(indices_train)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "DataLoader_117": {
                "variable": {
                    "value": "dataloader_val",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "sampler": {
                    "value": "sampler_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(indices_val)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_58": {
                "indices": {
                    "value": "val_indices",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "from_numpy_112": {
                "variable": {
                    "value": "dataset.sfm.ref_rT",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cam_matrix[:3, :3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "t_112": {
                "variable": {
                    "value": "dataset.sfm.ref_rT",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_113": {
                "variable": {
                    "value": "dataset.sfm.ref_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cam_matrix[:3, 3:4]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}