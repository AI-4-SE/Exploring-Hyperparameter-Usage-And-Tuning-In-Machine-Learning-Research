{
    "elbow.py": {
        "sklearn": {
            "PCA_49": {
                "variable": {
                    "value": "dimred",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                }
            },
            "KMeans_68": {
                "variable": {
                    "value": "kmeanModel",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K",
                            "variable"
                        ]
                    ]
                },
                "init": {
                    "value": "k-means++",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "gpc.py": {
        "sklearn": {
            "GaussianProcessClassifier_38": {
                "variable": {
                    "value": "classifier",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel": {
                    "value": "1.0 * RBF(1.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "train_test_split_40": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "features_4",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "targets_1",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RBF_38": {
                "length_scale": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "confusion_matrix_149": {
                "y_true": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_test",
                            "variable"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": [
                        [
                            "classifier.predict(X_test)",
                            "Call"
                        ]
                    ]
                }
            },
            "classification_report_148": {
                "y_true": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_test",
                            "variable"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": [
                        [
                            "classifier.predict(X_test)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pca-kmeans.py": {
        "sklearn": {
            "PCA_50": {
                "variable": {
                    "value": "dimred",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                }
            },
            "KMeans_67": {
                "variable": {
                    "value": "kmeanModel",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "init": {
                    "value": "k-means++",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}