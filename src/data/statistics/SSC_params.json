{
    "sscMetrics.py": {
        "sklearn": {
            "precision_recall_fscore_support_150": {
                "variable": {
                    "value": "(_p, _r, _, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_true[np.where(np.logical_and(nonempty_idx == 1, y_true != 255))]",
                            "Subscript"
                        ],
                        [
                            "b_true[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_true[nonempty_idx == 1]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predict[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_pred[np.where(np.logical_and(nonempty_idx == 1, y_true != 255))]",
                            "Subscript"
                        ],
                        [
                            "b_pred[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_pred[nonempty_idx == 1]",
                            "Subscript"
                        ]
                    ]
                },
                "average": {
                    "value": "binary",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_98": {
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_true[np.where(np.logical_and(nonempty_idx == 1, y_true != 255))]",
                            "Subscript"
                        ],
                        [
                            "b_true[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_true[nonempty_idx == 1]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predict[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_pred[np.where(np.logical_and(nonempty_idx == 1, y_true != 255))]",
                            "Subscript"
                        ],
                        [
                            "b_pred[idx, :]",
                            "Subscript"
                        ],
                        [
                            "y_pred[nonempty_idx == 1]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "config.py": {
        "torch": {}
    },
    "dataloaders/__init__.py": {
        "torch": {
            "DataLoader_14": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "NYUDataset(base_dirs['train'], istest=False)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_22": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "NYUDataset(base_dirs['val'], istest=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "dataloaders/dataloader.py": {
        "torch": {}
    },
    "main.py": {
        "torch": {
            "DataParallel_77": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "make_model(args.model, num_classes=12).cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ]
                    ]
                }
            },
            "SGD_95": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "filter(lambda p: p.requires_grad, net.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_96": {
                "variable": {
                    "value": "loss_func",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "config.class_weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "255",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_83": {
                "variable": {
                    "value": "cp_states",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "StepLR_122": {
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(filter(lambda p: p.requires_grad, net.parameters()), lr=args.lr, weight_decay=0.0005, momentum=0.9)",
                            "Call"
                        ]
                    ]
                },
                "step_size": {
                    "value": "args.lr_adj_n",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_adj_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "last_epoch": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "empty_cache_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_164": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'state_dict': net.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "cp_filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.checkpoint + 'cp_{}.pth.tar'.format(args.model_name)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_184": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_167": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'state_dict': net.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "cp_best_filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.checkpoint + 'cpBest_{}.pth.tar'.format(args.model_name)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "device_count_65": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/AICNet.py": {
        "torch": {
            "Conv3d_21": {
                "variable": {
                    "value": "self.conv_mx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3 * self.n",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_22": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_25": {
                "variable": {
                    "value": "self.conv_1x1xk",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_26": {
                "variable": {
                    "value": "self.conv_1xkx1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_27": {
                "variable": {
                    "value": "self.conv_kx1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_46": {
                "variable": {
                    "value": "mx_c",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_mx(x)",
                            "Call"
                        ],
                        [
                            "mx.view(_bs, 3, -1, _d, _h, _w)",
                            "Call"
                        ],
                        [
                            "self.softmax(mx)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_49": {
                "variable": {
                    "value": "mx_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "mx_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.unsqueeze(mx, dim=3)",
                            "Call"
                        ],
                        [
                            "mx_c.expand(-1, -1, -1, self.channel, -1, -1, -1)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_94": {
                "variable": {
                    "value": "self.conv_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_96": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_100": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(y_z + x, inplace=True) if self.residual else F.relu(y_z, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.basic_aic(y)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat((f0, f1, f2, f3), dim=1)",
                            "Call"
                        ],
                        [
                            "self.aspp_1(y)",
                            "Call"
                        ],
                        [
                            "self.aspp_2(y)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "self.dep_feature2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(c_in, c_out, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_126": {
                "variable": {
                    "value": "self.dep_feature3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "DownsampleBlock3d(8, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_135": {
                "variable": {
                    "value": "self.rgb_feature2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(c_in, c_out, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_141": {
                "variable": {
                    "value": "self.rgb_feature3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "DownsampleBlock3d(8, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_165": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(int(ck * 4), 128, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_193": {
                "variable": {
                    "value": "f0",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f0_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dep_feature2d(x_depth)",
                            "Call"
                        ],
                        [
                            "self.project_layer_dep(f0_d, p)",
                            "Call"
                        ],
                        [
                            "self.dep_feature3d(f0_d)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "f0_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rgb_feature2d(x_rgb)",
                            "Call"
                        ],
                        [
                            "self.project_layer_rgb(f0_r, p)",
                            "Call"
                        ],
                        [
                            "self.rgb_feature3d(f0_r)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_198": {
                "variable": {
                    "value": "f1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f1_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_1d(f0_d)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "f1_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_1r(f0_r)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_203": {
                "variable": {
                    "value": "f2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f2_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_2d(f1_d)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "f2_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_2r(f1_r)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_208": {
                "variable": {
                    "value": "f3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f3_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_3d(f2_d)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "f3_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_3r(f2_r)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_210": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(f0, f1, f2, f3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_57": {
                "variable": {
                    "value": "(mx_z, mx_y, mx_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "torch.squeeze(mx_list[i], dim=2)",
                    "type": "Call",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "y1_x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y1_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1x1xk[_idx](x)",
                            "Call"
                        ],
                        [
                            "F.relu(y1_x, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.mul(mx_x_list[_idx], y1_x)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mul_67": {
                "variable": {
                    "value": "y1_x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mx_x_list[_idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y1_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1x1xk[_idx](x)",
                            "Call"
                        ],
                        [
                            "F.relu(y1_x, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.mul(mx_x_list[_idx], y1_x)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_74": {
                "variable": {
                    "value": "y1_y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y1_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xkx1[_idx](y_x)",
                            "Call"
                        ],
                        [
                            "F.relu(y1_y, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.mul(mx_y_list[_idx], y1_y)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mul_75": {
                "variable": {
                    "value": "y1_y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mx_y_list[_idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y1_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xkx1[_idx](y_x)",
                            "Call"
                        ],
                        [
                            "F.relu(y1_y, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.mul(mx_y_list[_idx], y1_y)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_82": {
                "variable": {
                    "value": "y1_z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y1_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_kx1x1[_idx](y_y)",
                            "Call"
                        ],
                        [
                            "F.relu(y1_z, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.mul(mx_z_list[_idx], y1_z)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mul_83": {
                "variable": {
                    "value": "y1_z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mx_z_list[_idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "y1_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_kx1x1[_idx](y_y)",
                            "Call"
                        ],
                        [
                            "F.relu(y1_z, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.mul(mx_z_list[_idx], y1_z)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_86": {
                "input": {
                    "value": "y_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "y1_z if y_z is None else y_z + y1_z",
                            "IfExp"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_105": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(y_z + x, inplace=True) if self.residual else F.relu(y_z, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.basic_aic(y)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat((f0, f1, f2, f3), dim=1)",
                            "Call"
                        ],
                        [
                            "self.aspp_1(y)",
                            "Call"
                        ],
                        [
                            "self.aspp_2(y)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_136": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_166": {
                "in_channels": {
                    "value": "int(ck * 4)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_167": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_168": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_169": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_170": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "12",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_34": {
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 1, k)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 0, p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, 1, d)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_35": {
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, k, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, p, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, d, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_36": {
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "variable"
                        ],
                        [
                            "int(ck / 2)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(k, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(d, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_57": {
                "input": {
                    "value": "mx_list[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_58": {
                "input": {
                    "value": "mx_z",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_59": {
                "input": {
                    "value": "mx_y",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_60": {
                "input": {
                    "value": "mx_x",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/DDR.py": {
        "torch": {
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv_1xk",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, d)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.conv_kx1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(d, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "relu_25": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_40": {
                "variable": {
                    "value": "self.conv_1x1xk",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, k)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1, s)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 0, p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, 1, d)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_41": {
                "variable": {
                    "value": "self.conv_1xkx1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, s, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, p, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, d, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_42": {
                "variable": {
                    "value": "self.conv_kx1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(s, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(p, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(d, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_49": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "variable": {
                    "value": "self.conv_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.conv_1xk",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(0, p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, d)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.conv_kx1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(p, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(d, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_72": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_74": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_87": {
                "variable": {
                    "value": "self.conv_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_88": {
                "variable": {
                    "value": "self.conv1x1x3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1, k)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(0, 0, p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, 1, d)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_89": {
                "variable": {
                    "value": "self.conv1x3x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, k, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(0, p, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(1, d, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_90": {
                "variable": {
                    "value": "self.conv3x1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(k, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(p, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(d, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_91": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_96": {
                "variable": {
                    "value": "y0",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y0, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_99": {
                "variable": {
                    "value": "y1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv1x1x3(y0)",
                            "Call"
                        ],
                        [
                            "F.relu(y1, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_102": {
                "variable": {
                    "value": "y2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv1x3x1(y1) + y1",
                            "BinOp"
                        ],
                        [
                            "F.relu(y2, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_105": {
                "variable": {
                    "value": "y3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3x1x1(y2) + y2 + y1",
                            "BinOp"
                        ],
                        [
                            "F.relu(y3, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_116": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out - c_in",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "kernel",
                            "variable"
                        ],
                        [
                            "kernel",
                            "variable"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "stride",
                            "variable"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "k // 2 * d",
                            "BinOp"
                        ],
                        [
                            "k // 2 * d",
                            "BinOp"
                        ],
                        [
                            "k // 2 * d",
                            "BinOp"
                        ],
                        [
                            "k // 2 * d",
                            "BinOp"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool3d_117": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_121": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.conv(x), self.pool(x)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_123": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_132": {
                "variable": {
                    "value": "self.aspp0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_140": {
                "variable": {
                    "value": "self.global_avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AdaptiveAvgPool3d((1, 1, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "interpolate_151": {
                "variable": {
                    "value": "x_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.global_avg_pool(x)",
                            "Call"
                        ],
                        [
                            "F.interpolate(x_, size=x.size()[2:], mode='trilinear', align_corners=True)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "x.size()[2:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mode": {
                    "value": "trilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_153": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x0, x1, x2, x3, x_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_27": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_51": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_76": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_109": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_1x1xk(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xkx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1x1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_in(x)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_1xk(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_kx1(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv_out(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "self.conv_out(y3)",
                            "Call"
                        ],
                        [
                            "F.relu(y + x, inplace=True) if self.residual else F.relu(y, inplace=True)",
                            "IfExp"
                        ],
                        [
                            "torch.cat([self.conv(x), self.pool(x)], 1)",
                            "Call"
                        ],
                        [
                            "F.relu(y, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool3d_140": {
                "output_size": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_141": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "models/DDRNet.py": {
        "torch": {
            "Sequential_25": {
                "variable": {
                    "value": "self.dep_feature2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(c_in, c_out, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.dep_feature3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "DownsampleBlock3d(8, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.rgb_feature2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(c_in, c_out, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_47": {
                "variable": {
                    "value": "self.rgb_feature3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "DownsampleBlock3d(8, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(320, 128, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_100": {
                "variable": {
                    "value": "f0",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x0_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dep_feature2d(x_depth)",
                            "Call"
                        ],
                        [
                            "self.project_layer_dep(x0_depth, p)",
                            "Call"
                        ],
                        [
                            "self.dep_feature3d(x0_depth)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "x0_rgb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rgb_feature2d(x_rgb)",
                            "Call"
                        ],
                        [
                            "self.project_layer_rgb(x0_rgb, p)",
                            "Call"
                        ],
                        [
                            "self.rgb_feature3d(x0_rgb)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_105": {
                "variable": {
                    "value": "f1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_4_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_1d(x0_depth)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "x_4_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_1r(x0_rgb)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_110": {
                "variable": {
                    "value": "f2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_5_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_2d(x_4_d)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "x_5_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_2r(x_4_r)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_115": {
                "variable": {
                    "value": "f3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6_d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_3d(x_5_d)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "x_6_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.res3d_3r(x_5_r)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_117": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(f0, f1, f2, f3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_74": {
                "in_channels": {
                    "value": "320",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_75": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_76": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_78": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "12",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/GRFNet.py": {
        "torch": {
            "Conv3d_27": {
                "variable": {
                    "value": "self.in_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.input_channels + self.hidden_channels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2 * self.hidden_channels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv3d_35": {
                "variable": {
                    "value": "self.out_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.input_channels + self.hidden_channels",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.hidden_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_46": {
                "variable": {
                    "value": "combined",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input_tensor, h_cur)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_48": {
                "variable": {
                    "value": "(cc_r, cc_z)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "combined_conv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.in_conv(combined)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.hidden_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_50": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sigmoid_51": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_z",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tanh_55": {
                "variable": {
                    "value": "h_bar",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.out_conv(torch.cat((input_tensor, h_cur_bar), dim=1))",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.dep_feature2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(c_in, c_out, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_73": {
                "variable": {
                    "value": "self.dep_feature3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "DownsampleBlock3d(8, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "self.rgb_feature2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(c_in, c_out, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.rgb_feature3d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "DownsampleBlock3d(8, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_114": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(320, 160, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_162": {
                "variable": {
                    "value": "h0",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x0_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dep_feature2d(x_depth)",
                            "Call"
                        ],
                        [
                            "self.project_layer_dep(x0_depth, p)",
                            "Call"
                        ],
                        [
                            "self.dep_feature3d(x0_depth)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "x0_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dep_feature2d(x_depth)",
                            "Call"
                        ],
                        [
                            "self.project_layer_dep(x0_depth, p)",
                            "Call"
                        ],
                        [
                            "self.dep_feature3d(x0_depth)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_54": {
                "tensors": {
                    "value": "(input_tensor, h_cur_bar)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_68": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_83": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_115": {
                "in_channels": {
                    "value": "320",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "160",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_116": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_117": {
                "in_channels": {
                    "value": "160",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "12",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/PALNet.py": {
        "torch": {
            "Sequential_24": {
                "variable": {
                    "value": "self.conv2d_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, depth_out, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.res_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(depth_out, in_ch, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_42": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channel_3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out",
                            "variable"
                        ],
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_43": {
                "variable": {
                    "value": "self.reduction2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_44": {
                "variable": {
                    "value": "self.conv2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(8, 8, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_55": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channel_3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out",
                            "variable"
                        ],
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_56": {
                "variable": {
                    "value": "self.reduction2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_57": {
                "variable": {
                    "value": "self.conv2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(8, 8, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_66": {
                "variable": {
                    "value": "self.reduction3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.conv3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(16, 8, 1, stride, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_76": {
                "variable": {
                    "value": "self.reduction3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_77": {
                "variable": {
                    "value": "self.conv3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(16, 8, 1, stride, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_87": {
                "variable": {
                    "value": "self.conv3_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(64, 32, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.conv3_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(64, 32, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_104": {
                "variable": {
                    "value": "self.conv3_7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(64, 32, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_113": {
                "variable": {
                    "value": "self.conv4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_114": {
                "variable": {
                    "value": "self.relu4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_116": {
                "variable": {
                    "value": "self.conv4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_117": {
                "variable": {
                    "value": "self.relu4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_119": {
                "variable": {
                    "value": "self.fc12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "12",
                            "Method Argument"
                        ],
                        [
                            "12",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_121": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_135": {
                "variable": {
                    "value": "x0_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res_depth(x0_depth) + x0_depth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_139": {
                "variable": {
                    "value": "x1_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.s_conv1_depth(x0_depth)",
                            "Call"
                        ],
                        [
                            "F.relu(x1_depth, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_145": {
                "variable": {
                    "value": "x2_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x2_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x2_1_depth + x2_2_depth",
                            "BinOp"
                        ],
                        [
                            "F.relu(x2_depth, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_148": {
                "variable": {
                    "value": "x1_tsdf",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1_tsdf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.pool2(x_tsdf)",
                            "Call"
                        ],
                        [
                            "F.relu(x1_tsdf, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_153": {
                "variable": {
                    "value": "x2_tsdf",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x2_tsdf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x2_1_tsdf + x2_2_tsdf",
                            "BinOp"
                        ],
                        [
                            "F.relu(x2_tsdf, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_158": {
                "variable": {
                    "value": "x_3_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_3_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x3_1_depth + x3_2_depth",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_3_depth, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_164": {
                "variable": {
                    "value": "x_3_tsdf",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_3_tsdf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x3_1_tsdf + x3_2_tsdf",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_3_tsdf, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_167": {
                "variable": {
                    "value": "x_3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_3_depth, x_3_tsdf)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_171": {
                "variable": {
                    "value": "x_4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_3(x_3) + x_3",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_4, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_175": {
                "variable": {
                    "value": "x_5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_5(x_4) + x_4",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_5, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_179": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_7(x_5) + x_5",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_3, x_4, x_5, x_6), dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv4_1(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv4_2(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_182": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_3, x_4, x_5, x_6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_187": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_7(x_5) + x_5",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_3, x_4, x_5, x_6), dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv4_1(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv4_2(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_191": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_7(x_5) + x_5",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_3, x_4, x_5, x_6), dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv4_1(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv4_2(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_206": {
                "variable": {
                    "value": "self.conv2d_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, depth_out, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_212": {
                "variable": {
                    "value": "self.res_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(depth_out, in_ch, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_224": {
                "variable": {
                    "value": "self.s_conv1_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channel_3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out",
                            "variable"
                        ],
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_226": {
                "variable": {
                    "value": "self.reduction2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_227": {
                "variable": {
                    "value": "self.conv2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(8, 8, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_238": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channel_3d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out",
                            "variable"
                        ],
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_239": {
                "variable": {
                    "value": "self.reduction2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_240": {
                "variable": {
                    "value": "self.conv2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(8, 8, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_249": {
                "variable": {
                    "value": "self.reduction3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_250": {
                "variable": {
                    "value": "self.conv3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(16, 8, 1, stride, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_259": {
                "variable": {
                    "value": "self.reduction3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_260": {
                "variable": {
                    "value": "self.conv3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(16, 8, 1, stride, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_270": {
                "variable": {
                    "value": "self.conv3_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(64, 32, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_278": {
                "variable": {
                    "value": "self.conv3_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(64, 32, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_287": {
                "variable": {
                    "value": "self.conv3_7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(64, 32, 1, 1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_296": {
                "variable": {
                    "value": "self.conv4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_297": {
                "variable": {
                    "value": "self.relu4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_299": {
                "variable": {
                    "value": "self.conv4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_300": {
                "variable": {
                    "value": "self.relu4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_302": {
                "variable": {
                    "value": "self.fc12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "12",
                            "Method Argument"
                        ],
                        [
                            "12",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_304": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_318": {
                "variable": {
                    "value": "x0_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.res_depth(x0_depth) + x0_depth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_322": {
                "variable": {
                    "value": "x1_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.s_conv1_depth(x0_depth)",
                            "Call"
                        ],
                        [
                            "F.relu(x1_depth, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_328": {
                "variable": {
                    "value": "x2_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x2_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x2_1_depth + x2_2_depth",
                            "BinOp"
                        ],
                        [
                            "F.relu(x2_depth, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_331": {
                "variable": {
                    "value": "x1_tsdf",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1_tsdf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.pool2(x_tsdf)",
                            "Call"
                        ],
                        [
                            "F.relu(x1_tsdf, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_336": {
                "variable": {
                    "value": "x2_tsdf",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x2_tsdf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x2_1_tsdf + x2_2_tsdf",
                            "BinOp"
                        ],
                        [
                            "F.relu(x2_tsdf, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_341": {
                "variable": {
                    "value": "x_3_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_3_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x3_1_depth + x3_2_depth",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_3_depth, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_347": {
                "variable": {
                    "value": "x_3_tsdf",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_3_tsdf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x3_1_tsdf + x3_2_tsdf",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_3_tsdf, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_350": {
                "variable": {
                    "value": "x_3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_3_depth, x_3_tsdf)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_354": {
                "variable": {
                    "value": "x_4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_4",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_3(x_3) + x_3",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_4, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_358": {
                "variable": {
                    "value": "x_5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_5(x_4) + x_4",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_5, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_362": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_7(x_5) + x_5",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_3, x_4, x_5, x_6), dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv4_1(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv4_2(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_365": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_3, x_4, x_5, x_6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_370": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_7(x_5) + x_5",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_3, x_4, x_5, x_6), dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv4_1(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv4_2(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_374": {
                "variable": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_6",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_7(x_5) + x_5",
                            "BinOp"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((x_3, x_4, x_5, x_6), dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv4_1(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv4_2(x_6)",
                            "Call"
                        ],
                        [
                            "F.relu(x_6, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "depth_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "int"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "in_channels": {
                    "value": "depth_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "depth_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "int"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_45": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_47": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_49": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_58": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_59": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_60": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_62": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_68": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_69": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_70": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_72": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_78": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_80": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_81": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_82": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_88": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_89": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_90": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_91": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_92": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_96": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_97": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_98": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_99": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_101": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_105": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_106": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_107": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_108": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_109": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_110": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_207": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "depth_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "int"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_208": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_213": {
                "in_channels": {
                    "value": "depth_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "int"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_214": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_215": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_216": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_217": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "depth_out // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "depth_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "6",
                            "int"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_228": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_229": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_230": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_231": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_232": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_241": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_242": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_243": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_244": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_245": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_251": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_252": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_253": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_254": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_255": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_261": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_262": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_263": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_264": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_265": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_271": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_272": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_273": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_274": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_275": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_279": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_280": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_281": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_282": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_283": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_284": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_288": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_289": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_290": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_291": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_292": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_293": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/projection_layer.py": {
        "torch": {}
    },
    "test.py": {
        "torch": {
            "DataParallel_53": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "make_model(args.model, num_classes=12).cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_58": {
                "variable": {
                    "value": "cp_states",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_cache_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils/seed.py": {
        "torch": {
            "manual_seed_16": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3055",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "manual_seed_17": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3055",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "manual_seed_all_18": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3055",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    }
}