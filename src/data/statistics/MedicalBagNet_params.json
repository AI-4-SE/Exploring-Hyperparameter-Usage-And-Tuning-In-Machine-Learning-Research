{
    "bagnets.py": {
        "torch": {
            "Conv3d_23": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "InstanceNorm3d_25": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv3d_27": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1 if kernel_size == 3 else 0",
                            "IfExp"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "InstanceNorm3d_32": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv3d_33": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "InstanceNorm3d_35": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_75": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "start_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(64 * self.scale_factor)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_77": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "start_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(64 * self.scale_factor)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "start_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(64 * self.scale_factor)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "InstanceNorm3d_80": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "start_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(64 * self.scale_factor)",
                            "Call"
                        ]
                    ]
                }
            },
            "ReLU_81": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_92": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "8 * start_filters * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_108": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_124": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv3d_109": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "InstanceNorm3d_112": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "data/camcan.py": {
        "torch": {}
    },
    "data/ixi.py": {
        "torch": {}
    },
    "deploy.py": {
        "torch": {
            "DataLoader_163": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "IxiDataset(data_path, os.path.join(data_path, 'train.csv'), attribute=attribute, augment=True, scale=scale)",
                            "Call"
                        ],
                        [
                            "CamCANDataset(os.path.join(data_path, 'train.csv'), attribute=attribute, center_crop=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_167": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "IxiDataset(data_path, os.path.join(data_path, 'val.csv'), attribute=attribute, scale=scale)",
                            "Call"
                        ],
                        [
                            "CamCANDataset(os.path.join(data_path, 'val.csv'), attribute=attribute, center_crop=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_171": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "IxiDataset(data_path, os.path.join(data_path, 'test.csv'), attribute=attribute, scale=scale)",
                            "Call"
                        ],
                        [
                            "CamCANDataset(os.path.join(data_path, 'test.csv'), attribute=attribute, center_crop=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "device_202": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_220": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_23": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataParallel_206": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "bagnet9(num_classes=args.num_classes, scale_filters=args.scale_factor, avg_pool=not args.localised)",
                            "Call"
                        ],
                        [
                            "bagnet17(num_classes=args.num_classes, scale_filters=args.scale_factor, avg_pool=not args.localised)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "bagnet33(num_classes=args.num_classes, scale_filters=args.scale_factor, avg_pool=not args.localised)",
                            "Call"
                        ],
                        [
                            "bagnet177(num_classes=args.num_classes, scale_filters=args.scale_factor, avg_pool=not args.localised)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_210": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_204": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_213": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_56": {
                "variable": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_62": {
                "variable": {
                    "value": "cur_ae",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs.detach().squeeze() - labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_107": {
                "variable": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "global_output.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_110": {
                "variable": {
                    "value": "probs",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_116": {
                "variable": {
                    "value": "cur_ae",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "global_output.detach().squeeze() - labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_202": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_59": {
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(images)",
                            "Call"
                        ],
                        [
                            "model(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_110": {
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(images)",
                            "Call"
                        ],
                        [
                            "model(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "DataLoader_138": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "IxiDataset(data_path, os.path.join(data_path, 'train.csv'), attribute=attribute, augment=True, scale=scale)",
                            "Call"
                        ],
                        [
                            "CamCANDataset(os.path.join(data_path, 'train.csv'), attribute=attribute, augment=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_142": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "IxiDataset(data_path, os.path.join(data_path, 'val.csv'), attribute=attribute, scale=scale)",
                            "Call"
                        ],
                        [
                            "CamCANDataset(os.path.join(data_path, 'val.csv'), attribute=attribute)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_146": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "IxiDataset(data_path, os.path.join(data_path, 'test.csv'), attribute=attribute, scale=scale)",
                            "Call"
                        ],
                        [
                            "CamCANDataset(os.path.join(data_path, 'test.csv'), attribute=attribute)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "device_174": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "StepLR_208": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.RMSprop(raw_model.parameters(), lr=args.lr, eps=1e-05, weight_decay=args.l2)",
                            "Call"
                        ],
                        [
                            "torch.optim.Adam(raw_model.parameters(), lr=args.lr, eps=1e-05, weight_decay=args.l2)",
                            "Call"
                        ]
                    ]
                },
                "step_size": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_24": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_25": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_33": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(logdir, 'checkpoint.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.logdir, 'checkpoint.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_46": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': 0, 'step': 0, 'state_dict': copy.deepcopy(raw_model.state_dict()), 'optimizer': copy.deepcopy(optimizer.state_dict()), 'scheduler': copy.deepcopy(scheduler.state_dict()), 'best_metric': None, 'best_epoch': 0, 'is_best': False, 'stats_csv': stats_csv}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(logdir, 'checkpoint.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.logdir, 'checkpoint.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_178": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "bagnet9(num_classes=args.num_classes, scale_filters=args.scale_factor)",
                            "Call"
                        ],
                        [
                            "bagnet17(num_classes=args.num_classes, scale_filters=args.scale_factor)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "bagnet33(num_classes=args.num_classes, scale_filters=args.scale_factor)",
                            "Call"
                        ],
                        [
                            "bagnet177(num_classes=args.num_classes, scale_filters=args.scale_factor)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_182": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clip_grad_value__200": {
                "parameters": {
                    "value": "raw_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value": {
                    "value": "5.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "RMSprop_202": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "raw_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.l2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_176": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_188": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_205": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "raw_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.l2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_77": {
                "variable": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_83": {
                "variable": {
                    "value": "cur_ae",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs.detach().squeeze() - labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_174": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_257": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_266": {
                "variable": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_count_258": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_277": {
                "input": {
                    "value": "outputs.detach().squeeze() - labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_80": {
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(images)",
                            "Call"
                        ],
                        [
                            "model(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}