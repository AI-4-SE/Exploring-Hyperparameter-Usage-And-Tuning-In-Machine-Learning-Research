{
    "task2/data_utils/gpt2_reader.py": {
        "torch": {
            "stack_162": {
                "variable": {
                    "value": "input_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['input_ids'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_163": {
                "variable": {
                    "value": "attention_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['attention_mask'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_164": {
                "variable": {
                    "value": "token_type_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['token_type_ids'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_165": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['labels'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            }
        }
    },
    "task2/data_utils/sampler.py": {
        "torch": {
            "Generator_95": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "task2/data_utils/seq2seq_reader.py": {
        "torch": {
            "stack_215": {
                "variable": {
                    "value": "input_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['input_ids'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_216": {
                "variable": {
                    "value": "attention_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['attention_mask'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_217": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x['labels'] for x in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            }
        }
    },
    "task2/data_utils/utils.py": {
        "torch": {}
    },
    "task2/modules/trainer.py": {
        "torch": {
            "sum_118": {
                "variable": {
                    "value": "input_len",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch['attention_mask']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_119": {
                "variable": {
                    "value": "input_gen_len",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs['labels'][0, :input_len].eq(-100)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_142": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_177": {
                "*size": {
                    "value": "(tensor.shape[0], max_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tensor.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "tensor.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "task2/wow_reader.py": {
        "torch": {
            "DataLoader_29": {
                "variable": {
                    "value": "loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "bsz",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False if test else True",
                            "IfExp"
                        ]
                    ]
                }
            },
            "Tensor_379": {
                "variable": {
                    "value": "label_starts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_380": {
                "variable": {
                    "value": "label_idxs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "label_masks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch['response_mask']",
                            "Subscript"
                        ],
                        [
                            "batch['context_mask'].narrow(1, 1, seqlen - 1).clone()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_390": {
                "variable": {
                    "value": "label_starts",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "response_masks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "batch['response'].narrow(1, 1, seqlen - 1).clone()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_391": {
                "variable": {
                    "value": "label_idxs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "label_masks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch['response_mask']",
                            "Subscript"
                        ],
                        [
                            "batch['context_mask'].narrow(1, 1, seqlen - 1).clone()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}