{
    "results/sacred/_sources/main_7f78e11d4b0c272c98119b438a3a89ab.py": {
        "torch": {
            "manual_seed_31": {
                "seed": {
                    "value": "config['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "results/sacred/_sources/run_568c706326707bc8971faeac3404a05f.py": {
        "torch": {
            "is_available_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "results/sacred/_sources/run_6ca9b6400404686fe9ce3eeddb14c41f.py": {
        "torch": {
            "is_available_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "results/sacred/_sources/run_c85b3a5ec34d913e55e2c595c18499d4.py": {
        "torch": {
            "is_available_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "results/sacred/_sources/run_fcb13994fa485c4592b6d5c6d62d93a1.py": {
        "torch": {
            "is_available_245": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/components/action_selectors.py": {
        "torch": {
            "rand_like_57": {
                "variable": {
                    "value": "random_numbers",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "agent_inputs[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Categorical_59": {
                "variable": {
                    "value": "random_actions",
                    "type": "Name",
                    "possible_values": []
                },
                "probs": {
                    "value": "avail_actions.float()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Categorical_27": {
                "variable": {
                    "value": "picked_actions",
                    "type": "Name",
                    "possible_values": []
                },
                "probs": {
                    "value": "masked_policies",
                    "type": "Name",
                    "possible_values": [
                        [
                            "agent_inputs.clone()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/components/episode_buffer.py": {
        "torch": {
            "tensor_103": {
                "variable": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.tensor(v, dtype=dtype, device=self.device)",
                            "Call"
                        ],
                        [
                            "target[k][_slices]",
                            "Subscript"
                        ],
                        [
                            "transform.transform(v)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.scheme[k]['dtype']",
                            "Subscript"
                        ],
                        [
                            "field_info.get('dtype', th.float32)",
                            "Call"
                        ],
                        [
                            "self.scheme[k].get('dtype', th.float32)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_73": {
                "variable": {
                    "value": "self.data.episode_data[field_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, *shape)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.scheme[k]['dtype']",
                            "Subscript"
                        ],
                        [
                            "field_info.get('dtype', th.float32)",
                            "Call"
                        ],
                        [
                            "self.scheme[k].get('dtype', th.float32)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_75": {
                "variable": {
                    "value": "self.data.transition_data[field_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, max_seq_length, *shape)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.scheme[k]['dtype']",
                            "Subscript"
                        ],
                        [
                            "field_info.get('dtype', th.float32)",
                            "Call"
                        ],
                        [
                            "self.scheme[k].get('dtype', th.float32)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_198": {
                "input": {
                    "value": "self.data.transition_data['filled']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_198": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/components/transforms.py": {
        "torch": {}
    },
    "src/controllers/basic_controller_3s_vs_4z.py": {
        "torch": {
            "Linear_12": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._get_input_shape(scheme)",
                            "Call"
                        ],
                        [
                            "scheme['obs']['vshape']",
                            "Subscript"
                        ],
                        [
                            "input_shape + self.n_agents",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_shape",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "GRUCell_13": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "hidden_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "action_shape",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "elu_20": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(input_h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_40": {
                "variable": {
                    "value": "self.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "self.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "self.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(24, 10)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "variable": {
                    "value": "self.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3, 10)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_67": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((8, 1, 10)), agent1.view((8, 1, 10)), agent2.view((8, 1, 10)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_89": {
                "variable": {
                    "value": "dd",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dd] * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_98": {
                "variable": {
                    "value": "dd",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dd] * 10",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_99": {
                "variable": {
                    "value": "use_old",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[use_old] * 10",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_100": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dummy] * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_109": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((8, 1, 10)), agent1.view((8, 1, 10)), agent2.view((8, 1, 10)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_189": {
                "variable": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.reshape(bs * self.n_agents, -1) for x in inputs]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_190": {
                "variable": {
                    "value": "visibility_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_127": {
                "variable": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.nn.functional.softmax(agent_outs, dim=-1)",
                            "Call"
                        ],
                        [
                            "(1 - self.action_selector.epsilon) * agent_outs + th.ones_like(agent_outs) * self.action_selector.epsilon / epsilon_action_num",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "save_163": {
                "obj": {
                    "value": "self.msg_rnn.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/msg_rnn.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_164": {
                "obj": {
                    "value": "self.agent.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/agent.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_167": {
                "f": {
                    "value": "'{}/msg_rnn.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_168": {
                "f": {
                    "value": "'{}/agent.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "eye_188": {
                "n": {
                    "value": "self.n_agents",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "batch.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_188": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_183": {
                "input": {
                    "value": "batch['actions_onehot'][:, t]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_like_136": {
                "input": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.nn.functional.softmax(agent_outs, dim=-1)",
                            "Call"
                        ],
                        [
                            "(1 - self.action_selector.epsilon) * agent_outs + th.ones_like(agent_outs) * self.action_selector.epsilon / epsilon_action_num",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "src/controllers/basic_controller_3s_vs_5z.py": {
        "torch": {
            "Linear_12": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._get_input_shape(scheme)",
                            "Call"
                        ],
                        [
                            "scheme['obs']['vshape']",
                            "Subscript"
                        ],
                        [
                            "input_shape + self.n_agents",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_shape",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "GRUCell_13": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "hidden_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "action_shape",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "elu_20": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(input_h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_40": {
                "variable": {
                    "value": "self.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "self.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "self.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(24, 11)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "variable": {
                    "value": "self.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3, 11)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((8, 1, 11)), agent1.view((8, 1, 11)), agent2.view((8, 1, 11)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_94": {
                "variable": {
                    "value": "dd",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dd] * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_103": {
                "variable": {
                    "value": "dd",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dd] * 11",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_104": {
                "variable": {
                    "value": "use_old",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[use_old] * 11",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_105": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dummy] * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((8, 1, 11)), agent1.view((8, 1, 11)), agent2.view((8, 1, 11)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_194": {
                "variable": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.reshape(bs * self.n_agents, -1) for x in inputs]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_195": {
                "variable": {
                    "value": "visibility_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_132": {
                "variable": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.nn.functional.softmax(agent_outs, dim=-1)",
                            "Call"
                        ],
                        [
                            "(1 - self.action_selector.epsilon) * agent_outs + th.ones_like(agent_outs) * self.action_selector.epsilon / epsilon_action_num",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "save_168": {
                "obj": {
                    "value": "self.msg_rnn.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/msg_rnn.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_169": {
                "obj": {
                    "value": "self.agent.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/agent.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_172": {
                "f": {
                    "value": "'{}/msg_rnn.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_173": {
                "f": {
                    "value": "'{}/agent.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "eye_193": {
                "n": {
                    "value": "self.n_agents",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "batch.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_193": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_188": {
                "input": {
                    "value": "batch['actions_onehot'][:, t]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_like_141": {
                "input": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.nn.functional.softmax(agent_outs, dim=-1)",
                            "Call"
                        ],
                        [
                            "(1 - self.action_selector.epsilon) * agent_outs + th.ones_like(agent_outs) * self.action_selector.epsilon / epsilon_action_num",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "src/controllers/basic_controller_6h_vs_8z.py": {
        "torch": {
            "Linear_12": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._get_input_shape(scheme)",
                            "Call"
                        ],
                        [
                            "scheme['obs']['vshape']",
                            "Subscript"
                        ],
                        [
                            "input_shape + self.n_agents",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_shape",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "GRUCell_13": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "hidden_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "action_shape",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "elu_20": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(input_h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_40": {
                "variable": {
                    "value": "self.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "48",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "self.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 6, 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "self.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(48, 14)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "variable": {
                    "value": "self.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 6, 6, 14)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_75": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((8, 1, 14)), agent1.view((8, 1, 14)), agent2.view((8, 1, 14)), agent3.view((8, 1, 14)), agent4.view((8, 1, 14)), agent5.view((8, 1, 14)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_98": {
                "variable": {
                    "value": "ind",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ind] * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_107": {
                "variable": {
                    "value": "ind",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ind] * 14",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_108": {
                "variable": {
                    "value": "use_old",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[use_old] * 14",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_109": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[dummy] * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_121": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((8, 1, 14)), agent1.view((8, 1, 14)), agent2.view((8, 1, 14)), agent3.view((8, 1, 14)), agent4.view((8, 1, 14)), agent5.view((8, 1, 14)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_200": {
                "variable": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.reshape(bs * self.n_agents, -1) for x in inputs]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_201": {
                "variable": {
                    "value": "visibility_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_139": {
                "variable": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.nn.functional.softmax(agent_outs, dim=-1)",
                            "Call"
                        ],
                        [
                            "(1 - self.action_selector.epsilon) * agent_outs + th.ones_like(agent_outs) * self.action_selector.epsilon / epsilon_action_num",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "save_175": {
                "obj": {
                    "value": "self.msg_rnn.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/msg_rnn.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_176": {
                "obj": {
                    "value": "self.agent.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/agent.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_179": {
                "f": {
                    "value": "'{}/msg_rnn.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_180": {
                "f": {
                    "value": "'{}/agent.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "eye_199": {
                "n": {
                    "value": "self.n_agents",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "batch.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_199": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_195": {
                "input": {
                    "value": "batch['actions_onehot'][:, t]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_like_148": {
                "input": {
                    "value": "agent_outs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.nn.functional.softmax(agent_outs, dim=-1)",
                            "Call"
                        ],
                        [
                            "(1 - self.action_selector.epsilon) * agent_outs + th.ones_like(agent_outs) * self.action_selector.epsilon / epsilon_action_num",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "src/learners/q_learner_3s_vs_4z.py": {
        "torch": {
            "RMSprop_31": {
                "variable": {
                    "value": "self.optimiser",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "args.optim_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "args.optim_eps",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_55": {
                "variable": {
                    "value": "smooth_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "32 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_84": {
                "variable": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(mac_out, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_91": {
                "variable": {
                    "value": "chosen_action_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mac_out[:, :-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "actions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch['actions'][:, :-1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_91": {
                "variable": {
                    "value": "chosen_action_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_115": {
                "variable": {
                    "value": "target_mac_out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mac_out[1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_146": {
                "variable": {
                    "value": "smooth_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "smooth_loss_list[0:-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__155": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "parameters": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.args.grad_norm_clip",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_80": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((32, 1, 10)), agent1.view((32, 1, 10)), agent2.view((32, 1, 10)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_110": {
                "variable": {
                    "value": "target_agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(target_agent0.view((32, 1, 10)), target_agent1.view((32, 1, 10)), target_agent2.view((32, 1, 10)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_125": {
                "variable": {
                    "value": "target_max_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target_mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(target_mac_out[1:], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "cur_max_actions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "mac_out[:, 1:].max(dim=3, keepdim=True)[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_125": {
                "variable": {
                    "value": "target_max_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_188": {
                "obj": {
                    "value": "self.optimiser.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/opt.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_88": {
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_187": {
                "obj": {
                    "value": "self.mixer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/mixer.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_196": {
                "f": {
                    "value": "'{}/opt.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_195": {
                "f": {
                    "value": "'{}/mixer.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "topk_87": {
                "input": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(mac_out, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_88": {
                "input": {
                    "value": "-25.0 * robust_loss",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_88": {
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/learners/q_learner_3s_vs_5z.py": {
        "torch": {
            "RMSprop_31": {
                "variable": {
                    "value": "self.optimiser",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "args.optim_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "args.optim_eps",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_54": {
                "variable": {
                    "value": "smooth_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "32 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_83": {
                "variable": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(mac_out, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_89": {
                "variable": {
                    "value": "chosen_action_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mac_out[:, :-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "actions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch['actions'][:, :-1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_89": {
                "variable": {
                    "value": "chosen_action_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_113": {
                "variable": {
                    "value": "target_mac_out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mac_out[1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_143": {
                "variable": {
                    "value": "smooth_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "smooth_loss_list[0:-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__152": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "parameters": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.args.grad_norm_clip",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_79": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((32, 1, 11)), agent1.view((32, 1, 11)), agent2.view((32, 1, 11)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "target_agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(target_agent0.view((32, 1, 11)), target_agent1.view((32, 1, 11)), target_agent2.view((32, 1, 11)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_123": {
                "variable": {
                    "value": "target_max_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target_mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(target_mac_out[1:], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "cur_max_actions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "mac_out[:, 1:].max(dim=3, keepdim=True)[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_123": {
                "variable": {
                    "value": "target_max_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_185": {
                "obj": {
                    "value": "self.optimiser.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/opt.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_86": {
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_184": {
                "obj": {
                    "value": "self.mixer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/mixer.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_193": {
                "f": {
                    "value": "'{}/opt.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_192": {
                "f": {
                    "value": "'{}/mixer.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "topk_85": {
                "input": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(mac_out, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_86": {
                "input": {
                    "value": "-25.0 * robust_loss",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_86": {
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/learners/q_learner_6h_vs_8z.py": {
        "torch": {
            "RMSprop_31": {
                "variable": {
                    "value": "self.optimiser",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "args.optim_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "args.optim_eps",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_53": {
                "variable": {
                    "value": "smooth_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "192",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_85": {
                "variable": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(mac_out, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_91": {
                "variable": {
                    "value": "chosen_action_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "mac_out[:, :-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "actions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch['actions'][:, :-1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_91": {
                "variable": {
                    "value": "chosen_action_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_121": {
                "variable": {
                    "value": "target_mac_out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_mac_out[1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_149": {
                "variable": {
                    "value": "smooth_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "smooth_loss_list[0:-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__157": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "parameters": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.args.grad_norm_clip",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_81": {
                "variable": {
                    "value": "agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(agent0.view((32, 1, 14)), agent1.view((32, 1, 14)), agent2.view((32, 1, 14)), agent3.view((32, 1, 14)), agent4.view((32, 1, 14)), agent5.view((32, 1, 14)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_116": {
                "variable": {
                    "value": "target_agent_global_outputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(target_agent0.view((32, 1, 14)), target_agent1.view((32, 1, 14)), target_agent2.view((32, 1, 14)), target_agent3.view((32, 1, 14)), target_agent4.view((32, 1, 14)), target_agent5.view((32, 1, 14)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gather_131": {
                "variable": {
                    "value": "target_max_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target_mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(target_mac_out[1:], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "cur_max_actions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "mac_out[:, 1:].max(dim=3, keepdim=True)[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_131": {
                "variable": {
                    "value": "target_max_qvals",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_190": {
                "obj": {
                    "value": "self.optimiser.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/opt.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_88": {
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_189": {
                "obj": {
                    "value": "self.mixer.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/mixer.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_198": {
                "f": {
                    "value": "'{}/opt.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_197": {
                "f": {
                    "value": "'{}/mixer.th'.format(path)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "topk_87": {
                "input": {
                    "value": "mac_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "th.stack(mac_out, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "k": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_88": {
                "input": {
                    "value": "-25.0 * robust_loss",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_88": {
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/main.py": {
        "torch": {
            "manual_seed_31": {
                "seed": {
                    "value": "config['seed']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "src/modules/agents/rnn_agent.py": {
        "torch": {
            "Linear_10": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRUCell_11": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "args.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "args.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_12": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.rnn_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.n_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_21": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(inputs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.rnn_hidden_action_decoder_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRUCell_33": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "args.rnn_hidden_action_decoder_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "args.rnn_hidden_action_decoder_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.rnn_hidden_action_decoder_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.n_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(inputs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "src/modules/critics/coma.py": {
        "torch": {
            "Linear_18": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._get_input_shape(scheme)",
                            "Call"
                        ],
                        [
                            "scheme['state']['vshape']",
                            "Subscript"
                        ],
                        [
                            "input_shape + self.n_agents",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(inputs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_25": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_58": {
                "variable": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.reshape(bs, max_t, self.n_agents, -1) for x in inputs]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "eye_42": {
                "n": {
                    "value": "self.n_agents",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "batch.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_52": {
                "variable": {
                    "value": "last_actions",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[th.zeros_like(batch['actions_onehot'][:, 0:1]), batch['actions_onehot'][:, :-1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "eye_56": {
                "n": {
                    "value": "self.n_agents",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "batch.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_56": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_48": {
                "input": {
                    "value": "batch['actions_onehot'][:, 0:1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_52": {
                "input": {
                    "value": "batch['actions_onehot'][:, 0:1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "src/modules/mixers/qmix.py": {
        "torch": {
            "Linear_17": {
                "variable": {
                    "value": "self.hyper_w_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.state_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim * self.n_agents",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.hyper_w_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.state_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.hyper_b_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.state_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.state_dim, self.embed_dim)",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_33": {
                "variable": {
                    "value": "w1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hyper_w_1(states)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_37": {
                "variable": {
                    "value": "hidden",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "th.bmm(agent_qs, w1) + b1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_39": {
                "variable": {
                    "value": "w_final",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hyper_w_final(states)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "self.state_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_44": {
                "input": {
                    "value": "hidden",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.elu(th.bmm(agent_qs, w1) + b1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "w_final",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.abs(self.hyper_w_final(states))",
                            "Call"
                        ],
                        [
                            "w_final.view(-1, self.embed_dim, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_37": {
                "input": {
                    "value": "agent_qs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "agent_qs.view(-1, 1, self.n_agents)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "w1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "th.abs(self.hyper_w_1(states))",
                            "Call"
                        ],
                        [
                            "w1.view(-1, self.n_agents, self.embed_dim)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/modules/mixers/vdn.py": {
        "torch": {
            "sum_10": {
                "input": {
                    "value": "agent_qs",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/run.py": {
        "torch": {
            "is_available_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/runners/episode_runner.py": {
        "torch": {
            "rand_61": {
                "variable": {
                    "value": "rand",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_62": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_115": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[loss_pattern] * 11",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_124": {
                "variable": {
                    "value": "rand",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_125": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_148": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[loss_pattern] * 11",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/runners/loss_pattern.py": {
        "torch": {
            "rand_29": {
                "variable": {
                    "value": "rand",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, dimension)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_30": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, dimension)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_87": {
                "variable": {
                    "value": "rand",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, dimension)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_88": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, dimension)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_132": {
                "variable": {
                    "value": "rand",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, dimension)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_133": {
                "variable": {
                    "value": "loss_pattern",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(episode_length, dimension)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_161": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(400, 8 * 6 * 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_163": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(400, 8 * 3 * 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_165": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(400, 8 * 3 * 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_167": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(800, 8 * 2 * 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_169": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(500, 8 * 6 * 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_171": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(400, 8 * 8 * 8)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "src/runners/parallel_runner.py": {
        "torch": {
            "zeros_88": {
                "variable": {
                    "value": "self.mac.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "48",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "self.mac.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 6, 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_90": {
                "variable": {
                    "value": "self.mac.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(48, 14)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_91": {
                "variable": {
                    "value": "self.mac.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 6, 6, 14)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_93": {
                "variable": {
                    "value": "self.mac.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_94": {
                "variable": {
                    "value": "self.mac.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_95": {
                "variable": {
                    "value": "self.mac.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(24, 10)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_96": {
                "variable": {
                    "value": "self.mac.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3, 10)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_98": {
                "variable": {
                    "value": "self.mac.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "variable": {
                    "value": "self.mac.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_100": {
                "variable": {
                    "value": "self.mac.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(24, 11)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_101": {
                "variable": {
                    "value": "self.mac.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 3, 3, 11)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_103": {
                "variable": {
                    "value": "self.mac.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_104": {
                "variable": {
                    "value": "self.mac.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_105": {
                "variable": {
                    "value": "self.mac.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(16, 70)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_106": {
                "variable": {
                    "value": "self.mac.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 2, 2, 70)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_108": {
                "variable": {
                    "value": "self.mac.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "48",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_109": {
                "variable": {
                    "value": "self.mac.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 6, 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_110": {
                "variable": {
                    "value": "self.mac.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(48, 30)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_111": {
                "variable": {
                    "value": "self.mac.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 6, 6, 30)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_113": {
                "variable": {
                    "value": "self.mac.transmit_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_114": {
                "variable": {
                    "value": "self.mac.receive_gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 8, 8)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_115": {
                "variable": {
                    "value": "self.mac.msg_old_test",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(64, 14)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_116": {
                "variable": {
                    "value": "self.mac.msg_old_test_reshape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(8, 8, 8, 14)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "src/utils/rl_utils.py": {
        "torch": {
            "sum_8": {
                "input": {
                    "value": "terminated",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}