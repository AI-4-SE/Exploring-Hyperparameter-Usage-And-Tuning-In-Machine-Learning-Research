{
    "codes/active_learning.py": {
        "sklearn": {
            "TfidfVectorizer_435": {
                "variable": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                },
                "analyzer": {
                    "value": "text_preprocessing",
                    "type": "variable",
                    "possible_values": []
                },
                "ngram_range": {
                    "value": "(1, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "binary": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "smooth_idf": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "f1_score_243": {
                "variable": {
                    "value": "f1score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_actual",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "y",
                            "variable"
                        ],
                        [
                            "np.concatenate((y[train_index_list], y[test_index_list]), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_all",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "y",
                            "variable"
                        ],
                        [
                            "np.concatenate((y[train_index_list], y_pred), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "binary",
                    "type": "str",
                    "possible_values": []
                }
            },
            "precision_score_244": {
                "variable": {
                    "value": "precision",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_actual",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "y",
                            "variable"
                        ],
                        [
                            "np.concatenate((y[train_index_list], y[test_index_list]), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_all",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "y",
                            "variable"
                        ],
                        [
                            "np.concatenate((y[train_index_list], y_pred), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "binary",
                    "type": "str",
                    "possible_values": []
                }
            },
            "recall_score_245": {
                "variable": {
                    "value": "recall",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_actual",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "y",
                            "variable"
                        ],
                        [
                            "np.concatenate((y[train_index_list], y[test_index_list]), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_all",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "y",
                            "variable"
                        ],
                        [
                            "np.concatenate((y[train_index_list], y_pred), axis=None)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "binary",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LogisticRegression_408": {
                "variable": {
                    "value": "classifier",
                    "type": "variable",
                    "possible_values": []
                },
                "solver": {
                    "value": "small_data_solver",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "small_data_C_parameter",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LogisticRegression_165": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "class_weight": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "dual": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "fit_intercept": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "intercept_scaling": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "l1_ratio": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "penalty": {
                    "value": "l2",
                    "type": "str",
                    "possible_values": []
                },
                "random_state": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "solver": {
                    "value": "saga",
                    "type": "str",
                    "possible_values": []
                },
                "tol": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "verbose": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "warm_start": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SVC_172": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "kernel": {
                    "value": "linear",
                    "type": "str",
                    "possible_values": []
                },
                "degree": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "gamma": {
                    "value": "auto",
                    "type": "str",
                    "possible_values": []
                },
                "probability": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LogisticRegression_473": {
                "variable": {
                    "value": "classifier",
                    "type": "variable",
                    "possible_values": []
                },
                "solver": {
                    "value": "small_data_solver",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "small_data_C_parameter",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_174": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_176": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_178": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MultinomialNB_180": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdaBoostClassifier_184": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LogisticRegression_189": {
                "variable": {
                    "value": "LRmodel",
                    "type": "variable",
                    "possible_values": []
                },
                "solver": {
                    "value": "large_data_solver",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "large_data_C_parameter",
                    "type": "variable",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BaggingClassifier_190": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "base_estimator": {
                    "value": "LRmodel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "LogisticRegression(solver=large_data_solver, C=large_data_C_parameter, max_iter=200)",
                            "Call"
                        ],
                        [
                            "LogisticRegression(solver=large_data_solver, C=large_data_C_parameter, max_iter=200)",
                            "Call"
                        ]
                    ]
                },
                "n_estimators": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "max_samples": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BaggingClassifier_192": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "base_estimator": {
                    "value": "MultinomialNB()",
                    "type": "Call",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "max_samples": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "LogisticRegression_194": {
                "variable": {
                    "value": "LRmodel",
                    "type": "variable",
                    "possible_values": []
                },
                "solver": {
                    "value": "large_data_solver",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "large_data_C_parameter",
                    "type": "variable",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MultinomialNB_195": {
                "variable": {
                    "value": "NBmodel",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "VotingClassifier_196": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "estimators": {
                    "value": "[('lr', LRmodel), ('nb', NBmodel)]",
                    "type": "List",
                    "possible_values": []
                },
                "voting": {
                    "value": "soft",
                    "type": "str",
                    "possible_values": []
                }
            },
            "MultinomialNB_192": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "codes/pooling.py": {
        "sklearn": {
            "train_test_split_275": {
                "variable": {
                    "value": "(X_train, X_val, y_train, y_val)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "stratify": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "df.label.values",
                            "Attribute"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "data.label.values",
                            "Attribute"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ]
                    ]
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2020",
                            "int"
                        ]
                    ]
                }
            },
            "TfidfVectorizer_286": {
                "variable": {
                    "value": "tf_idf",
                    "type": "variable",
                    "possible_values": []
                },
                "ngram_range": {
                    "value": "(1, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "binary": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "smooth_idf": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "f1_score_297": {
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "average": {
                    "value": "binary",
                    "type": "str",
                    "possible_values": []
                }
            },
            "TfidfVectorizer_320": {
                "variable": {
                    "value": "tf_idf_model",
                    "type": "variable",
                    "possible_values": []
                },
                "ngram_range": {
                    "value": "(1, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "binary": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "smooth_idf": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MultinomialNB_343": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SVC_349": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "probability": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "C": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LogisticRegression_345": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearSVC_351": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "GradientBoostingClassifier_347": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2020",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "codes/rationalLevelAggrementScore.py": {
        "sklearn": {}
    }
}