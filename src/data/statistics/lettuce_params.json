{
    "examples/Simulation_and_outputs.py": {
        "torch": {
            "device_9": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_50": {
                "input": {
                    "value": "u[1, :, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/boundary.py": {
        "torch": {
            "where_33": {
                "variable": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "self.mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "f[self.lattice.stencil.opposite]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.where(self.mask, f[self.lattice.stencil.opposite], f)",
                            "Call"
                        ],
                        [
                            "torch.where(self.mask, feq, f)",
                            "Call"
                        ]
                    ]
                }
            },
            "where_59": {
                "variable": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "self.mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "feq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.lattice.equilibrium(rho, u)",
                            "Call"
                        ],
                        [
                            "self.lattice.einsum('q,q->q', [feq, torch.ones_like(f)])",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.where(self.mask, f[self.lattice.stencil.opposite], f)",
                            "Call"
                        ],
                        [
                            "torch.where(self.mask, feq, f)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_127": {
                "variable": {
                    "value": "no_stream_mask",
                    "type": "Name",
                    "possible_values": []
                },
                "size": {
                    "value": "f_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_157": {
                "variable": {
                    "value": "no_stream_mask",
                    "type": "Name",
                    "possible_values": []
                },
                "size": {
                    "value": "f_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_162": {
                "variable": {
                    "value": "no_collision_mask",
                    "type": "Name",
                    "possible_values": []
                },
                "size": {
                    "value": "f_shape[1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_151": {
                "input": {
                    "value": "rho[here]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_like_58": {
                "input": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.where(self.mask, f[self.lattice.stencil.opposite], f)",
                            "Call"
                        ],
                        [
                            "torch.where(self.mask, feq, f)",
                            "Call"
                        ]
                    ]
                }
            },
            "norm_122": {
                "input": {
                    "value": "u_w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "u[[slice(None)] + self.index] + 0.5 * (u[[slice(None)] + self.index] - u[[slice(None)] + self.neighbor])",
                            "BinOp"
                        ],
                        [
                            "u[other]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "einsum_121": {
                "equation": {
                    "value": "self.dims",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*operands": {
                    "value": "self.lattice.e[self.velocities]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/cli.py": {
        "torch": {
            "device_41": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:{}'.format(gpu_id)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_43": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/collision.py": {
        "torch": {
            "zeros_78": {
                "variable": {
                    "value": "self.Q_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[lattice.Q, lattice.D, lattice.D]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "lattice.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_113": {
                "variable": {
                    "value": "self.M",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[3, 3, 9]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "lattice.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "einsum_120": {
                "variable": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                },
                "equation": {
                    "value": "abq,qmn",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "self.M",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_128": {
                "variable": {
                    "value": "s",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.transform.inverse_transform(m)",
                            "Call"
                        ],
                        [
                            "f - f_diff_neq",
                            "BinOp"
                        ],
                        [
                            "feq + (1.0 - 1.0 / self.tau) * fi1",
                            "BinOp"
                        ],
                        [
                            "f - self.beta * (2 * delta_s + gamma_stab * delta_h)",
                            "BinOp"
                        ],
                        [
                            "f - self.beta * (2 * delta_s + gamma_stab * delta_h)",
                            "BinOp"
                        ],
                        [
                            "self.moment_transformation.inverse_transform(mnew)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_193": {
                "variable": {
                    "value": "self.M",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[3, 3, 3, 27]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "lattice.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "einsum_201": {
                "variable": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                },
                "equation": {
                    "value": "abcq,qmno",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "self.M",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_209": {
                "variable": {
                    "value": "s",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.transform.inverse_transform(m)",
                            "Call"
                        ],
                        [
                            "f - f_diff_neq",
                            "BinOp"
                        ],
                        [
                            "feq + (1.0 - 1.0 / self.tau) * fi1",
                            "BinOp"
                        ],
                        [
                            "f - self.beta * (2 * delta_s + gamma_stab * delta_h)",
                            "BinOp"
                        ],
                        [
                            "f - self.beta * (2 * delta_s + gamma_stab * delta_h)",
                            "BinOp"
                        ],
                        [
                            "self.moment_transformation.inverse_transform(mnew)",
                            "Call"
                        ]
                    ]
                }
            },
            "isnan_178": {
                "input": {
                    "value": "gamma_stab",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 / self.beta - (2 - 1.0 / self.beta) * sum_s / sum_h",
                            "BinOp"
                        ],
                        [
                            "1.0 / self.beta - (2 - 1.0 / self.beta) * sum_s / sum_h",
                            "BinOp"
                        ]
                    ]
                }
            },
            "isnan_268": {
                "input": {
                    "value": "gamma_stab",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 / self.beta - (2 - 1.0 / self.beta) * sum_s / sum_h",
                            "BinOp"
                        ],
                        [
                            "1.0 / self.beta - (2 - 1.0 / self.beta) * sum_s / sum_h",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "lettuce/datautils.py": {
        "torch": {}
    },
    "lettuce/equilibrium.py": {
        "torch": {
            "tensordot_16": {
                "variable": {
                    "value": "exu",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "self.lattice.e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "u",
                    "type": "Name",
                    "possible_values": []
                },
                "dims": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensordot_39": {
                "a": {
                    "value": "self.lattice.e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "u",
                    "type": "Name",
                    "possible_values": []
                },
                "dims": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensordot_41": {
                "a": {
                    "value": "self.lattice.e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "u",
                    "type": "Name",
                    "possible_values": []
                },
                "dims": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/lattices.py": {
        "torch": {
            "einsum_126": {
                "equation": {
                    "value": "equation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "','.join(inputs) + '->' + output",
                            "BinOp"
                        ]
                    ]
                },
                "*operands": {
                    "value": "fields",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "sum_63": {
                "input": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_89": {
                "input": {
                    "value": "self.einsum('q,q->q', [f, 1 / self.w])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_53": {
                "data": {
                    "value": "array",
                    "type": "Name",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_55": {
                "data": {
                    "value": "array",
                    "type": "Name",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/moments.py": {
        "torch": {
            "zeros_like_146": {
                "variable": {
                    "value": "meq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "zeros_like_204": {
                "variable": {
                    "value": "meq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "zeros_like_424": {
                "variable": {
                    "value": "meq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "prod_22": {
                "input": {
                    "value": "torch.pow(e, multiindex[..., None, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "pow_22": {
                "input": {
                    "value": "e",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 / 4 * alpha2 * rho + 1 / 6 * gamma2 * (jx ** 2 + jy ** 2)",
                            "BinOp"
                        ]
                    ]
                },
                "exponent": {
                    "value": "multiindex[..., None, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/observables.py": {
        "torch": {
            "sum_56": {
                "variable": {
                    "value": "vorticity",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "(grad_u0[1] - grad_u1[0]) * (grad_u0[1] - grad_u1[0])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_75": {
                "variable": {
                    "value": "wavenumbers",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "torch.meshgrid(*frequencies)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "norm_76": {
                "variable": {
                    "value": "wavenorms",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "wavenumbers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.stack(torch.meshgrid(*frequencies))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "arange_83": {
                "variable": {
                    "value": "self.wavenumbers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "int(torch.max(wavenorms))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_113": {
                "variable": {
                    "value": "ekin",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5 * (uh[..., 0] ** 2 + uh[..., 1] ** 2)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_120": {
                "variable": {
                    "value": "ekin",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5 * (uh.imag ** 2 + uh.real ** 2)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_29": {
                "input": {
                    "value": "u",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.lattice.u(f)",
                            "Call"
                        ],
                        [
                            "self.lattice.u(f)",
                            "Call"
                        ],
                        [
                            "self.flow.units.convert_velocity_to_pu(u)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_37": {
                "input": {
                    "value": "self.lattice.incompressible_energy(f)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_60": {
                "input": {
                    "value": "(grad_u2[1] - grad_u1[2]) * (grad_u2[1] - grad_u1[2]) + (grad_u0[2] - grad_u2[0]) * (grad_u0[2] - grad_u2[0])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "meshgrid_75": {
                "*tensors": {
                    "value": "*frequencies",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "arange_97": {
                "start": {
                    "value": "self.lattice.D",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_109": {
                "*size": {
                    "value": "self.dimensions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.lattice.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_110": {
                "tensors": {
                    "value": "[torch.fft(torch.cat((u[i][..., None], zeros), self.lattice.D), signal_ndim=self.lattice.D) for i in range(self.lattice.D)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_117": {
                "tensors": {
                    "value": "[torch.fft.fftn(u[i], dim=tuple(torch.arange(self.lattice.D))) for i in range(self.lattice.D)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "max_83": {
                "input": {
                    "value": "wavenorms",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.norm(wavenumbers, dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "fft_111": {
                "input": {
                    "value": "torch.cat((u[i][..., None], zeros), self.lattice.D)",
                    "type": "Call",
                    "possible_values": []
                },
                "signal_ndim": {
                    "value": "self.lattice.D",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "fftn_118": {
                "input": {
                    "value": "u[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "tuple(torch.arange(self.lattice.D))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_111": {
                "tensors": {
                    "value": "(u[i][..., None], zeros)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "self.lattice.D",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_118": {
                "start": {
                    "value": "self.lattice.D",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/reporters.py": {
        "torch": {
            "pow_100": {
                "variable": {
                    "value": "resolution",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.prod(self.lattice.convert_to_tensor(p.size()))",
                    "type": "Call",
                    "possible_values": []
                },
                "exponent": {
                    "value": "1 / self.lattice.D",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "prod_100": {
                "input": {
                    "value": "self.lattice.convert_to_tensor(p.size())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "norm_102": {
                "input": {
                    "value": "u - uref",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_103": {
                "input": {
                    "value": "p - pref",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/simulation.py": {
        "torch": {
            "cat_132": {
                "variable": {
                    "value": "S",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[grad_u0, grad_u1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "where_72": {
                "variable": {
                    "value": "self.f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "condition": {
                    "value": "self.no_collision_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.collision(self.f)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_136": {
                "variable": {
                    "value": "S",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[S, grad_u2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "einsum_139": {
                "equation": {
                    "value": "ia,ib->iab",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "[self.lattice.e, self.lattice.e]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "max_104": {
                "input": {
                    "value": "torch.abs(p - p_old)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "eye_140": {
                "n": {
                    "value": "self.lattice.D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.lattice.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.lattice.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_104": {
                "input": {
                    "value": "p - p_old",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "lettuce/streaming.py": {
        "torch": {
            "roll_43": {
                "input": {
                    "value": "f[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shifts": {
                    "value": "tuple(self.lattice.stencil.e[i])",
                    "type": "Call",
                    "possible_values": []
                },
                "dims": {
                    "value": "tuple(np.arange(self.lattice.D))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "where_39": {
                "variable": {
                    "value": "f[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "condition": {
                    "value": "self.no_stream_mask[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "x": {
                    "value": "f[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "new_fi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._stream(f, i)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lettuce/unit.py": {
        "torch": {}
    },
    "lettuce/util.py": {
        "torch": {
            "cat_87": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "dim * [f[None, ...]]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_147": {
                "variable": {
                    "value": "error",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "residuum ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_like_179": {
                "variable": {
                    "value": "u_mod",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "u[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_178": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_96": {
                "data": {
                    "value": "1.0 / dx",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "f.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "f.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/conftest.py": {
        "torch": {
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_boundaries.py": {
        "torch": {
            "einsum_47": {
                "variable": {
                    "value": "feq_field",
                    "type": "Name",
                    "possible_values": []
                },
                "equation": {
                    "value": "q,q...->q...",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "feq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.equilibrium(lattice.convert_to_tensor(units.convert_pressure_pu_to_density_lu(pressure)), lattice.convert_to_tensor(units.convert_velocity_to_lu(velocity)))",
                            "Call"
                        ],
                        [
                            "lattice.equilibrium(torch.ones_like(rho), u)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_167": {
                "variable": {
                    "value": "zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "p[0, -1, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "norm_96": {
                "variable": {
                    "value": "u_w_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "u_w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :] + 0.5 * (u[:, -1, :] - u[:, -2, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1] + 0.5 * (u[:, -1] - u[:, -2])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_109": {
                "variable": {
                    "value": "u_w_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "u_w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :] + 0.5 * (u[:, -1, :] - u[:, -2, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1] + 0.5 * (u[:, -1] - u[:, -2])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "allclose_168": {
                "input": {
                    "value": "zeros",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros_like(p[0, -1, :])",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "p[:, -1, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "rtol": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "atol": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "allclose_169": {
                "input": {
                    "value": "zeros",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros_like(p[0, -1, :])",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "p[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "rtol": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "atol": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "allclose_170": {
                "input": {
                    "value": "zeros",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros_like(p[0, -1, :])",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "p[:, :, -1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "rtol": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "atol": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "allclose_171": {
                "input": {
                    "value": "feq[:, -1, 1:-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "feq[:, -2, 1:-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_like_47": {
                "input": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": [
                        [
                            "bounce_back(f)",
                            "Call"
                        ],
                        [
                            "bounce_back(f)",
                            "Call"
                        ],
                        [
                            "eq_boundary(f)",
                            "Call"
                        ],
                        [
                            "abb_outlet(f)",
                            "Call"
                        ]
                    ]
                }
            },
            "norm_71": {
                "variable": {
                    "value": "u_w_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "u_w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :] + 0.5 * (u[:, -1, :] - u[:, -2, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1] + 0.5 * (u[:, -1] - u[:, -2])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_83": {
                "variable": {
                    "value": "u_w_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "u_w",
                    "type": "Name",
                    "possible_values": [
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :] + 0.5 * (u[:, -1, :] - u[:, -2, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1, :, :] + 0.5 * (u[:, -1, :, :] - u[:, -2, :, :])",
                            "BinOp"
                        ],
                        [
                            "u[:, -1] + 0.5 * (u[:, -1] - u[:, -2])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_99": {
                "variable": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "lattice.stencil.e[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "f.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "f.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_112": {
                "variable": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "lattice.stencil.e[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "f.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "f.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_165": {
                "input": {
                    "value": "rho",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.rho(simulation.f)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_74": {
                "variable": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "lattice.stencil.e[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "f.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "f.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_86": {
                "variable": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "lattice.stencil.e[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "f.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "f.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "einsum_103": {
                "equation": {
                    "value": "c, cy -> y",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "einsum_116": {
                "equation": {
                    "value": "c, x -> x",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "einsum_78": {
                "equation": {
                    "value": "c, cyz -> yz",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "einsum_90": {
                "equation": {
                    "value": "c, cyz -> yz",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "stencil_e_tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ],
                        [
                            "torch.tensor(lattice.stencil.e[i], device=f.device, dtype=f.dtype)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/test_flows.py": {
        "torch": {
            "sum_46": {
                "input": {
                    "value": "lattice.incompressible_energy(simulation.f)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_force.py": {
        "torch": {
            "as_tensor_24": {
                "data": {
                    "value": "acceleration_lu",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flow.units.convert_acceleration_to_lu(flow.acceleration)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_readme.py": {
        "torch": {}
    },
    "tests/test_reporters.py": {
        "torch": {
            "DataLoader_101": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "LettuceDataset(filebase=tmpdir / 'output.h5', target=True)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_simulation.py": {
        "torch": {
            "allclose_75": {
                "input": {
                    "value": "pre_rho",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.rho(simulation_neq.f)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "post_rho",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.rho(simulation_neq.f)",
                            "Call"
                        ]
                    ]
                },
                "rtol": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "atol": {
                    "value": "tol",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1e-06",
                            "Constant"
                        ]
                    ]
                }
            },
            "allclose_76": {
                "input": {
                    "value": "pre_u",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.u(simulation_neq.f)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "post_u",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.u(simulation_neq.f)",
                            "Call"
                        ]
                    ]
                },
                "rtol": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "atol": {
                    "value": "tol",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1e-06",
                            "Constant"
                        ]
                    ]
                }
            },
            "allclose_77": {
                "input": {
                    "value": "pre_ke",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.incompressible_energy(simulation_neq.f)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "post_ke",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.incompressible_energy(simulation_neq.f)",
                            "Call"
                        ]
                    ]
                },
                "rtol": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "atol": {
                    "value": "tol",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1e-06",
                            "Constant"
                        ]
                    ]
                }
            }
        }
    },
    "tests/test_util.py": {
        "torch": {
            "isclose_68": {
                "input": {
                    "value": "lattice.u(f_c)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "u_init",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.convert_to_tensor(flow_c.units.convert_velocity_to_lu(u_init))",
                            "Call"
                        ]
                    ]
                }
            },
            "all_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isclose_69": {
                "input": {
                    "value": "lattice.rho(f_c)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "rho_init",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.convert_to_tensor(flow_c.units.convert_pressure_pu_to_density_lu(p_init))",
                            "Call"
                        ]
                    ]
                }
            },
            "all_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isclose_70": {
                "input": {
                    "value": "f_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "grid_fine_to_coarse(lattice, sim_f.f, flow_f.units.relaxation_parameter_lu, flow_c.units.relaxation_parameter_lu)",
                            "Call"
                        ],
                        [
                            "grid_fine_to_coarse(lattice, sim_f.f, flow_f.units.relaxation_parameter_lu, flow_c.units.relaxation_parameter_lu)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "sim_c.f",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "all_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isclose_71": {
                "input": {
                    "value": "shear_c_init",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.shear_tensor(sim_c.f)",
                            "Call"
                        ],
                        [
                            "lattice.shear_tensor(sim_c.f)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "shear_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.shear_tensor(f_c)",
                            "Call"
                        ],
                        [
                            "lattice.shear_tensor(f_c)",
                            "Call"
                        ]
                    ]
                }
            },
            "all_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isclose_100": {
                "input": {
                    "value": "f_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "grid_fine_to_coarse(lattice, sim_f.f, flow_f.units.relaxation_parameter_lu, flow_c.units.relaxation_parameter_lu)",
                            "Call"
                        ],
                        [
                            "grid_fine_to_coarse(lattice, sim_f.f, flow_f.units.relaxation_parameter_lu, flow_c.units.relaxation_parameter_lu)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "sim_c.f",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "all_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isclose_101": {
                "input": {
                    "value": "shear_c_init",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.shear_tensor(sim_c.f)",
                            "Call"
                        ],
                        [
                            "lattice.shear_tensor(sim_c.f)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "shear_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lattice.shear_tensor(f_c)",
                            "Call"
                        ],
                        [
                            "lattice.shear_tensor(f_c)",
                            "Call"
                        ]
                    ]
                }
            },
            "all_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_113": {
                "input": {
                    "value": "rho0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flow.units.convert_pressure_pu_to_density_lu(lattice.convert_to_tensor(p0))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}