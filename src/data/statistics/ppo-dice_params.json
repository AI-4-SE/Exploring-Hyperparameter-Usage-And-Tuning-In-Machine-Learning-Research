{
    "agents/algo/ppo.py": {
        "torch": {
            "Adam_52": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "actor_critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "eps": {
                    "value": "eps",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "exp_82": {
                "variable": {
                    "value": "ratio",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "action_log_probs - old_action_log_probs_batch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_grad_norm__103": {
                "parameters": {
                    "value": "self.actor_critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.max_grad_norm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_112": {
                "variable": {
                    "value": "ratios",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "new_action_log_probs - old_action_log_probs_batch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clamp_85": {
                "input": {
                    "value": "ratio",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.exp(action_log_probs - old_action_log_probs_batch)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "1.0 - self.clip_param",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 + self.clip_param",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_87": {
                "input": {
                    "value": "surr1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ratio * adv_targ",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mean_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_95": {
                "input": {
                    "value": "value_losses",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(values - return_batch).pow(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "agents/algo/ppo_dice.py": {
        "torch": {
            "Adam_54": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "actor_critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "eps": {
                    "value": "eps",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Adam_55": {
                "variable": {
                    "value": "self.disc_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "discriminator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "disc_lr_factor * lr",
                    "type": "BinOp",
                    "possible_values": []
                },
                "eps": {
                    "value": "eps",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "exp_96": {
                "variable": {
                    "value": "ratio",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "action_log_probs - old_action_log_probs_batch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "grad_148": {
                "variable": {
                    "value": "gradient",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "disc_outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "discriminator(obs_inputs, action_inputs)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "[obs_inputs, action_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "grad_outputs": {
                    "value": "torch.ones(disc_outputs.size(), device=self.device)",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "only_inputs": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "allow_unused": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_152": {
                "variable": {
                    "value": "gradient",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "gradient",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.autograd.grad(outputs=disc_outputs, inputs=[obs_inputs, action_inputs], grad_outputs=torch.ones(disc_outputs.size(), device=self.device), create_graph=True, retain_graph=True, only_inputs=True, allow_unused=True)",
                            "Call"
                        ],
                        [
                            "torch.cat(gradient, dim=1)",
                            "Call"
                        ],
                        [
                            "gradient.view(gradient.size(0), -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_grad_norm__192": {
                "parameters": {
                    "value": "self.actor_critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.max_grad_norm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_201": {
                "variable": {
                    "value": "ratios",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "new_action_log_probs - action_log_probs",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_85": {
                "input": {
                    "value": "masks_batch",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "clamp_102": {
                "input": {
                    "value": "ratio",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.exp(action_log_probs - old_action_log_probs_batch)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "1.0 - self.clip_param",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 + self.clip_param",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_104": {
                "input": {
                    "value": "surr1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ratio * adv_targ",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mean_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_155": {
                "input": {
                    "value": "diff ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_grad_norm__171": {
                "parameters": {
                    "value": "self.discriminator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.max_grad_norm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_196": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_112": {
                "input": {
                    "value": "value_losses",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(values - return_batch).pow(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_142": {
                "tensors": {
                    "value": "[obs_batch, next_obs_batch]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_144": {
                "tensors": {
                    "value": "[actions_batch.float(), next_actions_batch.float()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sort_183": {
                "input": {
                    "value": "torch.abs(adv_targ)",
                    "type": "Call",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ones_149": {
                "*size": {
                    "value": "disc_outputs.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_183": {
                "input": {
                    "value": "adv_targ",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_134": {
                "input": {
                    "value": "bell_residuel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "g - self.gamma * g_next",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_130": {
                "input": {
                    "value": "bell_residuel",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "g - self.gamma * g_next",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "agents/arguments.py": {
        "torch": {
            "is_available_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "agents/distributions.py": {
        "torch": {
            "gt_71": {
                "input": {
                    "value": "self.probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_105": {
                "variable": {
                    "value": "zeros",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "action_mean.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_84": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "num_outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_120": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "agents/envs.py": {
        "torch": {
            "from_numpy_190": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.venv.reset()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "np.clip((obs - self.ob_rms.mean) / np.sqrt(self.ob_rms.var + self.epsilon), -self.clipob, self.clipob)",
                            "Call"
                        ],
                        [
                            "self.venv.reset()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_202": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.venv.reset()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "np.clip((obs - self.ob_rms.mean) / np.sqrt(self.ob_rms.var + self.epsilon), -self.clipob, self.clipob)",
                            "Call"
                        ],
                        [
                            "self.venv.reset()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_203": {
                "variable": {
                    "value": "reward",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "reward",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(reward).unsqueeze(dim=1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_203": {
                "variable": {
                    "value": "reward",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_245": {
                "variable": {
                    "value": "self.stacked_obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(venv.num_envs,) + low.shape",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_244": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_265": {
                "variable": {
                    "value": "self.stacked_obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.stacked_obs.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "agents/model.py": {
        "torch": {
            "Sequential_347": {
                "variable": {
                    "value": "self.main",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(nn.Conv2d(num_inputs, 32, 8, stride=4))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_379": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_383": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_47": {
                "variable": {
                    "value": "self.base",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(nn.Linear(state_dim, 64))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_97": {
                "variable": {
                    "value": "self.main",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(nn.Linear(state_dim + action_dim, 64))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "self.main",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "relu_init_(nn.Conv2d(state_dim, 32, 8, stride=4))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GRU_261": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "recurrent_input_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_332": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_108": {
                "tensors": {
                    "value": "[state, action]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Sequential_140": {
                "variable": {
                    "value": "self.main",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(nn.Linear(state_dim + action_dim, 64))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_348": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_349": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_350": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_351": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_356": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_380": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_381": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_384": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_385": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_387": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_129": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_131": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_174": {
                "tensors": {
                    "value": "[state, action]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2d_348": {
                "in_channels": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_349": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_350": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_351": {
                "in_features": {
                    "value": "32 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_380": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_381": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_384": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "Name"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_385": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "state_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "in_features": {
                    "value": "state_dim + action_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_99": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_128": {
                "in_channels": {
                    "value": "state_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs_shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_129": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_130": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_131": {
                "in_features": {
                    "value": "32 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_132": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "action_space.shape[0]",
                            "Subscript"
                        ],
                        [
                            "action_space.shape[0]",
                            "Subscript"
                        ],
                        [
                            "action_space.n",
                            "Attribute"
                        ],
                        [
                            "action_space.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ReLU_141": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_142": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_141": {
                "in_features": {
                    "value": "state_dim + action_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_142": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_143": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "agents/storage.py": {
        "torch": {
            "zeros_32": {
                "variable": {
                    "value": "self.initial_obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "*obs_shape",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "self.obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "*obs_shape",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "self.recurrent_hidden_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "recurrent_hidden_state_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "self.rewards",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_37": {
                "variable": {
                    "value": "self.value_preds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_38": {
                "variable": {
                    "value": "self.returns",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "self.action_log_probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_44": {
                "variable": {
                    "value": "self.actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "action_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "action_space.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_47": {
                "variable": {
                    "value": "self.masks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_51": {
                "variable": {
                    "value": "self.bad_masks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchSampler_147": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "sampler": {
                    "value": "SubsetRandomSampler(range(batch_size))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "mini_batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "batch_size // num_mini_batch",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randperm_190": {
                "variable": {
                    "value": "perm",
                    "type": "Variable",
                    "possible_values": []
                },
                "n": {
                    "value": "num_processes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_216": {
                "variable": {
                    "value": "obs_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "obs_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.obs[:-1].view(-1, *self.obs.size()[2:])[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(obs_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, obs_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_217": {
                "variable": {
                    "value": "actions_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "actions_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.actions.view(-1, self.actions.size(-1))[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(actions_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, actions_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_218": {
                "variable": {
                    "value": "value_preds_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "value_preds_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.value_preds[:-1].view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(value_preds_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, value_preds_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_219": {
                "variable": {
                    "value": "return_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "return_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.returns[:-1].view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(return_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, return_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_220": {
                "variable": {
                    "value": "masks_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "masks_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.masks[:-1].view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(masks_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, masks_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_221": {
                "variable": {
                    "value": "old_action_log_probs_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "old_action_log_probs_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.action_log_probs.view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(old_action_log_probs_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, old_action_log_probs_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_223": {
                "variable": {
                    "value": "adv_targ",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "adv_targ",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "advantages.view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(adv_targ, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, adv_targ)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_226": {
                "variable": {
                    "value": "recurrent_hidden_states_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "recurrent_hidden_states_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_148": {
                "indices": {
                    "value": "range(batch_size)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "agents/utils.py": {
        "torch": {
            "zeros_31": {
                "variable": {
                    "value": "orth_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_67": {
                "variable": {
                    "value": "self._bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "bias.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "enable_grad_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mm_36": {
                "variable": {
                    "value": "sym",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "param_flat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "param.view(param.shape[0], -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.t(param_flat)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "t_36": {
                "input": {
                    "value": "param_flat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "param.view(param.shape[0], -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_37": {
                "*size": {
                    "value": "param_flat.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "eye_37": {
                "n": {
                    "value": "param_flat.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "device_39": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_26": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_27": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_num_threads_38": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_173": {
                "obj": {
                    "value": "[actor_critic, getattr(utils.get_vec_normalize(envs), 'ob_rms', None)]",
                    "type": "List",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(save_path, args.env_name + '.pt')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "trpo/main.py": {
        "torch": {
            "set_default_tensor_type_41": {
                "t": {
                    "value": "torch.DoubleTensor",
                    "type": "str",
                    "possible_values": []
                }
            },
            "manual_seed_75": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_82": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "env.reset()",
                            "Call"
                        ],
                        [
                            "running_state(state)",
                            "Call"
                        ],
                        [
                            "next_state",
                            "Name"
                        ],
                        [
                            "torch.from_numpy(state).unsqueeze(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_82": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normal_84": {
                "variable": {
                    "value": "action",
                    "type": "Variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "action_mean",
                    "type": "Variable",
                    "possible_values": []
                },
                "std": {
                    "value": "action_std",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_91": {
                "variable": {
                    "value": "actions",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_92": {
                "variable": {
                    "value": "states",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_95": {
                "variable": {
                    "value": "returns",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_96": {
                "variable": {
                    "value": "deltas",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_97": {
                "variable": {
                    "value": "advantages",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Tensor_131": {},
            "Tensor_115": {},
            "exp_146": {
                "input": {
                    "value": "log_prob - Variable(fixed_log_prob)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_140": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "trpo/models.py": {
        "torch": {
            "Linear_29": {
                "variable": {
                    "value": "self.affine1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.affine2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.action_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Parameter_36": {
                "variable": {
                    "value": "self.action_log_std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, num_outputs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_43": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.affine1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_44": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.affine2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_48": {
                "variable": {
                    "value": "action_std",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "action_log_std",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.action_log_std.expand_as(action_mean)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_56": {
                "variable": {
                    "value": "self.affine1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "variable": {
                    "value": "self.affine2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "variable": {
                    "value": "self.value_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_63": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.affine1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_64": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.affine2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_73": {
                "variable": {
                    "value": "self.state_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "state_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_74": {
                "variable": {
                    "value": "self.action_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "action_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "variable": {
                    "value": "self.affine1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "variable": {
                    "value": "self.value_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_83": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.concatenate([s, a])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_84": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.affine(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "num_outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "trpo/opt.py": {
        "torch": {
            "zeros_29": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "b.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dot_32": {
                "variable": {
                    "value": "rdotr",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b.clone()",
                            "Call"
                        ],
                        [
                            "r - alpha * _Avp",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "r",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b.clone()",
                            "Call"
                        ],
                        [
                            "r - alpha * _Avp",
                            "BinOp"
                        ]
                    ]
                }
            },
            "grad_73": {
                "variable": {
                    "value": "grads",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "get_loss()",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_93": {
                "variable": {
                    "value": "lm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "shs / max_kl",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dot_38": {
                "variable": {
                    "value": "new_rdotr",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b.clone()",
                            "Call"
                        ],
                        [
                            "r - alpha * _Avp",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "r",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b.clone()",
                            "Call"
                        ],
                        [
                            "r - alpha * _Avp",
                            "BinOp"
                        ]
                    ]
                }
            },
            "grad_80": {
                "variable": {
                    "value": "grads",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "kl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "get_kl()",
                            "Call"
                        ],
                        [
                            "kl.mean()",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_81": {
                "variable": {
                    "value": "flat_grad_kl",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[grad.view(-1) for grad in grads]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "grad_84": {
                "variable": {
                    "value": "grads",
                    "type": "Variable",
                    "possible_values": []
                },
                "outputs": {
                    "value": "kl_v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(flat_grad_kl * Variable(v)).sum()",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_74": {
                "tensors": {
                    "value": "[grad.view(-1) for grad in grads]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "dot_35": {
                "input": {
                    "value": "p",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "b.clone()",
                            "Call"
                        ],
                        [
                            "r + betta * p",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "_Avp",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Avp(p)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_85": {
                "tensors": {
                    "value": "[grad.contiguous().view(-1) for grad in grads]",
                    "type": "ListComp",
                    "possible_values": []
                }
            }
        }
    },
    "trpo/utils.py": {
        "torch": {
            "cat_47": {
                "variable": {
                    "value": "flat_params",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cat_68": {
                "variable": {
                    "value": "flat_grad",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "grads",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "log_31": {
                "input": {
                    "value": "2 * var * math.pi",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}