{
    "dope.py": {
        "torch": {
            "load_38": {
                "variable": {
                    "value": "ckpt",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "ckpt_fname",
                    "type": "Name",
                    "possible_values": [
                        [
                            "osp.join(_thisdir, 'models', modelname + '.pth.tgz')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'cuda:0' if torch.cuda.is_available() else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "is_available_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Linear_109": {
                "variable": {
                    "value": "self.body_cls_score",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dict_num_classes['body']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_110": {
                "variable": {
                    "value": "self.body_pose_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dict_num_posereg['body']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.hand_cls_score",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dict_num_classes['hand']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.hand_pose_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dict_num_posereg['hand']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_113": {
                "variable": {
                    "value": "self.face_cls_score",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dict_num_classes['face']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_114": {
                "variable": {
                    "value": "self.face_pose_pred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dict_num_posereg['face']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "softmax_219": {
                "variable": {
                    "value": "sc",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "class_logits[k]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "flatten_285": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.resnet_backbone.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.relu(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "x.flatten(start_dim=1)",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "empty_155": {
                "*size": {
                    "value": "(num_anchor_poses[k], num_joints[k], 5)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "batch_norm_253": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.resnet_backbone.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.relu(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer1(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer2(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer3(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.layer4(x)",
                            "Call"
                        ],
                        [
                            "self.resnet_backbone.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "x.flatten(start_dim=1)",
                            "Call"
                        ]
                    ]
                },
                "running_mean": {
                    "value": "self.running_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "running_var": {
                    "value": "self.running_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "postprocess.py": {
        "torch": {
            "min_10": {
                "variable": {
                    "value": "(x1y1, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "poses",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_11": {
                "variable": {
                    "value": "(x2y2, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "poses",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_12": {
                "variable": {
                    "value": "coords",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1y1, x2y2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_21": {
                "variable": {
                    "value": "(maxscores, bestcls)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "scores[:, 1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "nonzero_22": {
                "variable": {
                    "value": "valid_indices",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "maxscores >= min_score",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    }
}