{
    "crowd/database_preprocessor.py": {
        "sklearn": {
            "NearestNeighbors_143": {
                "variable": {
                    "value": "nearest_neighbors",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "number_of_neighbors",
                    "type": "variable",
                    "possible_values": [
                        [
                            "min(11, len(head_positions))",
                            "Call"
                        ],
                        [
                            "min(number_of_neighbors, len(head_positions))",
                            "Call"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "algorithm": {
                    "value": "ball_tree",
                    "type": "str",
                    "possible_values": []
                }
            },
            "NearestNeighbors_283": {
                "variable": {
                    "value": "nearest_neighbors_fit",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "number_of_neighbors",
                    "type": "variable",
                    "possible_values": [
                        [
                            "min(11, len(head_positions))",
                            "Call"
                        ],
                        [
                            "min(number_of_neighbors, len(head_positions))",
                            "Call"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "algorithm": {
                    "value": "ball_tree",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "driving/data.py": {
        "sklearn": {},
        "torch": {
            "tensor_47": {
                "variable": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "image.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_50": {
                "variable": {
                    "value": "angle",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "angle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.angles[index]",
                            "Subscript"
                        ],
                        [
                            "torch.tensor(angle, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "age/data.py": {
        "torch": {
            "tensor_56": {
                "variable": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "image.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_59": {
                "variable": {
                    "value": "age",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "age",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ages[idx]",
                            "Subscript"
                        ],
                        [
                            "torch.tensor(age, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "age/models.py": {
        "torch": {
            "Sequential_21": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_29": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "leaky_relu_48": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_49": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_50": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tanh_51": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_70": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_71": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_72": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_73": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_18": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "age/sgan.py": {
        "torch": {
            "linspace_14": {
                "variable": {
                    "value": "self.bins",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "95",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "settings.number_of_bins",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "age/srgan.py": {
        "torch": {
            "DataLoader_29": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_35": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.unlabeled_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_74": {
                "variable": {
                    "value": "train_dataset_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.train_dataset",
                            "Attribute"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randn_80": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "G.input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_85": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "MixtureModel([norm(-settings.mean_offset, 1), norm(settings.mean_offset, 1)]).rvs(size=[settings.batch_size, G.input_size]).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_94": {
                "variable": {
                    "value": "dataset_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "age/vgg.py": {
        "torch": {
            "Sequential_33": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(512 * 7 * 7, 4096)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "variable": {
                    "value": "self.final_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_84": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg_",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "512 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_76": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_80": {
                "num_features": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg_",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_80": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_82": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "coefficient/data.py": {
        "torch": {}
    },
    "coefficient/dggan.py": {
        "torch": {
            "BCEWithLogitsLoss_39": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_48": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_62": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_95": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "MixtureModel([norm(-settings.mean_offset, 1), norm(settings.mean_offset, 1)]).rvs(size=[settings.batch_size, G.input_size]).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_105": {
                "variable": {
                    "value": "unlabeled_examples",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "unlabeled_examples_array.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_40": {
                "input": {
                    "value": "fake_scores",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ones_like_49": {
                "input": {
                    "value": "fake_scores",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_63": {
                "input": {
                    "value": "fake_scores",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_77": {
                "data": {
                    "value": "train_dataset.examples.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_81": {
                "data": {
                    "value": "validation_dataset.examples.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_85": {
                "data": {
                    "value": "train_dataset.examples.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_89": {
                "data": {
                    "value": "validation_dataset.examples.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "coefficient/models.py": {
        "torch": {
            "Linear_17": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "observation_count * irrelevant_data_multiplier",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "leaky_relu_24": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_25": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_26": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_36": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "observation_count * irrelevant_data_multiplier",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_41": {
                "variable": {
                    "value": "self.gradient_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_45": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_46": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_47": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "observation_count * irrelevant_data_multiplier",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_60": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_61": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_63": {
                "variable": {
                    "value": "self.gradient_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_67": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_68": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_69": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_80": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "observation_count * irrelevant_data_multiplier",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_81": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_82": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "number_of_bins",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "tensor_85": {
                "variable": {
                    "value": "self.gradient_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_89": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_90": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_91": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "coefficient/sgan.py": {
        "torch": {
            "linspace_15": {
                "variable": {
                    "value": "self.bins",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "-3",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.settings.number_of_bins",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_40": {
                "variable": {
                    "value": "examples_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "dataset.examples.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "coefficient/srgan.py": {
        "torch": {
            "DataLoader_25": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_29": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.unlabeled_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_56": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "MixtureModel([norm(-settings.mean_offset, 1), norm(settings.mean_offset, 1)]).rvs(size=[settings.batch_size, G.input_size]).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_66": {
                "variable": {
                    "value": "unlabeled_examples",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "unlabeled_examples_array.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_90": {
                "data": {
                    "value": "dataset.examples.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "crowd/data.py": {
        "torch": {
            "tensor_54": {
                "variable": {
                    "value": "example.image",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "example.image",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_56": {
                "variable": {
                    "value": "example.label",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "example.label",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "variable": {
                    "value": "example.map",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "example.map",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_60": {
                "variable": {
                    "value": "example.roi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "example.roi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_62": {
                "variable": {
                    "value": "example.perspective",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "example.perspective",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "crowd/dggan.py": {
        "torch": {
            "BCEWithLogitsLoss_21": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_31": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_47": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_22": {
                "input": {
                    "value": "fake_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ones_like_32": {
                "input": {
                    "value": "fake_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_like_48": {
                "input": {
                    "value": "fake_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ],
                        [
                            "self.D.real_label",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "crowd/dnn.py": {
        "torch": {
            "DataLoader_30": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_42": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_82": {
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.train_dataset",
                            "Attribute"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_87": {
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.train_dataset",
                            "Attribute"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_57": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "crowd/models.py": {
        "torch": {
            "Conv2d_26": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "variable": {
                    "value": "self.max_pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv1.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "self.max_pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv2.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv3.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "18",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv4.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "400",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.count_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv5.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.density_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv5.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "324",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_56": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_58": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_60": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_61": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_62": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_64": {
                "variable": {
                    "value": "x_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.count_conv(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_65": {
                "variable": {
                    "value": "x_density",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.density_conv(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_77": {
                "variable": {
                    "value": "self.conv_transpose1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "18",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_78": {
                "variable": {
                    "value": "self.conv_transpose2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv_transpose1.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_80": {
                "variable": {
                    "value": "self.conv_transpose3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv_transpose2.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_93": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv_transpose1(z)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_94": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv_transpose2(z)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_95": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv_transpose3(z)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_116": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_124": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "leaky_relu_143": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_144": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_145": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tanh_146": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_167": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_168": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_169": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_170": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "max_pool2d_198": {
                "input": {
                    "value": "input_",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_.size(2) // output_size",
                            "BinOp"
                        ],
                        [
                            "kernel_size + 1",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_207": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_208": {
                "variable": {
                    "value": "self.max_pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_209": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv1.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_210": {
                "variable": {
                    "value": "self.max_pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_211": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv2.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_212": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv3.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_213": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv4.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_214": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv5.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_215": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv6.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_217": {
                "variable": {
                    "value": "self.f5_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "912",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_218": {
                "variable": {
                    "value": "self.f5_density",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.density_label_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_219": {
                "variable": {
                    "value": "self.f5_count",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_221": {
                "variable": {
                    "value": "self.f7_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "912",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_222": {
                "variable": {
                    "value": "self.f7_density",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.density_label_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_223": {
                "variable": {
                    "value": "self.f7_count",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_228": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_230": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_232": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_233": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_234": {
                "variable": {
                    "value": "out5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_235": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6(out5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_236": {
                "variable": {
                    "value": "out7",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_242": {
                "variable": {
                    "value": "f5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f5_1, f5_2, f5_4, f5_6]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_243": {
                "variable": {
                    "value": "f5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f5_fc1(f5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_244": {
                "variable": {
                    "value": "f5_density",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f5_density(f5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_245": {
                "variable": {
                    "value": "f5_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f5_count(f5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_251": {
                "variable": {
                    "value": "f7",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f7_1, f7_2, f7_4, f7_6]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_252": {
                "variable": {
                    "value": "f7",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f7_fc1(f7)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_253": {
                "variable": {
                    "value": "f7_density",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f7_density(f7)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_254": {
                "variable": {
                    "value": "f7_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f7_count(f7)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_256": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f5, f7]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_270": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_271": {
                "variable": {
                    "value": "self.max_pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_272": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv1.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_273": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.conv2.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_274": {
                "variable": {
                    "value": "self.max_pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_275": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv2.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_276": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.conv3.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_277": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv3.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_278": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.conv4.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_279": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv4.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_280": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.conv5.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_281": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv5.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_282": {
                "variable": {
                    "value": "self.bn6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.conv6.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_283": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.conv6.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_284": {
                "variable": {
                    "value": "self.bn7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.conv7.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_286": {
                "variable": {
                    "value": "self.f5_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "912",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_287": {
                "variable": {
                    "value": "self.f5_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_288": {
                "variable": {
                    "value": "self.f5_density",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.density_label_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_289": {
                "variable": {
                    "value": "self.f5_count",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_291": {
                "variable": {
                    "value": "self.f7_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "912",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_292": {
                "variable": {
                    "value": "self.f7_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_293": {
                "variable": {
                    "value": "self.f7_density",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.density_label_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_294": {
                "variable": {
                    "value": "self.f7_count",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_299": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_301": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.conv2(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_303": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.conv3(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_304": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.conv4(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_305": {
                "variable": {
                    "value": "out5",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.conv5(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_306": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn6(self.conv6(out5))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_307": {
                "variable": {
                    "value": "out7",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn7(self.conv7(out))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_313": {
                "variable": {
                    "value": "f5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f5_1, f5_2, f5_4, f5_6]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_315": {
                "variable": {
                    "value": "f5_density",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f5_density(f5_do)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_316": {
                "variable": {
                    "value": "f5_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f5_count(f5_do)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_322": {
                "variable": {
                    "value": "f7",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f7_1, f7_2, f7_4, f7_6]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_324": {
                "variable": {
                    "value": "f7_density",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f7_density(f7_do)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_325": {
                "variable": {
                    "value": "f7_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.f7_count(f7_do)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_327": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[f5, f7]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_378": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_379": {
                "variable": {
                    "value": "self.fc_density",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "label_patch_size ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_380": {
                "variable": {
                    "value": "self.fc_count",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_384": {
                "variable": {
                    "value": "fc_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_385": {
                "variable": {
                    "value": "fc_density_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc_density(fc_out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_386": {
                "variable": {
                    "value": "fc_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc_count(fc_out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_402": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[p1, p2, p3, p4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_424": {
                "variable": {
                    "value": "self.dense_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_425": {
                "variable": {
                    "value": "self.transition_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_428": {
                "variable": {
                    "value": "self.conv_layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_448": {
                "variable": {
                    "value": "self.norm5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "relu_503": {
                "variable": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_504": {
                "variable": {
                    "value": "final_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_536": {
                "variable": {
                    "value": "self.dense_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_559": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_574": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_layers(x)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_575": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.fc(z)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer1(out), 0.05)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer2(out), 0.05)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer3(out), 0.05)",
                            "Call"
                        ],
                        [
                            "tanh(self.layer4(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer1(x), 0.05)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer2(out), 0.05)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer3(out), 0.05)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.layer4(out), 0.05)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.max_pool1(out)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "self.max_pool2(out)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv4(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv6(out5))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.max_pool1(out)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.bn2(self.conv2(out)))",
                            "Call"
                        ],
                        [
                            "self.max_pool2(out)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.bn3(self.conv3(out)))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.bn4(self.conv4(out)))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.bn6(self.conv6(out5)))",
                            "Call"
                        ],
                        [
                            "torch.cat([p1, p2, p3, p4], dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv_layer1(x)",
                            "Call"
                        ],
                        [
                            "relu(features, inplace=True)",
                            "Call"
                        ],
                        [
                            "avg_pool2d(out, kernel_size=7, stride=1).view(features.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.classifier(out)",
                            "Call"
                        ],
                        [
                            "self.dense_net_module(x)",
                            "Call"
                        ],
                        [
                            "out.view(-1)",
                            "Call"
                        ],
                        [
                            "self.dense_net_module(x)",
                            "Call"
                        ],
                        [
                            "out.view(-1, 2)",
                            "Call"
                        ],
                        [
                            "self.conv_layer1(x)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv1(map_))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.linear1(out))",
                            "Call"
                        ],
                        [
                            "self.conv_layer1(x)",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv1(map_))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.conv3(out))",
                            "Call"
                        ],
                        [
                            "leaky_relu(self.linear1(out))",
                            "Call"
                        ],
                        [
                            "self.conv_layer1(x)",
                            "Call"
                        ],
                        [
                            "self.conv_layer1(x)",
                            "Call"
                        ],
                        [
                            "self.conv_layer1(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_675": {
                "variable": {
                    "value": "self.dense_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_676": {
                "variable": {
                    "value": "self.transition_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_679": {
                "variable": {
                    "value": "self.conv_layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_699": {
                "variable": {
                    "value": "self.norm5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_739": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_740": {
                "variable": {
                    "value": "self.knn1_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_754": {
                "variable": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_755": {
                "variable": {
                    "value": "final_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_757": {
                "variable": {
                    "value": "density",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_758": {
                "variable": {
                    "value": "count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.count_layer(final_pool)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_759": {
                "variable": {
                    "value": "map_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.knn1_layer(t1_out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_768": {
                "variable": {
                    "value": "self.map_transposed_conv_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_.size(2) // output_size",
                            "BinOp"
                        ],
                        [
                            "kernel_size + 1",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ]
                    ]
                },
                "stride": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_.size(2) // output_size",
                            "BinOp"
                        ],
                        [
                            "kernel_size + 1",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_770": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_771": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_772": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_774": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "count_layer_kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "label_size // 2 ** 3",
                            "BinOp"
                        ],
                        [
                            "label_size // 2 ** 3",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_775": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_780": {
                "variable": {
                    "value": "map_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.map_transposed_conv_layer(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_781": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(map_)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_782": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_783": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_784": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_807": {
                "variable": {
                    "value": "self.dense_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_808": {
                "variable": {
                    "value": "self.transition_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_811": {
                "variable": {
                    "value": "self.conv_layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_831": {
                "variable": {
                    "value": "self.norm5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_871": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_888": {
                "variable": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_889": {
                "variable": {
                    "value": "final_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_891": {
                "variable": {
                    "value": "density",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_892": {
                "variable": {
                    "value": "final_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.count_layer(final_pool)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_908": {
                "variable": {
                    "value": "self.map_transposed_conv_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_.size(2) // output_size",
                            "BinOp"
                        ],
                        [
                            "kernel_size + 1",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ]
                    ]
                },
                "stride": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_.size(2) // output_size",
                            "BinOp"
                        ],
                        [
                            "kernel_size + 1",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ],
                        [
                            "label_size // input_size",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_910": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_911": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_912": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_914": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "count_layer_kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "label_size // 2 ** 3",
                            "BinOp"
                        ],
                        [
                            "label_size // 2 ** 3",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_915": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_920": {
                "variable": {
                    "value": "map_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.map_transposed_conv_layer(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_921": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(map_)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_922": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_923": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_924": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_947": {
                "variable": {
                    "value": "self.dense_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_948": {
                "variable": {
                    "value": "self.transition_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_951": {
                "variable": {
                    "value": "self.conv_layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_971": {
                "variable": {
                    "value": "self.norm5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_1014": {
                "variable": {
                    "value": "self.final_count_feature_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1015": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_1031": {
                "variable": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_1032": {
                "variable": {
                    "value": "final_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_1034": {
                "variable": {
                    "value": "density",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_1035": {
                "variable": {
                    "value": "final_count_features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.final_count_feature_layer(final_pool)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_1044": {
                "variable": {
                    "value": "map_",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[map1, map2, map3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_1067": {
                "variable": {
                    "value": "self.dense_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_1068": {
                "variable": {
                    "value": "self.transition_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1071": {
                "variable": {
                    "value": "self.conv_layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1091": {
                "variable": {
                    "value": "self.norm5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_1134": {
                "variable": {
                    "value": "self.final_count_feature_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1135": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_1150": {
                "variable": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_1151": {
                "variable": {
                    "value": "final_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_1153": {
                "variable": {
                    "value": "density",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_1154": {
                "variable": {
                    "value": "final_count_features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.final_count_feature_layer(final_pool)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_1159": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h1.view(batch_size, -1, 1, 1), h2.view(batch_size, -1, 1, 1), h3.view(batch_size, -1, 1, 1), final_count_features.view(batch_size, -1, 1, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_1164": {
                "variable": {
                    "value": "map_",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[map1, map2, map3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_1202": {
                "variable": {
                    "value": "self.dense_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_1203": {
                "variable": {
                    "value": "self.transition_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_1206": {
                "variable": {
                    "value": "self.conv_layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1226": {
                "variable": {
                    "value": "self.norm5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_1266": {
                "variable": {
                    "value": "self.count_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_1287": {
                "variable": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ],
                        [
                            "self.norm5(db4_out)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_1288": {
                "variable": {
                    "value": "final_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n5_relu_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ],
                        [
                            "relu(n5_out, inplace=True)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_1290": {
                "variable": {
                    "value": "density",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_1291": {
                "variable": {
                    "value": "final_count",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.count_layer(final_pool)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_1294": {
                "variable": {
                    "value": "density_module_in1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[map1, db2_out]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_1296": {
                "variable": {
                    "value": "density_module_in2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[map2, density_module_out1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_1301": {
                "variable": {
                    "value": "map_",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[map1, map2, map3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_113": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_121": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "dropout_352": {
                "variable": {
                    "value": "new_features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "new_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "super(_DenseLayer, self).forward(x)",
                            "Call"
                        ],
                        [
                            "dropout(new_features, p=self.drop_rate, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "self.drop_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_353": {
                "tensors": {
                    "value": "[x, new_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_115": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_123": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_314": {
                "input": {
                    "value": "self.f5_fc1(f5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_323": {
                "input": {
                    "value": "self.f7_fc1(f7)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_367": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_368": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_369": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_371": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_556": {
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ],
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_631": {
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_632": {
                "*size": {
                    "value": "[batch_size, 3, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_653": {
                "*size": {
                    "value": "[batch_size, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_654": {
                "*size": {
                    "value": "[batch_size, 3, self.label_patch_size, self.label_patch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "leaky_relu_1180": {
                "input": {
                    "value": "dense_block_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_block(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "leaky_relu_1293": {
                "input": {
                    "value": "db2_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_blocks.denseblock2(t1_out)",
                            "Call"
                        ],
                        [
                            "self.dense_blocks.denseblock2(t1_out)",
                            "Call"
                        ],
                        [
                            "self.dense_blocks.denseblock2(t1_out)",
                            "Call"
                        ],
                        [
                            "self.dense_blocks.denseblock2(t1_out)",
                            "Call"
                        ],
                        [
                            "self.dense_blocks.denseblock2(t1_out)",
                            "Call"
                        ],
                        [
                            "self.dense_blocks.denseblock2(t1_out)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm2d_338": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_339": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_340": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_342": {
                "num_features": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_343": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_344": {
                "in_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "growth_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_429": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_430": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_431": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_432": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_537": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_538": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_539": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_540": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_680": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_681": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_682": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_683": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_812": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_813": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_814": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_815": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_952": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_953": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_954": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_955": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1072": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1073": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_1074": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_1075": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_1207": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_1208": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_1209": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_1210": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "crowd/sgan.py": {
        "torch": {
            "linspace_14": {
                "variable": {
                    "value": "self.bins",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "settings.number_of_bins",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_33": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted_density_labels - density_labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_33": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_33": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_33": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_46": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted_density_labels - density_labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_46": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_46": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_46": {
                "variable": {
                    "value": "density_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_58": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "unlabeled_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_67": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ],
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_76": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "interpolate_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_85": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ],
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "crowd/shanghai_tech_data.py": {
        "torch": {}
    },
    "crowd/srgan.py": {
        "torch": {
            "randn_137": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "G.input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_141": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "MixtureModel([norm(-settings.mean_offset, 1), norm(settings.mean_offset, 1)]).rvs(size=[settings.batch_size, G.input_size]).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_152": {
                "variable": {
                    "value": "dataset_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "as_tensor_212": {
                "variable": {
                    "value": "label_heatmap_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "label_heatmap_array[:, :, :3].transpose((2, 0, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "as_tensor_216": {
                "variable": {
                    "value": "predicted_label_heatmap_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "predicted_label_heatmap_array[:, :, :3].transpose((2, 0, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_252": {
                "variable": {
                    "value": "map_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted_maps - maps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_252": {
                "variable": {
                    "value": "map_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_252": {
                "variable": {
                    "value": "map_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_252": {
                "variable": {
                    "value": "map_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "order",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "abs_253": {
                "variable": {
                    "value": "count_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted_count_labels - head_labels.sum(1).sum(1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_253": {
                "variable": {
                    "value": "count_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "order",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "mean_253": {
                "variable": {
                    "value": "count_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_348": {
                "variable": {
                    "value": "full_example_dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "full_example_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ImageSlidingWindowDataset(full_example, self.settings.image_patch_size, self.settings.test_sliding_window_size)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_40": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_48": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.unlabeled_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_353": {
                "variable": {
                    "value": "images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[image for image in batch[0]]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "DataLoader_59": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_66": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_120": {
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.train_dataset",
                            "Attribute"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_128": {
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.train_dataset",
                            "Attribute"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_432": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_78": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_85": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.unlabeled_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "crowd/ucf_cc_50_data.py": {
        "torch": {}
    },
    "crowd/ucf_qnrf_data.py": {
        "torch": {}
    },
    "crowd/world_expo_data.py": {
        "torch": {}
    },
    "dnn.py": {
        "torch": {
            "Adam_44": {
                "variable": {
                    "value": "self.dnn_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.DNN.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "d_lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.settings.learning_rate",
                            "Attribute"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.settings.weight_decay",
                            "Attribute"
                        ]
                    ]
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "save_51": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'DNN': self.DNN.state_dict(), 'dnn_optimizer': self.dnn_optimizer.state_dict(), 'step': step}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.trial_directory, f'model_{step}.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_69": {
                "variable": {
                    "value": "loaded_model",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.settings.load_model_path, latest_model)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "map_location",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "Constant"
                        ],
                        [
                            "None",
                            "Constant"
                        ]
                    ]
                }
            },
            "is_available_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "driving/models.py": {
        "torch": {
            "Sequential_21": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_29": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "leaky_relu_48": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_49": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_50": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tanh_51": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_70": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_71": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_72": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_73": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_18": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "driving/srgan.py": {
        "torch": {
            "DataLoader_24": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_38": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.unlabeled_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.settings.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "settings.number_of_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_69": {
                "variable": {
                    "value": "train_dataset_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.train_dataset",
                            "Attribute"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randn_75": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "G.input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_80": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "MixtureModel([norm(-settings.mean_offset, 1), norm(settings.mean_offset, 1)]).rvs(size=[settings.batch_size, G.input_size]).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_89": {
                "variable": {
                    "value": "dataset_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "settings.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/data.py": {
        "torch": {
            "tensor_43": {
                "variable": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "image.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_46": {
                "variable": {
                    "value": "age",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "age",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ages[idx]",
                            "Subscript"
                        ],
                        [
                            "torch.tensor(age, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/models.py": {
        "torch": {
            "Sequential_20": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_28": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "leaky_relu_47": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_48": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_49": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tanh_50": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "leaky_relu_69": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_70": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer2(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_71": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer3(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "leaky_relu_72": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer4(out)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_17": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "c_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_27": {
                "num_features": {
                    "value": "c_out",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "run.py": {
        "torch": {}
    },
    "sgan.py": {
        "torch": {
            "CrossEntropyLoss_14": {
                "variable": {
                    "value": "self.labeled_criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_15": {
                "variable": {
                    "value": "self.gan_criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_38": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "unlabeled_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_47": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ],
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_56": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "interpolate_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_65": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "fake_binary_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ],
                        [
                            "logsumexp(predicted_class_logits, dim=1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "srgan.py": {
        "torch": {
            "diag_523": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xm.mm(xm.t())",
                            "Call"
                        ],
                        [
                            "c / (x.size(1) - 1)",
                            "BinOp"
                        ],
                        [
                            "c.div(stddev.expand_as(c))",
                            "Call"
                        ],
                        [
                            "c.div(stddev.expand_as(c).t())",
                            "Call"
                        ],
                        [
                            "torch.clamp(c, -1.0, 1.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_524": {
                "variable": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.diag(c)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "clamp_527": {
                "variable": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "xm.mm(xm.t())",
                            "Call"
                        ],
                        [
                            "c / (x.size(1) - 1)",
                            "BinOp"
                        ],
                        [
                            "c.div(stddev.expand_as(c))",
                            "Call"
                        ],
                        [
                            "c.div(stddev.expand_as(c).t())",
                            "Call"
                        ],
                        [
                            "torch.clamp(c, -1.0, 1.0)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_136": {
                "variable": {
                    "value": "self.d_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.D.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "d_lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.settings.learning_rate",
                            "Attribute"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.settings.weight_decay",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Adam_137": {
                "variable": {
                    "value": "self.g_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.G.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "g_lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "d_lr",
                            "Name"
                        ]
                    ]
                }
            },
            "Adam_138": {
                "variable": {
                    "value": "self.dnn_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.DNN.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "d_lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.settings.learning_rate",
                            "Attribute"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.settings.weight_decay",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tensor_286": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "MixtureModel([norm(-self.settings.mean_offset, 1), norm(self.settings.mean_offset, 1)]).rvs(size=[unlabeled_examples.size(0), self.G.input_size]).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "rand_364": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "alpha_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1] * len(unlabeled_examples.size())",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_373": {
                "variable": {
                    "value": "norm_excesses",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "gradient_norm - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dataset_396": {
                "variable": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dataset_397": {
                "variable": {
                    "value": "self.unlabeled_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dataset_398": {
                "variable": {
                    "value": "self.validation_dataset",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_399": {
                "variable": {
                    "value": "self.train_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_400": {
                "variable": {
                    "value": "self.unlabeled_dataset_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.validation_dataset",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Module_405": {
                "variable": {
                    "value": "self.DNN",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Module_406": {
                "variable": {
                    "value": "self.D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Module_407": {
                "variable": {
                    "value": "self.G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_97": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'DNN': self.DNN.state_dict(), 'dnn_optimizer': self.dnn_optimizer.state_dict(), 'D': self.D.state_dict(), 'd_optimizer': self.d_optimizer.state_dict(), 'G': self.G.state_dict(), 'g_optimizer': self.g_optimizer.state_dict(), 'step': step}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(self.trial_directory, f'model_{step}.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randn_301": {
                "variable": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "unlabeled_examples.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.G.input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_237": {
                "variable": {
                    "value": "loaded_model",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.settings.load_model_path, latest_model)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "map_location",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "Constant"
                        ],
                        [
                            "None",
                            "Constant"
                        ]
                    ]
                }
            },
            "grad_368": {
                "outputs": {
                    "value": "interpolates_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.interpolate_loss_calculation(interpolates)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "interpolates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "alpha * unlabeled_examples.detach().requires_grad_() + (1 - alpha) * fake_examples.detach().requires_grad_()",
                            "BinOp"
                        ]
                    ]
                },
                "grad_outputs": {
                    "value": "torch.ones_like(interpolates_loss, device=gpu)",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_like_373": {
                "input": {
                    "value": "gradient_norm",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gradients.view(unlabeled_examples.size(0), -1).norm(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_231": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_tensor_256": {
                "obj": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_369": {
                "input": {
                    "value": "interpolates_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.interpolate_loss_calculation(interpolates)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "utility.py": {
        "torch": {
            "device_18": {
                "variable": {
                    "value": "gpu",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "max_178": {
                "variable": {
                    "value": "(s, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.view(-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_116": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(time.time())",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_77": {
                "f": {
                    "value": "model_path",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_79": {
                "f": {
                    "value": "model_path",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}