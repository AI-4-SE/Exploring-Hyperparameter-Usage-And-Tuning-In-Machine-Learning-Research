{
    "util.py": {
        "sklearn": {
            "StratifiedKFold_730": {
                "variable": {
                    "value": "skf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "transpose_114": {
                "variable": {
                    "value": "g.edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_135": {
                "variable": {
                    "value": "g.node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(g.node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_277": {
                "variable": {
                    "value": "train_graphs[idx].node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_graphs[idx].node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_333": {
                "variable": {
                    "value": "test_graphs[idx].node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(test_graphs[idx].node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_464": {
                "variable": {
                    "value": "train_graphs[idx].node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_graphs[idx].node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_512": {
                "variable": {
                    "value": "test_graphs[idx].node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(test_graphs[idx].node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_651": {
                "variable": {
                    "value": "train_graphs[idx].node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(train_graphs[idx].node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_720": {
                "variable": {
                    "value": "test_graphs[idx].node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(test_graphs[idx].node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_239": {
                "input": {
                    "value": "train_graphs[idx].edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_300": {
                "input": {
                    "value": "test_graphs[idx].edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_434": {
                "input": {
                    "value": "train_graphs[idx].edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_482": {
                "input": {
                    "value": "test_graphs[idx].edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_610": {
                "input": {
                    "value": "train_graphs[idx].edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_672": {
                "input": {
                    "value": "test_graphs[idx].edge_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "main_backdoor.py": {
        "torch": {
            "CrossEntropyLoss_16": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_46": {
                "variable": {
                    "value": "sample.node_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(sample.node_tags)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "len(tag2index)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_105": {
                "tensors": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_graph)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pass_data_iteratively(model, test_graphs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_190": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_193": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_222": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "StepLR_223": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.Adam(model.parameters(), lr=args.lr)",
                            "Call"
                        ]
                    ]
                },
                "step_size": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "is_available_192": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_192": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "manual_seed_all_194": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/graphcnn.py": {
        "torch": {
            "Parameter_32": {
                "variable": {
                    "value": "self.eps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(self.num_layers - 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_35": {
                "variable": {
                    "value": "self.mlps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_38": {
                "variable": {
                    "value": "self.batch_norms",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_49": {
                "variable": {
                    "value": "self.linears_prediction",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_93": {
                "variable": {
                    "value": "Adj_block_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "edge_mat_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_94": {
                "variable": {
                    "value": "Adj_block_elem",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "Adj_block_idx.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "transpose_132": {
                "variable": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_142": {
                "variable": {
                    "value": "h_with_dummy",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h, dummy.reshape((1, -1)).to(self.device)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_167": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.batch_norms[layer](pooled_rep)",
                            "Call"
                        ],
                        [
                            "F.relu(h)",
                            "Call"
                        ],
                        [
                            "self.batch_norms[layer](pooled_rep)",
                            "Call"
                        ],
                        [
                            "F.relu(h)",
                            "Call"
                        ],
                        [
                            "X_concat",
                            "Name"
                        ],
                        [
                            "self.next_layer_eps(h, layer, padded_neighbor_list=padded_neighbor_list)",
                            "Call"
                        ],
                        [
                            "self.next_layer_eps(h, layer, Adj_block=Adj_block)",
                            "Call"
                        ],
                        [
                            "self.next_layer(h, layer, padded_neighbor_list=padded_neighbor_list)",
                            "Call"
                        ],
                        [
                            "self.next_layer(h, layer, Adj_block=Adj_block)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_191": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.batch_norms[layer](pooled_rep)",
                            "Call"
                        ],
                        [
                            "F.relu(h)",
                            "Call"
                        ],
                        [
                            "self.batch_norms[layer](pooled_rep)",
                            "Call"
                        ],
                        [
                            "F.relu(h)",
                            "Call"
                        ],
                        [
                            "X_concat",
                            "Name"
                        ],
                        [
                            "self.next_layer_eps(h, layer, padded_neighbor_list=padded_neighbor_list)",
                            "Call"
                        ],
                        [
                            "self.next_layer_eps(h, layer, Adj_block=Adj_block)",
                            "Call"
                        ],
                        [
                            "self.next_layer(h, layer, padded_neighbor_list=padded_neighbor_list)",
                            "Call"
                        ],
                        [
                            "self.next_layer(h, layer, Adj_block=Adj_block)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_196": {
                "variable": {
                    "value": "X_concat",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[graph.node_features for graph in batch_graph]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_101": {
                "variable": {
                    "value": "elem",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_node",
                    "type": "variable",
                    "possible_values": [
                        [
                            "start_idx[-1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_102": {
                "variable": {
                    "value": "Adj_block_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[Adj_block_idx, self_loop_edge]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "Adj_block_elem",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[Adj_block_elem, elem]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_32": {
                "*size": {
                    "value": "self.num_layers - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_141": {
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.batch_norms[layer](pooled_rep)",
                            "Call"
                        ],
                        [
                            "F.relu(h)",
                            "Call"
                        ],
                        [
                            "self.batch_norms[layer](pooled_rep)",
                            "Call"
                        ],
                        [
                            "F.relu(h)",
                            "Call"
                        ],
                        [
                            "X_concat",
                            "Name"
                        ],
                        [
                            "self.next_layer_eps(h, layer, padded_neighbor_list=padded_neighbor_list)",
                            "Call"
                        ],
                        [
                            "self.next_layer_eps(h, layer, Adj_block=Adj_block)",
                            "Call"
                        ],
                        [
                            "self.next_layer(h, layer, padded_neighbor_list=padded_neighbor_list)",
                            "Call"
                        ],
                        [
                            "self.next_layer(h, layer, Adj_block=Adj_block)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_143": {
                "input": {
                    "value": "h_with_dummy[padded_neighbor_list]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dropout_225": {
                "input": {
                    "value": "self.linears_prediction[layer](pooled_h)",
                    "type": "Call",
                    "possible_values": []
                },
                "p": {
                    "value": "self.final_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_46": {
                "num_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ones_158": {
                "*size": {
                    "value": "(Adj_block.shape[0], 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_182": {
                "*size": {
                    "value": "(Adj_block.shape[0], 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "models/mlp.py": {
        "torch": {
            "Linear_25": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ModuleList_29": {
                "variable": {
                    "value": "self.linears",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_30": {
                "variable": {
                    "value": "self.batch_norms",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_48": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.batch_norms[layer](self.linears[layer](h))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "in_features": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm1d_38": {
                "num_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}