{
    "ant_goal_meta_test.py": {
        "sklearn": {
            "DotProduct_58": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DotProduct_95": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "WhiteKernel_58": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "WhiteKernel_95": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RBF_58": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_64": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "normalize_y": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "RBF_95": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_101": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "normalize_y": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_356": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_num_threads_355": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_340": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_all_341": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_351": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_75": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_113": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_88": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_126": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_373": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_374": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_383": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_384": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_392": {
                "f": {
                    "value": "f + d + '/rl2_actor_critic'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "cheetah_meta_test.py": {
        "sklearn": {
            "DotProduct_59": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DotProduct_80": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "WhiteKernel_59": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "WhiteKernel_80": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RBF_59": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_63": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "RBF_80": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_84": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_326": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_num_threads_325": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_310": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_all_311": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_321": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_68": {
                "data": {
                    "value": "[[target_vel], [prior_var_min ** (1 / 2)]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_89": {
                "data": {
                    "value": "[[init_vel], [prior_var_min ** (1 / 2)]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_74": {
                "data": {
                    "value": "[[target_vel], [std ** 2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_94": {
                "data": {
                    "value": "[[f_sin_tan(idx)], [std ** 2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_344": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_345": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_354": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_355": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_363": {
                "f": {
                    "value": "f + d + '/rl2_actor_critic'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "golf_meta_test.py": {
        "sklearn": {
            "DotProduct_59": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DotProduct_95": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DotProduct_115": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "WhiteKernel_59": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "WhiteKernel_95": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "WhiteKernel_115": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RBF_59": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_65": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "normalize_y": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "RBF_95": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_99": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "RBF_115": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_119": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_349": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_num_threads_348": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_333": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_all_334": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_344": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_75": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_103": {
                "data": {
                    "value": "[[0.0], [0.2 ** (1 / 2)]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_123": {
                "data": {
                    "value": "[[0.0], [0.2 ** (1 / 2)]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_89": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_109": {
                "data": {
                    "value": "[[friction], [std ** 2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_129": {
                "data": {
                    "value": "[[friction], [std ** 2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_366": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_367": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_376": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_377": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_385": {
                "f": {
                    "value": "f + d + '/rl2_actor_critic'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "golf_robustness_meta_test.py": {
        "sklearn": {
            "DotProduct_53": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DotProduct_91": {
                "sigma_0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "WhiteKernel_53": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "WhiteKernel_91": {
                "noise_level": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "noise_level_bounds": {
                    "value": "fixed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RBF_53": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_59": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "normalize_y": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "RBF_91": {
                "length_scale": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GaussianProcessRegressor_97": {
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ],
                        [
                            "C(1) * RBF(1) + WhiteKernel(0.01, noise_level_bounds='fixed') + DotProduct(1)",
                            "BinOp"
                        ]
                    ]
                },
                "normalize_y": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "n_restarts_optimizer": {
                    "value": "n_restarts",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_251": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_num_threads_250": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_234": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_all_235": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_246": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_69": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_107": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_85": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_123": {
                "data": {
                    "value": "[p_mean, p_var]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_270": {
                "f": {
                    "value": "f + d + '/agent_ac'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_271": {
                "f": {
                    "value": "f + d + '/agent_vi'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "configs/ant_goal_bayes_arguments.py": {
        "torch": {
            "is_available_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/ant_goal_rl2_arguments.py": {
        "torch": {
            "is_available_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/ant_goal_ts_arguments.py": {
        "torch": {
            "is_available_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/cheetah_bayes_arguments.py": {
        "torch": {
            "is_available_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/cheetah_rl2_arguments.py": {
        "torch": {
            "is_available_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/cheetah_ts_arguments.py": {
        "torch": {
            "is_available_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/golf_bayes_arguments.py": {
        "torch": {
            "is_available_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/golf_rl2_arguments.py": {
        "torch": {
            "is_available_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/golf_ts_arguments.py": {
        "torch": {
            "is_available_118": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "configs/golf_with_signals_bayes_arguments.py": {
        "torch": {
            "is_available_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "inference/inference_network.py": {
        "torch": {
            "GRU_21": {
                "variable": {
                    "value": "self.enc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "n_in",
                    "type": "variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.hidden_sizes[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.enc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_sizes[0] + z_dim * 2 + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hidden_sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "variable": {
                    "value": "self.enc41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.enc42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_42": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[context, prior]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_50": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "t[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "F.elu(t)",
                            "Call"
                        ],
                        [
                            "torch.cat([t, original_prior, trust], 1)",
                            "Call"
                        ],
                        [
                            "F.elu(self.enc3(t))",
                            "Call"
                        ],
                        [
                            "t[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "t[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "curr_output[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "F.elu(t)",
                            "Call"
                        ],
                        [
                            "torch.cat([t, original_prior, trust], 1)",
                            "Call"
                        ],
                        [
                            "F.elu(self.enc3(t))",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_53": {
                "variable": {
                    "value": "trust",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[self.seq_len]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "t.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[t, original_prior, trust]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_55": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.enc3(t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_62": {
                "variable": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5 * logvar",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_like_63": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.exp(0.5 * logvar)",
                            "Call"
                        ],
                        [
                            "torch.exp(0.5 * logvar)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_87": {
                "variable": {
                    "value": "self.action_embedding_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "action_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_embedding_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.state_embedding_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "state_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "state_embedding_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_89": {
                "variable": {
                    "value": "self.reward_embedding_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "reward_embedding_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "variable": {
                    "value": "self.prior_embedding_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "prior_embedding_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "GRU_92": {
                "variable": {
                    "value": "self.enc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.n_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "hidden_size_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_93": {
                "variable": {
                    "value": "self.enc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size_dim + 1 + z_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_95": {
                "variable": {
                    "value": "self.enc41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_96": {
                "variable": {
                    "value": "self.enc42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "elu_118": {
                "variable": {
                    "value": "prior",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.prior_embedding_layer(prior)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_119": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.action_embedding_layer(action)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_120": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.state_embedding_layer(state)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_121": {
                "variable": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.reward_embedding_layer(reward)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_123": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[action, reward, state, prior]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_143": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "t[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "F.elu(t)",
                            "Call"
                        ],
                        [
                            "torch.cat([t, original_prior, trust], 1)",
                            "Call"
                        ],
                        [
                            "F.elu(self.enc3(t))",
                            "Call"
                        ],
                        [
                            "t[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "t[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "curr_output[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "F.elu(t)",
                            "Call"
                        ],
                        [
                            "torch.cat([t, original_prior, trust], 1)",
                            "Call"
                        ],
                        [
                            "F.elu(self.enc3(t))",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_148": {
                "variable": {
                    "value": "trust",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[trust]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "t.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_149": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[t, original_prior, trust]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_150": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.enc3(t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_157": {
                "variable": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5 * logvar",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_like_158": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.exp(0.5 * logvar)",
                            "Call"
                        ],
                        [
                            "torch.exp(0.5 * logvar)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "inference/inference_utils.py": {
        "torch": {
            "mse_loss_7": {
                "variable": {
                    "value": "mse_direct",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mu_hat",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mean_8": {
                "variable": {
                    "value": "mse_var",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum(logvar_hat.exp(), 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_11": {
                "variable": {
                    "value": "kld_1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logvar_prior - logvar_hat",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_12": {
                "variable": {
                    "value": "kld_2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1 + (mu_hat - mu_prior).pow(2) * (1 / logvar_prior.exp()) + logvar_hat.exp() * (1 / logvar_prior.exp())",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_8": {
                "input": {
                    "value": "logvar_hat.exp()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_15": {
                "input": {
                    "value": "kld_1 + kld_2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "learner/bayes.py": {
        "torch": {
            "empty_305": {
                "variable": {
                    "value": "prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_306": {
                "variable": {
                    "value": "mu_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_307": {
                "variable": {
                    "value": "logvar_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_308": {
                "variable": {
                    "value": "prior_policy",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randint_329": {
                "variable": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "self.vae_min_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "self.vae_max_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "empty_330": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randint(low=self.vae_min_seq, high=self.vae_max_seq, size=(1,)).item()",
                            "Call"
                        ],
                        [
                            "torch.randint(low=self.vae_min_seq, high=self.vae_max_seq, size=(1,)).item()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1 + self.env_dim + self.action_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_403": {
                "variable": {
                    "value": "prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_404": {
                "variable": {
                    "value": "mu_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_405": {
                "variable": {
                    "value": "logvar_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randint_424": {
                "variable": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "self.vae_min_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "self.vae_max_seq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "empty_425": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randint(low=self.vae_min_seq, high=self.vae_max_seq, size=(1,)).item()",
                            "Call"
                        ],
                        [
                            "torch.randint(low=self.vae_min_seq, high=self.vae_max_seq, size=(1,)).item()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1 + self.env_dim + self.action_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_670": {
                "variable": {
                    "value": "posterior_history",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_tasks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(envs_kwargs_list)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2 * self.latent_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_557": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_559": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_562": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_517": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_580": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_698": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_700": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_703": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_336": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_431": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_497": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_722": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_564": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_705": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_759": {
                "variable": {
                    "value": "prior_proc",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "learner/posterior_ts_opt.py": {
        "torch": {
            "empty_395": {
                "variable": {
                    "value": "prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_396": {
                "variable": {
                    "value": "mu_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_397": {
                "variable": {
                    "value": "logvar_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_398": {
                "variable": {
                    "value": "prior_policy",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randint_416": {
                "variable": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "self.vae_max_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "empty_417": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randint(low=1, high=self.vae_max_steps, size=(1,)).item()",
                            "Call"
                        ],
                        [
                            "torch.randint(low=1, high=self.vae_max_steps, size=(1,)).item()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1 + self.env_dim + self.action_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_481": {
                "variable": {
                    "value": "prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_482": {
                "variable": {
                    "value": "mu_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_483": {
                "variable": {
                    "value": "logvar_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randint_501": {
                "variable": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "self.vae_max_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "empty_502": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "num_data_context",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randint(low=1, high=self.vae_max_steps, size=(1,)).item()",
                            "Call"
                        ],
                        [
                            "torch.randint(low=1, high=self.vae_max_steps, size=(1,)).item()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1 + self.env_dim + self.action_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_758": {
                "variable": {
                    "value": "posterior_history",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_tasks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(envs_kwargs_list)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2 * self.latent_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_578": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_580": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_582": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_638": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_640": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_643": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_312": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_367": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_595": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_661": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_784": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_786": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_789": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_eval_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_292": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_351": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_422": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_507": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_806": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_584": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_645": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_791": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_840": {
                "variable": {
                    "value": "prior_proc",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "learner/recurrent.py": {
        "torch": {
            "zeros_193": {
                "variable": {
                    "value": "done",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_194": {
                "variable": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_195": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.action_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_306": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_308": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_310": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_processes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_202": {
                "variable": {
                    "value": "new_obs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[done, action, reward, obs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_204": {
                "variable": {
                    "value": "new_obs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[action, reward, obs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_207": {
                "variable": {
                    "value": "new_obs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[done, action, reward]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_209": {
                "variable": {
                    "value": "new_obs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[action, reward]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_268": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_324": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_350": {
                "variable": {
                    "value": "prev_episodes_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_test_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_242": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_383": {
                "variable": {
                    "value": "already_ended",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_test_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_312": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_375": {
                "variable": {
                    "value": "eval_recurrent_hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_test_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.actor_critic.recurrent_hidden_state_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_377": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_test_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_380": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_test_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_399": {
                "variable": {
                    "value": "eval_masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] if done_ else [1.0] for done_ in done]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_386": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "ppo_a2c/algo/ppo.py": {
        "torch": {
            "Adam_38": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "actor_critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "eps": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "exp_72": {
                "variable": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "action_log_probs - old_action_log_probs_batch",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "smooth_l1_loss_82": {
                "variable": {
                    "value": "value_losses",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "values",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "return_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "smooth_l1_loss_83": {
                "variable": {
                    "value": "value_losses_clipped",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "value_pred_clipped",
                    "type": "variable",
                    "possible_values": [
                        [
                            "value_preds_batch + (values - value_preds_batch).clamp(-self.clip_param, self.clip_param)",
                            "BinOp"
                        ],
                        [
                            "value_preds_batch + (values - value_preds_batch).clamp(-self.clip_param, self.clip_param)",
                            "BinOp"
                        ]
                    ]
                },
                "target": {
                    "value": "return_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "clip_grad_norm__101": {
                "parameters": {
                    "value": "self.actor_critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.max_grad_norm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clamp_75": {
                "input": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.exp(action_log_probs - old_action_log_probs_batch)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "1.0 - self.clip_param",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 + self.clip_param",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "min_77": {
                "input": {
                    "value": "surr1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ratio * adv_targ",
                            "BinOp"
                        ]
                    ]
                }
            },
            "mean_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "smooth_l1_loss_86": {
                "variable": {
                    "value": "value_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "values",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "return_batch",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_84": {
                "input": {
                    "value": "value_losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.smooth_l1_loss(values, return_batch, reduction='none')",
                            "Call"
                        ],
                        [
                            "(values - return_batch).pow(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_93": {
                "input": {
                    "value": "value_losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.smooth_l1_loss(values, return_batch, reduction='none')",
                            "Call"
                        ],
                        [
                            "(values - return_batch).pow(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_93": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "ppo_a2c/distributions.py": {
        "torch": {
            "zeros_92": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "action_mean.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gt_58": {
                "input": {
                    "value": "self.probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_71": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_86": {
                "*size": {
                    "value": "num_outputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_107": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "ppo_a2c/envs.py": {
        "torch": {
            "from_numpy_245": {
                "variable": {
                    "value": "obs",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "obs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.venv.reset()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "self.venv.reset()",
                            "Call"
                        ],
                        [
                            "self.venv.reset()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_257": {
                "variable": {
                    "value": "obs",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "obs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.venv.reset()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(obs).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "self.venv.reset()",
                            "Call"
                        ],
                        [
                            "self.venv.reset()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_333": {
                "variable": {
                    "value": "self.stacked_obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(venv.num_envs,) + low.shape",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "from_numpy_262": {
                "variable": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[torch.from_numpy(r).unsqueeze(dim=1).float() for r in reward]",
                            "ListComp"
                        ],
                        [
                            "torch.from_numpy(reward).unsqueeze(dim=1).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_262": {
                "variable": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_332": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_353": {
                "variable": {
                    "value": "self.stacked_obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.stacked_obs.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_260": {
                "ndarray": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "unsqueeze_260": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "ppo_a2c/model.py": {
        "torch": {
            "GRU_100": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "recurrent_input_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_190": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_194": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_198": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_202": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_248": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(state_dim + latent_dim, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_252": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(state_dim + latent_dim, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_256": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(state_dim + latent_dim, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_260": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(state_dim + latent_dim, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_282": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[state, x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_333": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_337": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_341": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_345": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(num_inputs, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_401": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[d, a, r, s]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_403": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a, r, s]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_467": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(hidden_size, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_471": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(hidden_size, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_475": {
                "variable": {
                    "value": "self.actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(hidden_size, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_479": {
                "variable": {
                    "value": "self.critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "init_(torch.nn.Linear(hidden_size, hidden_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_523": {
                "variable": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[b, u]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_538": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s, b, u]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_540": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s, b]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_206": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_238": {
                "in_features": {
                    "value": "ext_hidden_sizes[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "ext_hidden_sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_239": {
                "in_features": {
                    "value": "ext_hidden_sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ELU_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_264": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_324": {
                "in_features": {
                    "value": "action_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_extractor_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_325": {
                "in_features": {
                    "value": "state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "state_extractor_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_326": {
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "reward_extractor_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ELU_330": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_330": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_349": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_457": {
                "in_features": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_extractor_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_458": {
                "in_features": {
                    "value": "state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "state_extractor_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ELU_463": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_463": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_483": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_191": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_192": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_195": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_196": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_199": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_200": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_203": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_204": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_249": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_250": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_253": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_254": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_257": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_258": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_261": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_262": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_328": {
                "in_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "done_extractor_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ELU_334": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_335": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_338": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_339": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_342": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_343": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_346": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_347": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sqrt_389": {
                "input": {
                    "value": "self.state_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_391": {
                "input": {
                    "value": "self.action_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_393": {
                "input": {
                    "value": "self.reward_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_461": {
                "in_features": {
                    "value": "latent_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "uncertainty_extractor_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ELU_468": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_469": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_472": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ELU_473": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_476": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_477": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_480": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_481": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sqrt_520": {
                "input": {
                    "value": "self.state_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_524": {
                "input": {
                    "value": "self.latent_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_191": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_192": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_195": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_196": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_199": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_200": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_203": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_204": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_249": {
                "in_features": {
                    "value": "state_dim + latent_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_250": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_253": {
                "in_features": {
                    "value": "state_dim + latent_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_254": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_257": {
                "in_features": {
                    "value": "state_dim + latent_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_258": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_261": {
                "in_features": {
                    "value": "state_dim + latent_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_262": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_334": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_335": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_338": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_339": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_342": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_343": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_346": {
                "in_features": {
                    "value": "num_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_347": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_468": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_469": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_472": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_473": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_476": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_477": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_480": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_481": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sqrt_528": {
                "input": {
                    "value": "self.latent_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_529": {
                "input": {
                    "value": "self.uncertainty_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_531": {
                "input": {
                    "value": "self.latent_rms.var + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "ppo_a2c/storage.py": {
        "torch": {
            "zeros_15": {
                "variable": {
                    "value": "self.obs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "*obs_shape",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_16": {
                "variable": {
                    "value": "self.recurrent_hidden_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "recurrent_hidden_state_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_18": {
                "variable": {
                    "value": "self.rewards",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_19": {
                "variable": {
                    "value": "self.value_preds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_20": {
                "variable": {
                    "value": "self.returns",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_21": {
                "variable": {
                    "value": "self.action_log_probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_26": {
                "variable": {
                    "value": "self.actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "action_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "action_space.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_29": {
                "variable": {
                    "value": "self.masks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_33": {
                "variable": {
                    "value": "self.bad_masks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_steps + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchSampler_125": {
                "variable": {
                    "value": "sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "sampler": {
                    "value": "SubsetRandomSampler(range(batch_size))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "mini_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size // num_mini_batch",
                            "BinOp"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randperm_155": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.rewards.size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_181": {
                "variable": {
                    "value": "obs_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "obs_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.obs[:-1].view(-1, *self.obs.size()[2:])[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(obs_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, obs_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_182": {
                "variable": {
                    "value": "actions_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "actions_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.actions.view(-1, self.actions.size(-1))[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(actions_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, actions_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_183": {
                "variable": {
                    "value": "value_preds_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "value_preds_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.value_preds[:-1].view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(value_preds_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, value_preds_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_184": {
                "variable": {
                    "value": "return_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "return_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.returns[:-1].view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(return_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, return_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_185": {
                "variable": {
                    "value": "masks_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "masks_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.masks[:-1].view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(masks_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, masks_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_186": {
                "variable": {
                    "value": "old_action_log_probs_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "old_action_log_probs_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.action_log_probs.view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(old_action_log_probs_batch, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, old_action_log_probs_batch)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_188": {
                "variable": {
                    "value": "adv_targ",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "adv_targ",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "advantages.view(-1, 1)[indices]",
                            "Subscript"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(adv_targ, 1)",
                            "Call"
                        ],
                        [
                            "_flatten_helper(T, N, adv_targ)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_191": {
                "variable": {
                    "value": "recurrent_hidden_states_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "recurrent_hidden_states_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_126": {
                "indices": {
                    "value": "range(batch_size)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "ppo_a2c/utils.py": {
        "torch": {
            "Parameter_38": {
                "variable": {
                    "value": "self._bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "bias.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "task/ant_goal_task_generator.py": {
        "torch": {
            "normal_46": {
                "variable": {
                    "value": "new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min - self.max) * torch.rand(num_processes, self.latent_dim) + self.max",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "normal_30": {
                "variable": {
                    "value": "task_param",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min - self.max) * torch.rand(num_processes, self.latent_dim) + self.max",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "var.sqrt()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "normal_50": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min - self.max) * torch.rand(num_processes, self.latent_dim) + self.max",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "any_47": {
                "input": {
                    "value": "new_tasks < self.min",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_49": {
                "input": {
                    "value": "not_ok_task",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.any(new_tasks > self.max, 1) | torch.any(new_tasks < self.min, 1)",
                            "BinOp"
                        ],
                        [
                            "torch.any(new_tasks > self.max, 1) | torch.any(new_tasks < self.min, 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_56": {
                "data": {
                    "value": "[mu[i].tolist(), std[i].pow(2).tolist()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "any_32": {
                "input": {
                    "value": "task_param < self.min",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "rand_43": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_44": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_54": {
                "input": {
                    "value": "new_tasks < self.min",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "task/cheetah_vel_task_generator.py": {
        "torch": {
            "normal_42": {
                "variable": {
                    "value": "new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_vel - self.max_vel) * torch.rand(num_processes, self.latent_dim) + self.max_vel",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "normal_30": {
                "variable": {
                    "value": "task_param",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_vel - self.max_vel) * torch.rand(num_processes, self.latent_dim) + self.max_vel",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "var.sqrt()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "normal_46": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_vel - self.max_vel) * torch.rand(num_processes, self.latent_dim) + self.max_vel",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reshape_46": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_43": {
                "input": {
                    "value": "new_tasks < self.min_vel",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_45": {
                "input": {
                    "value": "not_ok_task",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.any(new_tasks > self.max_vel, 1) | torch.any(new_tasks < self.min_vel, 1)",
                            "BinOp"
                        ],
                        [
                            "torch.any(new_tasks > self.max_vel, 1) | torch.any(new_tasks < self.min_vel, 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_52": {
                "data": {
                    "value": "[[mu[i]], [std[i].pow(2)]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rand_40": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_41": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_50": {
                "input": {
                    "value": "new_tasks < self.min_vel",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "task/mini_golf_task_generator.py": {
        "torch": {
            "normal_31": {
                "variable": {
                    "value": "task_param",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_friction - self.max_friction) * torch.rand(num_processes, self.latent_dim) + self.max_friction",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "var.sqrt()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "normal_43": {
                "variable": {
                    "value": "new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_friction - self.max_friction) * torch.rand(num_processes, self.latent_dim) + self.max_friction",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "normal_47": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_friction - self.max_friction) * torch.rand(num_processes, self.latent_dim) + self.max_friction",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reshape_47": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_44": {
                "input": {
                    "value": "new_tasks < self.min_friction",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_46": {
                "input": {
                    "value": "not_ok_task",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.any(new_tasks > self.max_friction, 1) | torch.any(new_tasks < self.min_friction, 1)",
                            "BinOp"
                        ],
                        [
                            "torch.any(new_tasks > self.max_friction, 1) | torch.any(new_tasks < self.min_friction, 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_53": {
                "data": {
                    "value": "[[mu[i]], [std[i].pow(2)]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rand_41": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_42": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_51": {
                "input": {
                    "value": "new_tasks < self.min_friction",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "task/mini_golf_with_signals_generator.py": {
        "torch": {
            "normal_27": {
                "variable": {
                    "value": "task_param",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_value - self.max_value) * torch.rand(num_processes, self.latent_dim) + self.max_value",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "var.sqrt()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "normal_44": {
                "variable": {
                    "value": "new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_value - self.max_value) * torch.rand(num_processes, self.latent_dim) + self.max_value",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "normal_48": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prior[0].clone().detach()",
                            "Call"
                        ],
                        [
                            "(self.min_value - self.max_value) * torch.rand(num_processes, self.latent_dim) + self.max_value",
                            "BinOp"
                        ]
                    ]
                },
                "std": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(self.prior_std_min - self.prior_std_max) * torch.rand(num_processes, self.latent_dim) + self.prior_std_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reshape_48": {
                "variable": {
                    "value": "temp_new_tasks",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_12": {
                "*size": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_13": {
                "*size": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_14": {
                "*size": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_15": {
                "*size": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_45": {
                "input": {
                    "value": "new_tasks < self.min_value",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_47": {
                "input": {
                    "value": "not_ok_task",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.any(new_tasks > self.max_value, 1) | torch.any(new_tasks < self.min_value, 1)",
                            "BinOp"
                        ],
                        [
                            "torch.any(new_tasks > self.max_value, 1) | torch.any(new_tasks < self.min_value, 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_54": {
                "data": {
                    "value": "[mu[i].tolist(), std[i].pow(2).tolist()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rand_41": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_42": {
                "*size": {
                    "value": "num_processes",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.latent_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_52": {
                "input": {
                    "value": "new_tasks < self.min_value",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "device_161": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_153": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_154": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_num_threads_160": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "agent.actor_critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}rl2_actor_critic'.format(folder_path_with_date)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_257": {
                "variable": {
                    "value": "vi_optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "vi.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.vae_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_320": {
                "obj": {
                    "value": "agent.vi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}agent_vi'.format(folder_path_with_date)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_321": {
                "obj": {
                    "value": "agent.actor_critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}agent_ac'.format(folder_path_with_date)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_357": {
                "variable": {
                    "value": "vi_optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "vi.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.vae_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_426": {
                "obj": {
                    "value": "agent.vae",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}agent_vi'.format(folder_path_with_date)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_427": {
                "obj": {
                    "value": "agent.actor_critic",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}agent_ac'.format(folder_path_with_date)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utilities/observation_utils.py": {
        "torch": {
            "normal_18": {
                "variable": {
                    "value": "posterior_sample",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "posterior[:, 0:latent_dim]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "std": {
                    "value": "posterior[:, latent_dim:].sqrt()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_45": {
                "variable": {
                    "value": "flatten_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[prior[i].flatten().tolist() for i in range(num_proc)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_58": {
                "variable": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[res[0].detach(), res[1].detach()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_14": {
                "variable": {
                    "value": "posterior",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[posterior[i].flatten().tolist() for i in range(num_proc)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_21": {
                "variable": {
                    "value": "new_obs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[obs, posterior_sample]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_31": {
                "variable": {
                    "value": "posterior",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[posterior[i].flatten().tolist() for i in range(num_proc)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "cat_36": {
                "variable": {
                    "value": "new_obs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[obs, posterior]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_52": {
                "variable": {
                    "value": "context[:, 0, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[action.float(), reward, env_obs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "context[:, 0, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[action.float(), reward]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_66": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "()",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_67": {
                "variable": {
                    "value": "self.var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "()",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_6": {
                "tensors": {
                    "value": "[obs, tasks]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_48": {
                "*size": {
                    "value": "num_proc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "obs.shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs.shape[0]",
                            "Subscript"
                        ],
                        [
                            "action.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1 + env_obs.shape[1] + action.shape[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "empty_49": {
                "*size": {
                    "value": "num_proc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "obs.shape[0]",
                            "Subscript"
                        ],
                        [
                            "obs.shape[0]",
                            "Subscript"
                        ],
                        [
                            "action.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1 + action.shape[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_89": {
                "input": {
                    "value": "delta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_mean - mean",
                            "BinOp"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utilities/test_arguments.py": {
        "torch": {
            "is_available_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}