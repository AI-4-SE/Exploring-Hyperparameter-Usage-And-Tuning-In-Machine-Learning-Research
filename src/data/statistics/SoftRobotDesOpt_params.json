{
    "old/multilink_v0.py": {
        "torch": {
            "tensor_10": {
                "variable": {
                    "value": "self.targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.array([[1.2, 1.0], [0.8, 0.1], [1.5, 0.5]])",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_14": {
                "variable": {
                    "value": "self.qbar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_16": {
                "variable": {
                    "value": "self.l",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_18": {
                "variable": {
                    "value": "self.q",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_targets, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sum_57": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "100.0 * (end_eff_xys - self.targets).pow(2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "manual_seed_12": {
                "seed": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_58": {
                "input": {
                    "value": "1.0 * (Q.T - qbar).pow(2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_71": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ord": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_59": {
                "input": {
                    "value": "l.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cos_36": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sin_37": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_36": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_37": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "old/multilink_v1.py": {
        "torch": {
            "tensor_10": {
                "variable": {
                    "value": "self.targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * np.array([[1.2, 1.0], [0.8, 0.1], [1.5, 0.5]])",
                            "BinOp"
                        ]
                    ]
                }
            },
            "randn_14": {
                "variable": {
                    "value": "self.qbar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_15": {
                "variable": {
                    "value": "self.q",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_31": {
                "variable": {
                    "value": "xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_targets, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sum_54": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "200.0 * (end_eff_xys - self.targets).pow(2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "manual_seed_12": {
                "seed": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_55": {
                "input": {
                    "value": "1.0 * (Q.T - qbar).pow(2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_58": {
                "input": {
                    "value": "torch.nn.functional.softplus(torch.abs(Q[1:, :]) - 0.79)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "norm_62": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ord": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softplus_58": {
                "input": {
                    "value": "torch.abs(Q[1:, :]) - 0.79",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cos_33": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sin_34": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_33": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_34": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_58": {
                "input": {
                    "value": "Q[1:, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "old/multilink_v2.py": {
        "torch": {
            "tensor_10": {
                "variable": {
                    "value": "self.targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * np.array([[1.2, 1.0], [0.8, 0.1], [1.5, 0.5]])",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_16": {
                "variable": {
                    "value": "self.qbar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_17": {
                "variable": {
                    "value": "self.Q",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_nodes - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.float",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_targets, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "xy",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_nodes, self.n_targets, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "temp",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_targets, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_51": {
                "variable": {
                    "value": "orient",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.n_nodes - 1, self.n_targets)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sum_80": {
                "variable": {
                    "value": "squared_diff",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(node_xys - self.targets).pow(2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_12": {
                "seed": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_53": {
                "variable": {
                    "value": "orient[i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "Q[:i + 1, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_87": {
                "variable": {
                    "value": "end_eff_link_orient",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.n_targets",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_103": {
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "ord": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_18": {
                "data": {
                    "value": "end_eff_orient",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_82": {
                "input": {
                    "value": "torch.min(squared_diff, dim=0).values",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "min_83": {
                "input": {
                    "value": "squared_diff",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sum((node_xys - self.targets).pow(2), dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_96": {
                "input": {
                    "value": "1.0 * (Q.T - qbar).pow(2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_99": {
                "input": {
                    "value": "torch.nn.functional.softplus(torch.abs(Q[1:, :]) - 0.79)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cos_36": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sin_37": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cos_44": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sin_45": {
                "input": {
                    "value": "torch.sum(Q[:i, :], dim=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_91": {
                "input": {
                    "value": "(end_eff_link_orient - self.end_eff_orient).pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softplus_99": {
                "input": {
                    "value": "torch.abs(Q[1:, :]) - 0.79",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_110": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_146": {
                "data": {
                    "value": "Q",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_36": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_37": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_44": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_45": {
                "input": {
                    "value": "Q[:i, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "min_82": {
                "input": {
                    "value": "squared_diff",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sum((node_xys - self.targets).pow(2), dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_99": {
                "input": {
                    "value": "Q[1:, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}