{
    "src/data/PCA_scaler.py": {
        "sklearn": {
            "StandardScaler_38": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PCA_47": {
                "variable": {
                    "value": "tmp_pca",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "StandardScaler_54": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PCA_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/data/process_data.py": {
        "sklearn": {
            "StandardScaler_147": {
                "variable": {
                    "value": "SS",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/models/predict_models.py": {
        "sklearn": {
            "roc_curve_50": {
                "variable": {
                    "value": "(fpr_u, tpr_u, thresholds_u)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "sig_prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "uboost.predict_proba(testdf)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "gbc.predict_proba(testdf[data_cols[1:]])[:, 1]",
                            "Subscript"
                        ],
                        [
                            "base_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "planed_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_51": {
                "variable": {
                    "value": "auc_u",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr_u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr_u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_99": {
                "variable": {
                    "value": "(fpr_u, tpr_u, thresholds_u)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "sig_prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "uboost.predict_proba(testdf)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "gbc.predict_proba(testdf[data_cols[1:]])[:, 1]",
                            "Subscript"
                        ],
                        [
                            "base_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "planed_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_100": {
                "variable": {
                    "value": "auc_u",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr_u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr_u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_137": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "tau_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-X_test[:, taus[0]] / X_test[:, taus[1]]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "auc_138": {
                "variable": {
                    "value": "auc_score",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_187": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "-tau_21_ddt",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "auc_188": {
                "variable": {
                    "value": "auc_score",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_220": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "sig_prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "uboost.predict_proba(testdf)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "gbc.predict_proba(testdf[data_cols[1:]])[:, 1]",
                            "Subscript"
                        ],
                        [
                            "base_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "planed_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_221": {
                "variable": {
                    "value": "auc_score",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_253": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "sig_prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "uboost.predict_proba(testdf)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "gbc.predict_proba(testdf[data_cols[1:]])[:, 1]",
                            "Subscript"
                        ],
                        [
                            "base_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "planed_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_254": {
                "variable": {
                    "value": "auc_score",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_289": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "sig_prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "uboost.predict_proba(testdf)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "gbc.predict_proba(testdf[data_cols[1:]])[:, 1]",
                            "Subscript"
                        ],
                        [
                            "base_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "planed_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_290": {
                "variable": {
                    "value": "auc_score",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_curve_326": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_bdt(prong, set='test')",
                            "Call"
                        ],
                        [
                            "load_data_bdt(prong, set='test', scale=scale)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_unscaled(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ],
                        [
                            "load_test_data_PCA_nn(prong)",
                            "Call"
                        ],
                        [
                            "np.ravel(y_test)",
                            "Call"
                        ]
                    ]
                },
                "y_score": {
                    "value": "sig_prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "uboost.predict_proba(testdf)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "gbc.predict_proba(testdf[data_cols[1:]])[:, 1]",
                            "Subscript"
                        ],
                        [
                            "base_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "planed_nn.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ],
                        [
                            "model.predict(X_testscaled, verbose=False)",
                            "Call"
                        ],
                        [
                            "np.ravel(sig_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_327": {
                "variable": {
                    "value": "auc_score",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y_true=y_test, y_score=tau_pred)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=-tau_21_ddt)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ],
                        [
                            "roc_curve(y_true=y_test, y_score=sig_prob)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/models/train_BDT.py": {
        "sklearn": {
            "GradientBoostingClassifier_39": {
                "variable": {
                    "value": "GBC",
                    "type": "variable",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "n_estimators",
                    "type": "variable",
                    "possible_values": [
                        [
                            "150",
                            "int"
                        ]
                    ]
                },
                "learning_rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/train_PCA_BDT.py": {
        "sklearn": {
            "GradientBoostingClassifier_31": {
                "variable": {
                    "value": "GBC",
                    "type": "variable",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "n_estimators",
                    "type": "variable",
                    "possible_values": [
                        [
                            "150",
                            "int"
                        ]
                    ]
                },
                "learning_rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/train_planed_BDT.py": {
        "sklearn": {
            "GradientBoostingClassifier_36": {
                "variable": {
                    "value": "GBC",
                    "type": "variable",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "n_estimators",
                    "type": "variable",
                    "possible_values": [
                        [
                            "150",
                            "int"
                        ]
                    ]
                },
                "learning_rate": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/train_uBoost.py": {
        "sklearn": {
            "DecisionTreeClassifier_39": {
                "variable": {
                    "value": "base_estimator",
                    "type": "variable",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}