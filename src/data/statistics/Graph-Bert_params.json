{
    "EvaluateAcc.py": {
        "sklearn": {
            "accuracy_score_17": {
                "y_true": {
                    "value": "self.data['true_y']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.data['pred_y']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "Settings.py": {
        "sklearn": {}
    },
    "DatasetLoader.py": {
        "torch": {
            "from_numpy_76": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack((sparse_mx.row, sparse_mx.col)).astype(np.int64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_78": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "sparse_mx.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "MethodBertComp.py": {
        "torch": {
            "ModuleList_63": {
                "variable": {
                    "value": "self.layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[BertLayer(config) for _ in range(config.num_hidden_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "self.raw_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.x_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_102": {
                "variable": {
                    "value": "self.wl_role_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "config.max_wl_role_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_103": {
                "variable": {
                    "value": "self.inti_pos_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "config.max_inti_pos_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_104": {
                "variable": {
                    "value": "self.hop_dis_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "config.max_hop_dis_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_107": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.x_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_131": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(config.x_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_131": {
                "*size": {
                    "value": "config.x_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "MethodGraphBert.py": {
        "torch": {
            "ones_53": {
                "variable": {
                    "value": "attention_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "input_ids.size()",
                            "Call"
                        ],
                        [
                            "inputs_embeds.size()[:-1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "input_ids.device if input_ids is not None else inputs_embeds.device",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_55": {
                "variable": {
                    "value": "token_type_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "input_ids.size()",
                            "Call"
                        ],
                        [
                            "inputs_embeds.size()[:-1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "input_ids.device if input_ids is not None else inputs_embeds.device",
                            "IfExp"
                        ]
                    ]
                }
            },
            "ones_82": {
                "variable": {
                    "value": "encoder_attention_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "encoder_hidden_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "input_ids.device if input_ids is not None else inputs_embeds.device",
                            "IfExp"
                        ]
                    ]
                }
            },
            "arange_62": {
                "variable": {
                    "value": "seq_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "seq_length",
                    "type": "Variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "input_ids.device if input_ids is not None else inputs_embeds.device",
                            "IfExp"
                        ]
                    ]
                }
            }
        }
    },
    "MethodGraphBertNodeClassification.py": {
        "torch": {
            "Linear_32": {
                "variable": {
                    "value": "self.res_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.x_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.res_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.x_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.y_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.cls_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.y_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_73": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "self.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_61": {
                "input": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.cls_y(sequence_output)",
                            "Call"
                        ],
                        [
                            "labels + residual_y",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_entropy_85": {
                "variable": {
                    "value": "loss_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_train'])",
                            "Call"
                        ],
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_val'])",
                            "Call"
                        ],
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_test'])",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "self.data['y'][self.data['idx_train']]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cross_entropy_95": {
                "variable": {
                    "value": "loss_val",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_train'])",
                            "Call"
                        ],
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_val'])",
                            "Call"
                        ],
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_test'])",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "self.data['y'][self.data['idx_val']]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cross_entropy_103": {
                "variable": {
                    "value": "loss_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_train'])",
                            "Call"
                        ],
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_val'])",
                            "Call"
                        ],
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'], self.data['idx_test'])",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "self.data['y'][self.data['idx_test']]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "MethodGraphBertNodeConstruct.py": {
        "torch": {
            "Adam_42": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "self.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mse_loss_49": {
                "variable": {
                    "value": "loss_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "reconstruction_features",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.forward(self.data['raw_embeddings'], self.data['wl_embedding'], self.data['int_embeddings'], self.data['hop_embeddings'])",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "self.data['raw_embeddings']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "script.py": {
        "torch": {
            "manual_seed_21": {
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "script_bert_testing.py": {
        "torch": {
            "tensor_32": {
                "variable": {
                    "value": "tokens_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[indexed_tokens]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_33": {
                "variable": {
                    "value": "segments_tensors",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[segments_ids]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_73": {
                "variable": {
                    "value": "tokens_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[indexed_tokens]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_74": {
                "variable": {
                    "value": "segments_tensors",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[segments_ids]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "argmax_85": {
                "variable": {
                    "value": "predicted_index",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predictions[0, masked_index]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}