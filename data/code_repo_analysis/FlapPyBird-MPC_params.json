{
    "flappy_pred.py": {
        "sklearn": {},
        "torch": {
            "load_35": {
                "variable": {
                    "value": "state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "strategy models/model_state.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_311": {
                "variable": {
                    "value": "t_X_test",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.concatenate(([lowerPipes[0]['x']], [lowerPipes[0]['y']], [lowerPipes[1]['x']], [lowerPipes[1]['y']]), axis=0)",
                            "Call"
                        ],
                        [
                            "X.reshape(1, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_312": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "strategy models/train_models.py": {
        "sklearn": {
            "train_test_split_64": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.99",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "from_numpy_69": {
                "variable": {
                    "value": "t_X_train",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "X_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "train_test_split(X, y, test_size=0.99, random_state=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_70": {
                "variable": {
                    "value": "t_y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "train_test_split(X, y, test_size=0.99, random_state=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_100": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "from_numpy_124": {
                "variable": {
                    "value": "t_X_test",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "X_test[100:200, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_125": {
                "variable": {
                    "value": "t_y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "y_test[100:200]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "save_143": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "model_state.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}