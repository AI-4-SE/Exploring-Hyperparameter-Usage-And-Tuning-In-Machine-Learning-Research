{
    "finetuning/bn_alexnet.py": {
        "torch": {
            "Sequential_15": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 96, kernel_size=11, stride=4, padding=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_35": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.top_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_148": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_92": {
                "variable": {
                    "value": "grayscale",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "variable": {
                    "value": "sobel_filter",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_103": {
                "variable": {
                    "value": "self.sobel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "grayscale",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_142": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_dim",
                            "Name"
                        ],
                        [
                            "v[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "v[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "stride": {
                    "value": "v[2]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "v[3]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "Conv2d_16": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_17": {
                "num_features": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_19": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_21": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_23": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "num_features": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_33": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_36": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "in_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_42": {
                "in_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_81": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_82": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_83": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_84": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_fclayer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_86": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_140": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_144": {
                "num_features": {
                    "value": "v[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_144": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_146": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "finetuning/densenet.py": {
        "torch": {
            "Sequential_76": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_99": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_113": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.features(x)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool2d_114": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(features, inplace=True)",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(out, (1, 1)).view(features.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.classifier(out)",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dropout_35": {
                "variable": {
                    "value": "new_features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "new_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "super(_DenseLayer, self).forward(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(new_features, p=self.drop_rate, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "self.drop_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_36": {
                "tensors": {
                    "value": "[x, new_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_52": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_54": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_96": {
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "BatchNorm2d_22": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "growth_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_77": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_78": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_79": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_80": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "finetuning/loadDB.py": {
        "torch": {}
    },
    "finetuning/main.py": {
        "torch": {
            "device_32": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if use_cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_46": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_fractal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DBLoader(args.path2db, 'train', train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "worker_init_fn",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_57": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_fractal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DBLoader(args.path2db, 'val', test_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.test_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "worker_init_fn",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "SGD_64": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(model.parameters())",
                            "Call"
                        ]
                    ]
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_72": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.SGD(params, lr=args.lr, momentum=args.momentum, weight_decay=args.weight_decay)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "[30, 60]",
                    "type": "List",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_37": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_80": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "DataParallel_87": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model_select(args).to(device)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_108": {
                "obj": {
                    "value": "{'epoch': epoch + 1, 'state_dict': model_state, 'optimizer': optimizer.state_dict(), 'scheduler': scheduler.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.load(args.resume, map_location=lambda storage, loc: storage)",
                            "Call"
                        ],
                        [
                            "'{}/{}_{}_checkpoint.pth.tar'.format(args.path2weight, args.dataset, args.usenet)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_100": {
                "obj": {
                    "value": "model.module.cpu().state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved_weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, 'pt_' + args.dataset + '_ft_' + args.ft_dataset + '_' + args.usenet + '_epoch' + str(epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_103": {
                "obj": {
                    "value": "model.cpu().state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved_weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, 'pt_' + args.dataset + '_ft_' + args.ft_dataset + '_' + args.usenet + '_epoch' + str(epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "finetuning/model_select.py": {
        "torch": {
            "Sequential_27": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(4096, args.numof_classes)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_45": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*removed",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_84": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_118": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_135": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_148": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_170": {
                "variable": {
                    "value": "last_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2208",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_32": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_57": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_74": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_91": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_108": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_125": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_142": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_155": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_177": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_40": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Sequential_43": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(model.classifier.children())[:-1] + list(last_layer)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "args.numof_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_163": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'bn_alexnet-imagenet.pth.tar')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.dataset + '_' + args.usenet + '_epoch' + str(args.useepoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(MODEL_ROOT, 'resnext101_imagenet.pth.tar')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "finetuning/resnet.py": {
        "torch": {
            "Conv2d_18": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_60": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_63": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_100": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_101": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_102": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_107": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_108": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_132": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_123": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "finetuning/resnext.py": {
        "torch": {
            "Conv2d_15": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_57": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "groups": {
                    "value": "num_group",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_60": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_62": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_97": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_98": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_99": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_104": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_105": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_118": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_130": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_121": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "finetuning/train_val.py": {
        "torch": {
            "CrossEntropyLoss_16": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_36": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "no_grad_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "finetuning/vgg.py": {
        "torch": {
            "Sequential_33": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(512 * 7 * 7, 4096)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_158": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_176": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_194": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_212": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "512 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_36": {
                "p": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "p": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.numof_classes",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "MaxPool2d_70": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_74": {
                "num_features": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_74": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/alex.py": {
        "torch": {
            "Sequential_39": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 64, kernel_size=11, stride=4, padding=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(opt.dropout_rate)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_98": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 96, kernel_size=11, stride=4, padding=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_115": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(256 * 6 * 6, 4096)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_166": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 96, kernel_size=11, stride=4, padding=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_186": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AvgPool3d_14": {
                "variable": {
                    "value": "self.average",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(local_size, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(int((local_size - 1.0) / 2), 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "AvgPool2d_18": {
                "variable": {
                    "value": "self.average",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "local_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "int((local_size - 1.0) / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_42": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_44": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "192",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_47": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_49": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "in_channels": {
                    "value": "192",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_60": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_64": {
                "p": {
                    "value": "opt.dropout_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "opt.fc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_68": {
                "p": {
                    "value": "opt.dropout_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_69": {
                "in_features": {
                    "value": "opt.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "opt.fc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "in_features": {
                    "value": "opt.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_99": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_102": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_103": {
                "in_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_104": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_106": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_108": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_109": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_110": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_111": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_112": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_113": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_116": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_117": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_118": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_119": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_120": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_121": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_122": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_167": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_168": {
                "num_features": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_169": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_170": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_171": {
                "in_channels": {
                    "value": "96",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_172": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_173": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_174": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_175": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_176": {
                "num_features": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_177": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_178": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_179": {
                "num_features": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_180": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_181": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_182": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_183": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_184": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_187": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_188": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_189": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_190": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_191": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_192": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_193": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "pretraining/densenet.py": {
        "torch": {
            "Sequential_74": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "OrderedDict([('conv0', nn.Conv2d(3, num_init_features, kernel_size=7, stride=2, padding=3, bias=False)), ('norm0', nn.BatchNorm2d(num_init_features)), ('relu0', nn.ReLU(inplace=True)), ('pool0', nn.MaxPool2d(kernel_size=3, stride=2, padding=1))])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_97": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "relu_111": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.features(x)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool2d_112": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(features, inplace=True)",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(out, (1, 1)).view(features.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.classifier(out)",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "dropout_33": {
                "variable": {
                    "value": "new_features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "new_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "super(_DenseLayer, self).forward(x)",
                            "Call"
                        ],
                        [
                            "F.dropout(new_features, p=self.drop_rate, training=self.training)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "self.drop_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "training": {
                    "value": "self.training",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_34": {
                "tensors": {
                    "value": "[x, new_features]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_48": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_output_features",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_52": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_94": {
                "num_features": {
                    "value": "num_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_init_features",
                            "Name"
                        ],
                        [
                            "num_features + num_layers * growth_rate",
                            "BinOp"
                        ],
                        [
                            "num_features // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "num_input_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "num_features": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "bn_size * growth_rate",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "growth_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_76": {
                "num_features": {
                    "value": "num_init_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_78": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/main.py": {
        "torch": {
            "device_78": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if use_cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_90": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(args.path2traindb, transform=train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "worker_init_fn",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "SGD_103": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_104": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MultiStepLR_105": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum, weight_decay=args.weight_decay)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "[30, 60]",
                    "type": "List",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_83": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_98": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(args.path2valdb, transform=val_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "worker_init_fn",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "load_111": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "DataParallel_118": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model_select(args)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.to(device)",
                            "Call"
                        ],
                        [
                            "bn_alexnet(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "vgg16_bn(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "vgg19_bn(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnet18(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnet34(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnet50(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnet101(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnet152(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnet200(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "resnext101(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ],
                        [
                            "densenet161(pretrained=False, num_classes=args.numof_classes).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_141": {
                "obj": {
                    "value": "model_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.cpu().state_dict()",
                            "Call"
                        ],
                        [
                            "model.module.cpu().state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "saved_weight.replace('.tar', '')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_134": {
                "obj": {
                    "value": "model_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.cpu().state_dict()",
                            "Call"
                        ],
                        [
                            "model.module.cpu().state_dict()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "saved_weight.replace('.tar', '')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_136": {
                "obj": {
                    "value": "{'epoch': epoch + 1, 'state_dict': model_state, 'optimizer': optimizer.state_dict(), 'scheduler': scheduler.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.load(args.resume, map_location=lambda storage, loc: storage)",
                            "Call"
                        ],
                        [
                            "'{}/{}_{}_checkpoint.pth.tar'.format(args.path2weight, args.dataset, args.usenet)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "pretraining/resnet.py": {
        "torch": {
            "Conv2d_18": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_60": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_63": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_100": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_101": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_102": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_107": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_108": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_132": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_123": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/resnext.py": {
        "torch": {
            "Conv2d_15": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_28": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_57": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "groups": {
                    "value": "num_group",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_60": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_62": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_97": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_98": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_99": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_104": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_105": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_118": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_130": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_119": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_121": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/train_val.py": {
        "torch": {
            "no_grad_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pretraining/vgg.py": {
        "torch": {
            "Sequential_33": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(512 * 7 * 7, 4096)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_158": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_176": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_194": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_212": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weight_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ],
                        [
                            "os.path.join(args.path2weight, args.config + '_' + args.usenet + '_epoch' + str(args.pretrained_epoch) + '.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "512 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_36": {
                "p": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "p": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.numof_classes",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "MaxPool2d_70": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_74": {
                "num_features": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_74": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}