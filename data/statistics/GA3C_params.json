{
    "ga3c/NetworkVP.py": {
        "tensorflow": {
            "Graph_49": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_69": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.img_height, self.img_width, self.img_channels]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "X",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_71": {
                "variable": {
                    "value": "self.y_r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "Yr",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_73": {
                "variable": {
                    "value": "self.var_beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "beta",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_74": {
                "variable": {
                    "value": "self.var_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "lr",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Variable_76": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "step",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_81": {
                "variable": {
                    "value": "self.action_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_actions]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_87": {
                "variable": {
                    "value": "self.flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.n2",
                            "Attribute"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, nb_elements._value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "squeeze_90": {
                "variable": {
                    "value": "self.logits_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.dense_layer(self.d1, 1, 'logits_v', func=None)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_112": {
                "variable": {
                    "value": "self.cost_p_1_agg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.cost_p_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_113": {
                "variable": {
                    "value": "self.cost_p_2_agg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.cost_p_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "get_collection_162": {
                "variable": {
                    "value": "summaries",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.SUMMARIES",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_178": {
                "variable": {
                    "value": "self.summary_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "summaries",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.SUMMARIES)",
                            "Call"
                        ]
                    ]
                }
            },
            "FileWriter_179": {
                "variable": {
                    "value": "self.log_writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "'logs/%s' % self.model_name",
                    "type": "BinOp",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.sess.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "latest_checkpoint_257": {
                "variable": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": []
                },
                "checkpoint_dir": {
                    "value": "os.path.dirname(self._checkpoint_filename(episode=0))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_95": {
                "variable": {
                    "value": "self.softmax_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.logits_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_96": {
                "variable": {
                    "value": "self.log_softmax_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.logits_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_97": {
                "variable": {
                    "value": "self.log_selected_action_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.log_softmax_p * self.action_index",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_104": {
                "variable": {
                    "value": "self.selected_action_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.softmax_p * self.action_index",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RMSPropOptimizer_117": {
                "variable": {
                    "value": "self.opt_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.var_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "Config.RMSPROP_DECAY",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "Config.RMSPROP_MOMENTUM",
                    "type": "Attribute",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "Config.RMSPROP_EPSILON",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "RMSPropOptimizer_123": {
                "variable": {
                    "value": "self.opt_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.var_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "Config.RMSPROP_DECAY",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "Config.RMSPROP_MOMENTUM",
                    "type": "Attribute",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "Config.RMSPROP_EPSILON",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "RMSPropOptimizer_130": {
                "variable": {
                    "value": "self.opt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.var_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "Config.RMSPROP_DECAY",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "Config.RMSPROP_MOMENTUM",
                    "type": "Attribute",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "Config.RMSPROP_EPSILON",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "trainable_variables_169": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "random_uniform_initializer_185": {
                "variable": {
                    "value": "w_init",
                    "type": "variable",
                    "possible_values": []
                },
                "minval": {
                    "value": "-d",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / np.sqrt(in_dim)",
                            "BinOp"
                        ],
                        [
                            "1.0 / np.sqrt(filter_size * filter_size * in_dim)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "random_uniform_initializer_186": {
                "variable": {
                    "value": "b_init",
                    "type": "variable",
                    "possible_values": []
                },
                "minval": {
                    "value": "-d",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / np.sqrt(in_dim)",
                            "BinOp"
                        ],
                        [
                            "1.0 / np.sqrt(filter_size * filter_size * in_dim)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "get_variable_187": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "w",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[in_dim, out_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "w_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ],
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ]
                    ]
                }
            },
            "get_variable_188": {
                "variable": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[out_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "b_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ],
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ]
                    ]
                }
            },
            "random_uniform_initializer_200": {
                "variable": {
                    "value": "w_init",
                    "type": "variable",
                    "possible_values": []
                },
                "minval": {
                    "value": "-d",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / np.sqrt(in_dim)",
                            "BinOp"
                        ],
                        [
                            "1.0 / np.sqrt(filter_size * filter_size * in_dim)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "random_uniform_initializer_201": {
                "variable": {
                    "value": "b_init",
                    "type": "variable",
                    "possible_values": []
                },
                "minval": {
                    "value": "-d",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / np.sqrt(in_dim)",
                            "BinOp"
                        ],
                        [
                            "1.0 / np.sqrt(filter_size * filter_size * in_dim)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "get_variable_202": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "w",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[filter_size, filter_size, in_dim, out_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "w_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ],
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ]
                    ]
                }
            },
            "get_variable_206": {
                "variable": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[out_dim]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "b_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ],
                        [
                            "tf.random_uniform_initializer(-d, d)",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_54": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "tf.ConfigProto(allow_soft_placement=True, log_device_placement=False, gpu_options=tf.GPUOptions(allow_growth=True))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_91": {
                "input_tensor": {
                    "value": "tf.square(self.y_r - self.logits_v)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "scalar_163": {
                "name": {
                    "value": "Pcost_advantage",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.cost_p_1_agg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_164": {
                "name": {
                    "value": "Pcost_entropy",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.cost_p_2_agg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_165": {
                "name": {
                    "value": "Pcost",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.cost_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_166": {
                "name": {
                    "value": "Vcost",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.cost_v",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_167": {
                "name": {
                    "value": "LearningRate",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.var_learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_168": {
                "name": {
                    "value": "Beta",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.var_beta",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_172": {
                "name": {
                    "value": "activation_n1",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.n1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_173": {
                "name": {
                    "value": "activation_n2",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.n2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_174": {
                "name": {
                    "value": "activation_d2",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.d1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_175": {
                "name": {
                    "value": "activation_v",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.logits_v",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_176": {
                "name": {
                    "value": "activation_p",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.softmax_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_184": {
                "name_or_scope": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "name",
                            "Method Argument"
                        ],
                        [
                            "name",
                            "Method Argument"
                        ],
                        [
                            "name",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "variable_scope_199": {
                "name_or_scope": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "name",
                            "Method Argument"
                        ],
                        [
                            "name",
                            "Method Argument"
                        ],
                        [
                            "name",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "device_51": {
                "device_name": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_64": {
                "variable": {
                    "value": "vars",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_65": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "var_list": {
                    "value": "{var.name: var for var in vars}",
                    "type": "DictComp",
                    "possible_values": []
                },
                "max_to_keep": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_91": {
                "x": {
                    "value": "self.y_r - self.logits_v",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_101": {
                "input_tensor": {
                    "value": "self.log_softmax_p * self.softmax_p",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_106": {
                "x": {
                    "value": "tf.maximum(self.selected_action_prob, self.log_epsilon)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_109": {
                "input_tensor": {
                    "value": "tf.log(tf.maximum(self.softmax_p, self.log_epsilon)) * self.softmax_p",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "histogram_170": {
                "name": {
                    "value": "'weights_%s' % var.name",
                    "type": "BinOp",
                    "possible_values": []
                },
                "data": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.trainable_variables()",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_190": {
                "a": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input",
                            "Method Argument"
                        ],
                        [
                            "input",
                            "Method Argument"
                        ]
                    ]
                },
                "b": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable('w', dtype=tf.float32, shape=[in_dim, out_dim], initializer=w_init)",
                            "Call"
                        ],
                        [
                            "tf.get_variable('w', shape=[filter_size, filter_size, in_dim, out_dim], dtype=tf.float32, initializer=w_init)",
                            "Call"
                        ]
                    ]
                }
            },
            "conv2d_208": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input",
                            "Method Argument"
                        ],
                        [
                            "input",
                            "Method Argument"
                        ]
                    ]
                },
                "filters": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable('w', dtype=tf.float32, shape=[in_dim, out_dim], initializer=w_init)",
                            "Call"
                        ],
                        [
                            "tf.get_variable('w', shape=[filter_size, filter_size, in_dim, out_dim], dtype=tf.float32, initializer=w_init)",
                            "Call"
                        ]
                    ]
                },
                "strides": {
                    "value": "strides",
                    "type": "variable",
                    "possible_values": [
                        [
                            "strides",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "global_variables_initializer_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stop_gradient_99": {
                "input": {
                    "value": "self.logits_v",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_103": {
                "logits": {
                    "value": "self.logits_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "maximum_106": {
                "x": {
                    "value": "self.selected_action_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.log_epsilon",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stop_gradient_107": {
                "input": {
                    "value": "self.logits_v",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ConfigProto_56": {
                "allow_soft_placement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "log_device_placement": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "gpu_options": {
                    "value": "tf.GPUOptions(allow_growth=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_109": {
                "x": {
                    "value": "tf.maximum(self.softmax_p, self.log_epsilon)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "clip_by_norm_139": {
                "t": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "Config.GRAD_CLIP_NORM",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_norm_144": {
                "t": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "Config.GRAD_CLIP_NORM",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_average_norm_150": {
                "t": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "Config.GRAD_CLIP_NORM",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "maximum_109": {
                "x": {
                    "value": "self.softmax_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.log_epsilon",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GPUOptions_59": {
                "allow_growth": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}