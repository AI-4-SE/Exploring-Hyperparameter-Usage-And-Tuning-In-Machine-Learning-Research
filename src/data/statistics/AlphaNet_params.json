{
    "loss_ops.py": {
        "torch": {
            "softmax_70": {
                "variable": {
                    "value": "q_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "q_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_71": {
                "variable": {
                    "value": "p_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_72": {
                "variable": {
                    "value": "q_log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "q_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_91": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "q_prob * (f - f_base)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_9": {
                "variable": {
                    "value": "output_log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_26": {
                "variable": {
                    "value": "soft_target_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "soft_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_27": {
                "variable": {
                    "value": "output_log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_54": {
                "variable": {
                    "value": "one_hot",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "scatter_54": {
                "variable": {
                    "value": "one_hot",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "target.view(-1, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "index": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_56": {
                "variable": {
                    "value": "output_log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gt_114": {
                "variable": {
                    "value": "ind",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_left",
                    "type": "Variable",
                    "possible_values": []
                },
                "other": {
                    "value": "loss_right",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_like_31": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "scatter_31": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "target.view(-1, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "index": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_85": {
                "variable": {
                    "value": "iw_alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "importance_ratio",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "p_prob / q_prob",
                            "BinOp"
                        ],
                        [
                            "importance_ratio.clamp(0, iw_clip)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.9",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_92": {
                "input": {
                    "value": "q_prob * rho_f * q_log_prob",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_12": {
                "input": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(output).scatter(1, target.view(-1, 1), 1)",
                            "Call"
                        ],
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "one_hot * (1 - self.eps) + self.eps / n_class",
                            "BinOp"
                        ],
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "mat2": {
                    "value": "output_log_prob",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_28": {
                "input": {
                    "value": "soft_target_prob * output_log_prob",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_59": {
                "input": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(output).scatter(1, target.view(-1, 1), 1)",
                            "Call"
                        ],
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "one_hot * (1 - self.eps) + self.eps / n_class",
                            "BinOp"
                        ],
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "mat2": {
                    "value": "output_log_prob",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_34": {
                "input": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(output).scatter(1, target.view(-1, 1), 1)",
                            "Call"
                        ],
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "one_hot * (1 - self.eps) + self.eps / n_class",
                            "BinOp"
                        ],
                        [
                            "target.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "mat2": {
                    "value": "output_log_prob",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.log_softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "output_log_prob.unsqueeze(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "parallel_supernet_evo_search.py": {
        "torch": {
            "CrossEntropyLoss_77": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_166": {
                "variable": {
                    "value": "ngpus_per_node",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_device_64": {
                "device": {
                    "value": "args.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_68": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "test_alphanet.py": {
        "torch": {
            "manual_seed_48": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_49": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_74": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train_alphanet.py": {
        "torch": {
            "device_count_100": {
                "variable": {
                    "value": "ngpus_per_node",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_92": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_124": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_device_149": {
                "device": {
                    "value": "args.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_126": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_293": {
                "variable": {
                    "value": "stats",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[corr1, corr5, loss, args.batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "args.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clip_grad_value__285": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value": {
                    "value": "args.grad_clip_value",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}