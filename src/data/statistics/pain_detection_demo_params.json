{
    "face_alignment/api.py": {
        "torch": {
            "stack_233": {
                "variable": {
                    "value": "center",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[bb[:, 2] - (bb[:, 2] - bb[:, 0]) / 2.0, bb[:, 3] - (bb[:, 3] - bb[:, 1]) / 2.0]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_252": {
                "variable": {
                    "value": "intercanthal_distances",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "((ground_truth_landmarks[:, 42:43, :] - ground_truth_landmarks[:, 39:40, :]) ** 2).sum(dim=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_252": {
                "variable": {
                    "value": "intercanthal_distances",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sqrt_257": {
                "variable": {
                    "value": "pixel_error",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "((ground_truth_landmarks - model_landmarks) ** 2).sum(dim=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_257": {
                "variable": {
                    "value": "pixel_error",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "div_258": {
                "variable": {
                    "value": "normalized_error",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pixel_error",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt(((ground_truth_landmarks - model_landmarks) ** 2).sum(dim=2)).mean(dim=1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "intercanthal_distances",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sqrt(((ground_truth_landmarks[:, 42:43, :] - ground_truth_landmarks[:, 39:40, :]) ** 2).sum(dim=2)).squeeze()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_274": {
                "variable": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "DataLoader_338": {
                "variable": {
                    "value": "data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_383": {
                "variable": {
                    "value": "(max, idx)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "hm.view(hm.size(0), hm.size(1), hm.size(2) * hm.size(3))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_387": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "1e-10",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_441": {
                "variable": {
                    "value": "preds_orig",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "preds.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_85": {
                "variable": {
                    "value": "fan_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "check_point_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "set_grad_enabled_141": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "from_numpy_151": {
                "variable": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "inp.transpose((2, 0, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_201": {
                "data": {
                    "value": "heatmaps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((68, 256, 256), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(heatmaps).unsqueeze_(0)",
                            "Call"
                        ],
                        [
                            "heatmaps.to(self.device)",
                            "Call"
                        ],
                        [
                            "np.zeros((target_landmarks.shape[0], 68, 64, 64), dtype=np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_224": {
                "tensors": {
                    "value": "[x_y_min, x_y_max]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_172": {
                "variable": {
                    "value": "heatmaps",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "heatmaps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((68, 256, 256), dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(heatmaps).unsqueeze_(0)",
                            "Call"
                        ],
                        [
                            "heatmaps.to(self.device)",
                            "Call"
                        ],
                        [
                            "np.zeros((target_landmarks.shape[0], 68, 64, 64), dtype=np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_178": {
                "variable": {
                    "value": "pts_img",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(pts_img, depth_pred * (1.0 / (256.0 / (200.0 * scale))))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_241": {
                "tensors": {
                    "value": "cropped_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_402": {
                "variable": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY, pX]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_162": {
                "data": {
                    "value": "[scale]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_240": {
                "data": {
                    "value": "crop(images[i].numpy(), center[i].numpy(), scale[i].numpy())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_404": {
                "variable": {
                    "value": "p1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY, pX + 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_422": {
                "variable": {
                    "value": "p1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY, pX - 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_410": {
                "variable": {
                    "value": "p2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY + 1, pX]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_416": {
                "variable": {
                    "value": "p2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY - 1, pX]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_428": {
                "variable": {
                    "value": "p2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY + 1, pX]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_434": {
                "variable": {
                    "value": "p2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "hm_[pY - 1, pX]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "log_407": {
                "input": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(hm_[pY, pX], eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_425": {
                "input": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(hm_[pY, pX], eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_413": {
                "input": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(hm_[pY, pX], eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_419": {
                "input": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(hm_[pY, pX], eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_431": {
                "input": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(hm_[pY, pX], eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_437": {
                "input": {
                    "value": "p0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(hm_[pY, pX], eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_177": {
                "tensors": {
                    "value": "(inp, heatmaps)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/detection/core.py": {
        "torch": {
            "is_tensor_125": {
                "obj": {
                    "value": "tensor_or_path",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/detection/folder/folder_detector.py": {
        "torch": {
            "load_32": {
                "variable": {
                    "value": "detected_faces",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "base_name + '.t7'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_34": {
                "variable": {
                    "value": "detected_faces",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "base_name + '.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/detection/sfd/bbox.py": {
        "torch": {
            "cat_104": {
                "variable": {
                    "value": "boxes",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(priors[:, :2] + loc[:, :2] * variances[0] * priors[:, 2:], priors[:, 2:] * torch.exp(loc[:, 2:] * variances[1]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_88": {
                "tensors": {
                    "value": "[g_cxcy, g_wh]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_86": {
                "input": {
                    "value": "g_wh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(matched[:, 2:] - matched[:, :2]) / priors[:, 2:]",
                            "BinOp"
                        ],
                        [
                            "torch.log(g_wh) / variances[1]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "exp_106": {
                "input": {
                    "value": "loc[:, 2:] * variances[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/detection/sfd/detect.py": {
        "torch": {
            "from_numpy_27": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img - np.array([104, 117, 123])",
                            "BinOp"
                        ],
                        [
                            "img.transpose(2, 0, 1)",
                            "Call"
                        ],
                        [
                            "img.reshape((1,) + img.shape)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img).float().to(device)",
                            "Call"
                        ],
                        [
                            "cv2.flip(img, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_34": {
                "variable": {
                    "value": "olist[i * 2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "olist[i * 2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_46": {
                "variable": {
                    "value": "priors",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/detection/sfd/net_s3fd.py": {
        "torch": {
            "Parameter_12": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(self.n_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "variable": {
                    "value": "self.conv1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "self.conv1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "variable": {
                    "value": "self.conv2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.conv2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.conv3_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.conv4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "variable": {
                    "value": "self.conv4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv4_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.conv5_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.conv5_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "variable": {
                    "value": "self.conv5_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.conv6_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.conv6_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "variable": {
                    "value": "self.conv7_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.conv7_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv3_3_norm_mbox_conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv3_3_norm_mbox_loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "variable": {
                    "value": "self.conv4_3_norm_mbox_conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "variable": {
                    "value": "self.conv4_3_norm_mbox_loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_60": {
                "variable": {
                    "value": "self.conv5_3_norm_mbox_conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "self.conv5_3_norm_mbox_loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.fc7_mbox_conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.fc7_mbox_loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.conv6_2_mbox_conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.conv6_2_mbox_loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_67": {
                "variable": {
                    "value": "self.conv7_2_mbox_conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_68": {
                "variable": {
                    "value": "self.conv7_2_mbox_loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_71": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_72": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_73": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc6(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc7(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_2(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_75": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_76": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_77": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc6(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc7(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_2(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_79": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_3(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_83": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc6(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc7(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_2(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_86": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_87": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_3(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_89": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc6(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc7(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_2(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_91": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_92": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_93": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5_3(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_95": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(x))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv5_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, 2, 2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc6(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc7(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv6_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv7_2(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_97": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc6(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_98": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc7(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_100": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_101": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv6_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_103": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_104": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv7_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "chunk_125": {
                "variable": {
                    "value": "chunk",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cls1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv3_3_norm_mbox_conf(f3_3)",
                            "Call"
                        ],
                        [
                            "torch.cat([bmax, chunk[3]], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_126": {
                "input": {
                    "value": "chunk[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_127": {
                "variable": {
                    "value": "cls1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[bmax, chunk[3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/detection/sfd/sfd_detector.py": {
        "torch": {}
    },
    "face_alignment/models.py": {
        "torch": {
            "Conv2d_9": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "strd",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_16": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "int(out_planes / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "int(out_planes / 4)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_37": {
                "variable": {
                    "value": "out1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "F.relu(out1, True)",
                            "Call"
                        ],
                        [
                            "self.conv1(out1)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "out2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn2(out1)",
                            "Call"
                        ],
                        [
                            "F.relu(out2, True)",
                            "Call"
                        ],
                        [
                            "self.conv2(out2)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_45": {
                "variable": {
                    "value": "out3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn3(out2)",
                            "Call"
                        ],
                        [
                            "F.relu(out3, True)",
                            "Call"
                        ],
                        [
                            "self.conv3(out3)",
                            "Call"
                        ],
                        [
                            "torch.cat((out1, out2, out3), 1)",
                            "Call"
                        ],
                        [
                            "out3 + residual",
                            "BinOp"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_48": {
                "variable": {
                    "value": "out3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out1, out2, out3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_65": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_68": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_70": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_125": {
                "variable": {
                    "value": "low1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_137": {
                "variable": {
                    "value": "up2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "low3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "low2",
                            "Name"
                        ],
                        [
                            "self._modules['b3_' + str(level)](low3)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_152": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_153": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_175": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "avg_pool2d_176": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_209": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3 + 68",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_211": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_212": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_213": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_218": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_219": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "68",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.downsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.BatchNorm2d(in_planes)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_189": {
                "variable": {
                    "value": "ll",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self._modules['bn_end' + str(i)](self._modules['conv_last' + str(i)](ll))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_232": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_244": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_163": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_164": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_165": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "68",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_233": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_235": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_170": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_171": {
                "in_channels": {
                    "value": "68",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "face_alignment/utils.py": {
        "torch": {
            "ones_73": {
                "variable": {
                    "value": "_pt",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "eye_78": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_144": {
                "variable": {
                    "value": "(max, idx)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "hm.view(hm.size(0), hm.size(1), hm.size(2) * hm.size(3))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_165": {
                "variable": {
                    "value": "preds_orig",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "preds.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_212": {
                "variable": {
                    "value": "(max, idx)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "hm.view(hm.size(0), hm.size(1), hm.size(2) * hm.size(3))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_233": {
                "variable": {
                    "value": "preds_orig",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "preds.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "inverse_85": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.eye(3)",
                            "Call"
                        ],
                        [
                            "torch.inverse(t)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_276": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(tensor)",
                            "Call"
                        ],
                        [
                            "shuffle_lr(tensor).flip(tensor.ndimension() - 1)",
                            "Call"
                        ],
                        [
                            "tensor.flip(tensor.ndimension() - 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_87": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.eye(3)",
                            "Call"
                        ],
                        [
                            "torch.inverse(t)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "_pt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(3)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_tensor_275": {
                "obj": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(tensor)",
                            "Call"
                        ],
                        [
                            "shuffle_lr(tensor).flip(tensor.ndimension() - 1)",
                            "Call"
                        ],
                        [
                            "tensor.flip(tensor.ndimension() - 1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/comparative_model.py": {
        "torch": {
            "Dropout2d_11": {
                "variable": {
                    "value": "self.dout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_12": {
                "variable": {
                    "value": "self.input_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_13": {
                "variable": {
                    "value": "self.layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 64, kernel_size=5, stride=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_17": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 128, kernel_size=5, stride=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_23": {
                "variable": {
                    "value": "self.layer3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(128, 128, kernel_size=5, stride=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4608",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "fc2_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "200",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "fc2_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "200",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "max_pool2d_36": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.layer1(x[:, 0:1, ...])",
                            "Call"
                        ],
                        [
                            "out - out_ref",
                            "BinOp"
                        ],
                        [
                            "nn.functional.max_pool2d(out, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "self.dout1(out)",
                            "Call"
                        ],
                        [
                            "self.layer2(out)",
                            "Call"
                        ],
                        [
                            "self.layer3(out)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.fc1(out.reshape(out.size(0), -1))",
                            "Call"
                        ],
                        [
                            "nn.functional.relu(features)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_15": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_21": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout2d_22": {
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout2d_28": {
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "pain_detector.py": {
        "torch": {
            "is_available_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_32": {
                "f": {
                    "value": "checkpoint_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_147": {
                "ndarray": {
                    "value": "image_face",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.piecewise_affine_transform(image_face, lmks, mean_lmks)",
                            "Call"
                        ],
                        [
                            "self.crop_image(image_face, b_box)",
                            "Call"
                        ],
                        [
                            "cv2.resize(image_face, (self.image_size, self.image_size))",
                            "Call"
                        ],
                        [
                            "np.matmul(image_face, np.array([[0.114], [0.587], [0.299]]))",
                            "Call"
                        ],
                        [
                            "self.clahe.apply((image_face * 255).astype(np.uint8))",
                            "Call"
                        ],
                        [
                            "image_face.reshape(1, 1, self.image_size, self.image_size).astype(np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_160": {
                "variable": {
                    "value": "frames",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[target_frame, ref_frame]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}