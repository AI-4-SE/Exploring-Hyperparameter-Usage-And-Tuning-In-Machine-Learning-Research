{
    "layers.py": {
        "tensorflow": {
            "tile_58": {
                "variable": {
                    "value": "repeated_unit_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.expand_dims(unit_inputs, 2), 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, K.shape(pixel_inputs)[2], K.shape(pixel_inputs)[3], 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_381": {
                "variable": {
                    "value": "xx_range",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.arange(0, dim), axis=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "K.stack([batch_shape, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_399": {
                "variable": {
                    "value": "xx_ones",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "K.stack([batch_shape, dim2])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tile_402": {
                "variable": {
                    "value": "xx_range",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.arange(0, dim1), axis=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "K.stack([batch_shape, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_409": {
                "variable": {
                    "value": "yy_ones",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "K.stack([batch_shape, dim1])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tile_412": {
                "variable": {
                    "value": "yy_range",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.arange(0, dim2), axis=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "K.stack([batch_shape, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_446": {
                "variable": {
                    "value": "xx_ones",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "K.stack([batch_shape, dim3])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tile_449": {
                "variable": {
                    "value": "xx_range",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.arange(0, dim2), axis=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "K.stack([batch_shape, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tile_458": {
                "variable": {
                    "value": "xx_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "xx_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.cast(xx_range, K.floatx())",
                            "Call"
                        ],
                        [
                            "xx_channels / K.cast(dim - 1, K.floatx())",
                            "BinOp"
                        ],
                        [
                            "xx_channels * 2 - 1.0",
                            "BinOp"
                        ],
                        [
                            "K.batch_dot(xx_ones, xx_range, axes=[2, 1])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(xx_channels, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.permute_dimensions(xx_channels, [0, 2, 1, 3])",
                            "Call"
                        ],
                        [
                            "K.cast(xx_channels, K.floatx())",
                            "Call"
                        ],
                        [
                            "xx_channels / K.cast(dim1 - 1, K.floatx())",
                            "BinOp"
                        ],
                        [
                            "xx_channels * 2 - 1.0",
                            "BinOp"
                        ],
                        [
                            "K.batch_dot(xx_ones, xx_range, axes=[2, 1])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(xx_channels, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.permute_dimensions(xx_channels, [0, 2, 1, 3])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(xx_channels, axis=1)",
                            "Call"
                        ],
                        [
                            "tf.tile(xx_channels, [1, dim1, 1, 1, 1])",
                            "Call"
                        ],
                        [
                            "K.cast(xx_channels, K.floatx())",
                            "Call"
                        ],
                        [
                            "xx_channels / K.cast(dim2 - 1, K.floatx())",
                            "BinOp"
                        ],
                        [
                            "xx_channels * 2 - 1.0",
                            "BinOp"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, dim1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_461": {
                "variable": {
                    "value": "yy_ones",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "K.stack([batch_shape, dim2])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tile_464": {
                "variable": {
                    "value": "yy_range",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.arange(0, dim3), axis=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "K.stack([batch_shape, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tile_473": {
                "variable": {
                    "value": "yy_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "yy_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(yy_range, yy_ones, axes=[2, 1])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(yy_channels, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.permute_dimensions(yy_channels, [0, 2, 1, 3])",
                            "Call"
                        ],
                        [
                            "K.cast(yy_channels, K.floatx())",
                            "Call"
                        ],
                        [
                            "yy_channels / K.cast(dim2 - 1, K.floatx())",
                            "BinOp"
                        ],
                        [
                            "yy_channels * 2 - 1.0",
                            "BinOp"
                        ],
                        [
                            "K.batch_dot(yy_range, yy_ones, axes=[2, 1])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(yy_channels, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.permute_dimensions(yy_channels, [0, 2, 1, 3])",
                            "Call"
                        ],
                        [
                            "K.expand_dims(yy_channels, axis=1)",
                            "Call"
                        ],
                        [
                            "tf.tile(yy_channels, [1, dim1, 1, 1, 1])",
                            "Call"
                        ],
                        [
                            "K.cast(yy_channels, K.floatx())",
                            "Call"
                        ],
                        [
                            "yy_channels / K.cast(dim3 - 1, K.floatx())",
                            "BinOp"
                        ],
                        [
                            "yy_channels * 2 - 1.0",
                            "BinOp"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, dim1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_476": {
                "variable": {
                    "value": "zz_range",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.arange(0, dim1), axis=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "K.stack([batch_shape, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tile_481": {
                "variable": {
                    "value": "zz_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "zz_range",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.tile(K.expand_dims(K.arange(0, dim1), axis=0), K.stack([batch_shape, 1]))",
                            "Call"
                        ],
                        [
                            "K.expand_dims(zz_range, axis=-1)",
                            "Call"
                        ],
                        [
                            "K.expand_dims(zz_range, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, 1, dim2, dim3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_63": {
                "variable": {
                    "value": "repeated_unit_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "K.expand_dims(K.expand_dims(unit_inputs, 1), 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, K.shape(pixel_inputs)[1], K.shape(pixel_inputs)[2], 1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "tensorflow": {}
    },
    "predict.py": {
        "tensorflow": {}
    },
    "predict_anim.py": {
        "tensorflow": {}
    },
    "train_tf1.py": {
        "tensorflow": {
            "reduce_sum_148": {
                "input_tensor": {
                    "value": "tf.image.total_variation(fs_1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "total_variation_148": {
                "images": {
                    "value": "fs_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "G([fp_in, fl_in])",
                            "Call"
                        ],
                        [
                            "G([fp_in, fl_in])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "train_tf2.py": {
        "tensorflow": {
            "GradientTape_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_129": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_118": {
                "input_tensor": {
                    "value": "-tf.math.log(r_valid + 1e-09) - tf.math.log(1 - f_valid + 1e-09)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_138": {
                "input_tensor": {
                    "value": "-tf.math.log(f_valid + 1e-09)",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_mean_134": {
                "input_tensor": {
                    "value": "tf.square(fs_1 - s_train)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_134": {
                "input_tensor": {
                    "value": "tf.image.total_variation(fs_1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_136": {
                "input_tensor": {
                    "value": "tf.square(fs_3 - s_train)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_118": {
                "x": {
                    "value": "r_valid + 1e-09",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_134": {
                "x": {
                    "value": "fs_1 - s_train",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "total_variation_134": {
                "images": {
                    "value": "fs_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "G([p_train, l_train])",
                            "Call"
                        ],
                        [
                            "G([p_train, l_train])",
                            "Call"
                        ]
                    ]
                }
            },
            "square_136": {
                "x": {
                    "value": "fs_3 - s_train",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_138": {
                "x": {
                    "value": "f_valid + 1e-09",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "tensorflow": {}
    }
}