{
    "Bilateral_Correlation.py": {
        "torch": {
            "ones_11": {
                "variable": {
                    "value": "self.grid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_16": {
                "variable": {
                    "value": "d_u",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-self.md",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "self.md",
                    "type": "Attribute",
                    "possible_values": []
                },
                "steps": {
                    "value": "2 * self.md + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "linspace_17": {
                "variable": {
                    "value": "d_v",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-self.md",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "self.md",
                    "type": "Attribute",
                    "possible_values": []
                },
                "steps": {
                    "value": "2 * self.md + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_19": {
                "variable": {
                    "value": "self.d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(d_u, d_v)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "arange_37": {
                "variable": {
                    "value": "xx",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_38": {
                "variable": {
                    "value": "yy",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_40": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xx, yy)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_54": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.grid + BM_d",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "border",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_55": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "grid_sample_57": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.ones(x.size(), device=x.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.grid_sample(mask, vgrid, align_corners=True)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask < 0.999, 0)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask > 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.grid + BM_d",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "equal_76": {
                "input": {
                    "value": "self.grid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "torch.ones(1).cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "BC_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ones_76": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_92": {
                "input": {
                    "value": "torch.mul(fw_feature, bw_feature)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mul_92": {
                "input": {
                    "value": "fw_feature",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.warp(feature2[i].view((1,) + feature2[i].size()).expand(self.range, -1, -1, -1), 2 * (1 - time) * SBM_d[i])",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "bw_feature",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.warp(feature1[i].view((1,) + feature1[i].size()).expand(self.range, -1, -1, -1), 2 * -time * SBM_d[i])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Upsample.py": {
        "torch": {
            "pad_15": {
                "variable": {
                    "value": "batch_img",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch_img",
                    "type": "Call",
                    "possible_values": [
                        [
                            "img.view(B * C, 1, H, W)",
                            "Call"
                        ],
                        [
                            "F.pad(batch_img, [0, 1, 0, 1], mode='replicate')",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "[0, 1, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "replicate",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv_transpose2d_17": {
                "variable": {
                    "value": "upsamp_img",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "batch_img",
                    "type": "Call",
                    "possible_values": [
                        [
                            "img.view(B * C, 1, H, W)",
                            "Call"
                        ],
                        [
                            "F.pad(batch_img, [0, 1, 0, 1], mode='replicate')",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "kernel",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "1 - torch.abs(c - torch.arange(w, dtype=torch.float32, device=device)) / (c + 1)",
                            "BinOp"
                        ],
                        [
                            "kernel.repeat(w).view(w, -1) * kernel.unsqueeze(1)",
                            "BinOp"
                        ],
                        [
                            "upsample_kernel2d(factor * 2 - 1, img.device)",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "factor",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "factor - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_6": {
                "input": {
                    "value": "c - torch.arange(w, dtype=torch.float32, device=device)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_6": {
                "start": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "correlation_package/correlation.py": {
        "torch": {
            "device_of_28": {
                "obj": {
                    "value": "input1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "input1.contiguous()",
                            "Call"
                        ]
                    ]
                }
            },
            "device_of_42": {
                "obj": {
                    "value": "input1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "input1.contiguous()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "correlation_package/setup.py": {
        "torch": {}
    },
    "data/FILM.py": {
        "torch": {
            "cat_53": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "data/Vimeo90K.py": {
        "torch": {
            "cat_67": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_133": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "data/X4K1000FPS.py": {
        "torch": {
            "cat_46": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "data/Xiph_HD.py": {
        "torch": {
            "cat_46": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "data/ucf101.py": {
        "torch": {
            "cat_29": {
                "variable": {
                    "value": "Input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/ABMNet.py": {
        "torch": {
            "Conv2d_22": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_29": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_54": {
                "variable": {
                    "value": "self.leakyRELU",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "arange_104": {
                "variable": {
                    "value": "xx",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_105": {
                "variable": {
                    "value": "yy",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_107": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xx, yy)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_119": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((corr2, c12, V_2), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_0(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((corr1, c11, V_1, feat1), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv1_0(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv1_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv1_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv1_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv1_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "self.dc_conv4(self.dc_conv3(self.dc_conv2(self.dc_conv1(x))))",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_121": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(torch.ones(x.size())).to(x.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.grid_sample(mask, vgrid, align_corners=True)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask < 0.999, 0)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask > 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_148": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(corr2, c12, V_2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_149": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_0(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_150": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_151": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_152": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_153": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_168": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(corr1, c11, V_1, feat1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_169": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv1_0(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_170": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv1_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv1_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv1_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_173": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv1_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_11": {
                "*args": {
                    "value": "nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, dilation=dilation, bias=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_16": {
                "*args": {
                    "value": "nn.Conv2d(in_planes, out_planes, kernel_size=kernel_size, stride=stride, padding=padding, dilation=dilation, bias=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_12": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_14": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_179": {
                "input": {
                    "value": "flow",
                    "type": "Name",
                    "possible_values": [
                        [
                            "V_1 + self.dc_conv7(self.dc_conv6(self.dc_conv5(x)))",
                            "BinOp"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_179": {
                "input": {
                    "value": "Z_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Upsample(Z_2, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_164": {
                "input": {
                    "value": "Z_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Upsample(Z_2, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_120": {
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "model/SBMNet.py": {
        "torch": {
            "Sequential_7": {
                "*args": {
                    "value": "nn.Conv2d(in_channels, out_channels, kernel_size=kernel_size, stride=stride, padding=padding, dilation=dilation, bias=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_18": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_46": {
                "variable": {
                    "value": "self.leakyRELU",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "arange_129": {
                "variable": {
                    "value": "xx",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_130": {
                "variable": {
                    "value": "yy",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_132": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xx, yy)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_144": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((self.conv6_0(bicorr6), bicorr6), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv6_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv6_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv6_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv6_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((bicorr5, warp1_5, warp2_5, up_flow6, up_feat6), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv5_0(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv5_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv5_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv5_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv5_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((bicorr4, warp1_4, warp2_4, up_flow5, up_feat5), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv4_0(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv4_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv4_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv4_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv4_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((bicorr3, warp1_3, warp2_3, up_flow4, up_feat4), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv3_0(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv3_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv3_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv3_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv3_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((bicorr2, warp1_2, warp2_2, up_flow3, up_feat3), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_0(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_1(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_2(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_3(x), x), 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((self.conv2_4(x), x), 1)",
                            "Call"
                        ],
                        [
                            "self.dc_conv4(self.dc_conv3(self.dc_conv2(self.dc_conv1(x))))",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_146": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(torch.ones(x.size())).to(x.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.grid_sample(mask, vgrid, align_corners=True)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask < 0.999, 0)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask > 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_174": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv6_0(bicorr6), bicorr6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_175": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv6_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_176": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv6_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_177": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv6_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_178": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv6_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(bicorr5, warp1_5, warp2_5, up_flow6, up_feat6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_188": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv5_0(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_189": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv5_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_190": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv5_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_191": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv5_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_192": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv5_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_201": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(bicorr4, warp1_4, warp2_4, up_flow5, up_feat5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_202": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv4_0(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_203": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv4_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_204": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv4_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_205": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv4_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_206": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv4_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_216": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(bicorr3, warp1_3, warp2_3, up_flow4, up_feat4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_217": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv3_0(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_218": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv3_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_219": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv3_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_220": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv3_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_221": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv3_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_230": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(bicorr2, warp1_2, warp2_2, up_flow3, up_feat3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_231": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_0(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_232": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_1(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_2(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_234": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_3(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_235": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(self.conv2_4(x), x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_8": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "4",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_10": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_171": {
                "*size": {
                    "value": "c16.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "c16.size(2)",
                    "type": "Call",
                    "possible_values": []
                },
                "layout": {
                    "value": "c16.size(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_145": {
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "model/SynthesisNet.py": {
        "torch": {
            "cat_24": {
                "variable": {
                    "value": "x_localexpand",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_localexpand",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_localexpand, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_25": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.mul(x_localexpand, filter)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_25": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "self.Feature_First",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 32, kernel_size=3, stride=1, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.Feature_Second",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(32, 64, kernel_size=3, stride=2, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "variable": {
                    "value": "self.Feature_Third",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(64, 96, kernel_size=3, stride=2, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "arange_321": {
                "variable": {
                    "value": "xx",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_322": {
                "variable": {
                    "value": "yy",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_324": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xx, yy)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_333": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.sum(torch.mul(x_localexpand, filter), dim=1).unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_335": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(torch.ones(x.size())).to(x.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.grid_sample(mask, vgrid, align_corners=True)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask < 0.999, 0)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask > 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_391": {
                "variable": {
                    "value": "DF",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.FilterNet(V_Pyr_0_t_SBM, V_Pyr_0_t_ABM, V_Pyr_1_t_SBM, V_Pyr_1_t_ABM)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_398": {
                "variable": {
                    "value": "Filtered_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "Filtered_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "96",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "96",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "*args": {
                    "value": "torch.nn.Conv2d(in_channels=intInput, out_channels=intOutput, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_74": {
                "*args": {
                    "value": "torch.nn.PReLU()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "*args": {
                    "value": "torch.nn.PReLU()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_94": {
                "*args": {
                    "value": "torch.nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_105": {
                "*args": {
                    "value": "torch.nn.PReLU()",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_154": {
                "tensors": {
                    "value": "(V_0_t_SBM[0], V_0_t_ABM[0], V_1_t_SBM[0], V_1_t_ABM[0])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_158": {
                "tensors": {
                    "value": "(V_0_t_SBM[1][:, 3:, :, :], V_0_t_ABM[1][:, 3:, :, :], V_1_t_SBM[1][:, 3:, :, :], V_1_t_ABM[1][:, 3:, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_163": {
                "tensors": {
                    "value": "(V_0_t_SBM[2][:, 3:, :, :], V_0_t_ABM[2][:, 3:, :, :], V_1_t_SBM[2][:, 3:, :, :], V_1_t_ABM[2][:, 3:, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_188": {
                "*args": {
                    "value": "torch.nn.Conv2d(in_channels=intInput, out_channels=intOutput, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_197": {
                "*args": {
                    "value": "torch.nn.PReLU()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_207": {
                "*args": {
                    "value": "torch.nn.PReLU()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_217": {
                "*args": {
                    "value": "torch.nn.Upsample(scale_factor=2, mode='bilinear', align_corners=True)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_228": {
                "*args": {
                    "value": "torch.nn.PReLU()",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_277": {
                "tensors": {
                    "value": "(V_t, V_SBM_bw[0][:, 3:, :, :], V_ABM_bw[0][:, 3:, :, :], V_SBM_fw[0][:, 3:, :, :], V_ABM_fw[0][:, 3:, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_281": {
                "tensors": {
                    "value": "(V_SBM_bw[1][:, 3:, :, :], V_ABM_bw[1][:, 3:, :, :], V_SBM_fw[1][:, 3:, :, :], V_ABM_fw[1][:, 3:, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_286": {
                "tensors": {
                    "value": "(V_SBM_bw[2][:, 3:, :, :], V_ABM_bw[2][:, 3:, :, :], V_SBM_fw[2][:, 3:, :, :], V_ABM_fw[2][:, 3:, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv2d_22": {
                "input": {
                    "value": "x[:, c:c + 1, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.filter_localexpand",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_76": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_79": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_86": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_89": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_95": {
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_100": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_189": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_191": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_192": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_198": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_199": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_201": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_202": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_208": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_209": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_211": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_212": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_218": {
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "PReLU_219": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_220": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_222": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_223": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_229": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_230": {
                "in_channels": {
                    "value": "intInput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "PReLU_232": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_233": {
                "in_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "intOutput",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "interpolate_353": {
                "input": {
                    "value": "Img",
                    "type": "Variable",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "0.5 ** i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_379": {
                "tensors": {
                    "value": "(I_Pyr_0[i], V_Pyr_0[i])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_380": {
                "tensors": {
                    "value": "(I_Pyr_0[i], V_Pyr_0[i])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_382": {
                "tensors": {
                    "value": "(I_Pyr_1[i], V_Pyr_1[i])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_383": {
                "tensors": {
                    "value": "(I_Pyr_1[i], V_Pyr_1[i])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mul_25": {
                "input": {
                    "value": "x_localexpand",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_localexpand, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "filter",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ones_334": {
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "interpolate_346": {
                "input": {
                    "value": "flow",
                    "type": "Variable",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "0.5 ** i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_395": {
                "tensors": {
                    "value": "(V_Pyr_0_t_SBM[0][:, i:i + 1, :, :], V_Pyr_0_t_ABM[0][:, i:i + 1, :, :], V_Pyr_1_t_SBM[0][:, i:i + 1, :, :], V_Pyr_1_t_ABM[0][:, i:i + 1, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "run.py": {
        "torch": {
            "interpolate_61": {
                "variable": {
                    "value": "frame1_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TF.to_tensor(imread(args.first)).unsqueeze(0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bicubic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_62": {
                "variable": {
                    "value": "frame3_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TF.to_tensor(imread(args.second)).unsqueeze(0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bicubic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l1_loss_73": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame2_3",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "frame2_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_73": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_94": {
                "variable": {
                    "value": "Syn_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(frame1, frame3, SBM_, ABM_fw, ABM_bw)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_96": {
                "variable": {
                    "value": "Syn_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Syn_inputs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((frame1, frame3, SBM_, ABM_fw, ABM_bw), dim=1)",
                            "Call"
                        ],
                        [
                            "F.interpolate(Syn_inputs, (H_, W_), mode='bilinear')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_106": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "result",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SynNet(Syn_inputs)",
                            "Call"
                        ],
                        [
                            "F.interpolate(result, (H, W), mode='bicubic')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bicubic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_28": {
                "f": {
                    "value": "Best/SBME_ckpt.pth",
                    "type": "Constant",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_29": {
                "f": {
                    "value": "Best/ABMR_ckpt.pth",
                    "type": "Constant",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_30": {
                "f": {
                    "value": "Best/SynNet_ckpt.pth",
                    "type": "Constant",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "interpolate_65": {
                "input": {
                    "value": "SBM",
                    "type": "Name",
                    "possible_values": [
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_74": {
                "input": {
                    "value": "Z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.l1_loss(frame2_3, frame2_1, reduction='none').mean(1, True)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "0.25",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_76": {
                "tensors": {
                    "value": "(frame2_Anchor, frame1_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_77": {
                "tensors": {
                    "value": "(frame2_Anchor, frame3_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_79": {
                "input": {
                    "value": "SBM",
                    "type": "Name",
                    "possible_values": [
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_80": {
                "input": {
                    "value": "ABM_fw",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.interpolate(ABM_fw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_81": {
                "input": {
                    "value": "ABM_bw",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.interpolate(ABM_bw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_64": {
                "tensors": {
                    "value": "(frame1_, frame3_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "MSELoss_31": {
                "variable": {
                    "value": "MSE",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_53": {
                "variable": {
                    "value": "validation_data_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "Call",
                    "possible_values": [
                        [
                            "get_test_Set(args)",
                            "Call"
                        ],
                        [
                            "get_test_Set(args)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_164": {
                "variable": {
                    "value": "validation_data_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "Call",
                    "possible_values": [
                        [
                            "get_test_Set(args)",
                            "Call"
                        ],
                        [
                            "get_test_Set(args)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_68": {
                "variable": {
                    "value": "frame1_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame1",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "input[:, :3, :, :]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, :H_Half + H_margin, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, :H_Half + H_margin, W_Half - W_margin:]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, H_Half - H_margin:, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, H_Half - H_margin:, W_Half - W_margin:]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_69": {
                "variable": {
                    "value": "frame3_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame3",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "input[:, 3:6, :, :]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, :H_Half + H_margin, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, :H_Half + H_margin, W_Half - W_margin:]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, H_Half - H_margin:, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, H_Half - H_margin:, W_Half - W_margin:]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l1_loss_80": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame2_3",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "frame2_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_80": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_103": {
                "variable": {
                    "value": "Syn_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Syn_inputs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((frame1, frame3, SBM_, ABM_fw, ABM_bw), dim=1)",
                            "Call"
                        ],
                        [
                            "F.interpolate(Syn_inputs, (H_, W_), mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.cat((frame1, frame3, SBM_, ABM_fw, ABM_bw), dim=1)",
                            "Call"
                        ],
                        [
                            "F.interpolate(Syn_inputs, (H_, W_), mode='bilinear')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_113": {
                "variable": {
                    "value": "I2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SynNet(Syn_inputs)",
                            "Call"
                        ],
                        [
                            "SynNet(Syn_inputs)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bicubic",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_72": {
                "input": {
                    "value": "SBM",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ],
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_81": {
                "input": {
                    "value": "Z",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.l1_loss(frame2_3, frame2_1, reduction='none').mean(1, True)",
                            "Call"
                        ],
                        [
                            "F.l1_loss(frame2_3, frame2_1, reduction='none').mean(1, True)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "0.25",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_86": {
                "input": {
                    "value": "SBM",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ],
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_87": {
                "input": {
                    "value": "ABM_fw",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "F.interpolate(ABM_fw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ],
                        [
                            "F.interpolate(ABM_fw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_88": {
                "input": {
                    "value": "ABM_bw",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "F.interpolate(ABM_bw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ],
                        [
                            "F.interpolate(ABM_bw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_208": {
                "variable": {
                    "value": "frame1_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame1",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "input[:, :3, :, :]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, :H_Half + H_margin, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, :H_Half + H_margin, W_Half - W_margin:]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, H_Half - H_margin:, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame1_full[:, :, H_Half - H_margin:, W_Half - W_margin:]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_209": {
                "variable": {
                    "value": "frame3_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame3",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "input[:, 3:6, :, :]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, :H_Half + H_margin, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, :H_Half + H_margin, W_Half - W_margin:]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, H_Half - H_margin:, :W_Half + W_margin]",
                            "Subscript"
                        ],
                        [
                            "frame3_full[:, :, H_Half - H_margin:, W_Half - W_margin:]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l1_loss_220": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frame2_3",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "frame2_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_220": {
                "variable": {
                    "value": "Z",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_243": {
                "variable": {
                    "value": "Syn_inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Syn_inputs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.cat((frame1, frame3, SBM_, ABM_fw, ABM_bw), dim=1)",
                            "Call"
                        ],
                        [
                            "F.interpolate(Syn_inputs, (H_, W_), mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.cat((frame1, frame3, SBM_, ABM_fw, ABM_bw), dim=1)",
                            "Call"
                        ],
                        [
                            "F.interpolate(Syn_inputs, (H_, W_), mode='bilinear')",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H_, W_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_212": {
                "input": {
                    "value": "SBM",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ],
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_221": {
                "input": {
                    "value": "Z",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.l1_loss(frame2_3, frame2_1, reduction='none').mean(1, True)",
                            "Call"
                        ],
                        [
                            "F.l1_loss(frame2_3, frame2_1, reduction='none').mean(1, True)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "0.25",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_226": {
                "input": {
                    "value": "SBM",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ],
                        [
                            "SBMNet(torch.cat((frame1_, frame3_), dim=1))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_227": {
                "input": {
                    "value": "ABM_fw",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "F.interpolate(ABM_fw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ],
                        [
                            "F.interpolate(ABM_fw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_228": {
                "input": {
                    "value": "ABM_bw",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "F.interpolate(ABM_bw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ],
                        [
                            "F.interpolate(ABM_bw, (H, W), mode='bilinear') * 20.0",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_253": {
                "input": {
                    "value": "output",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SynNet(Syn_inputs)",
                            "Call"
                        ],
                        [
                            "SynNet(Syn_inputs)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(H, W)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bicubic",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "arange_33": {
                "variable": {
                    "value": "xx",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_34": {
                "variable": {
                    "value": "yy",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_36": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(xx, yy)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_48": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "grid_sample_50": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(torch.ones(x.size())).to(x.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.grid_sample(mask, vgrid, align_corners=True)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask < 0.999, 0)",
                            "Call"
                        ],
                        [
                            "mask.masked_fill_(mask > 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "grid": {
                    "value": "vgrid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.Variable(grid) + flo",
                            "BinOp"
                        ],
                        [
                            "vgrid.permute(0, 2, 3, 1)",
                            "Call"
                        ]
                    ]
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_49": {
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}