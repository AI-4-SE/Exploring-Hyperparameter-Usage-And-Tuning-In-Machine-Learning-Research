{
    "GCM.py": {
        "tensorflow": {
            "set_random_seed_18": {
                "seed": {
                    "value": "2019",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConfigProto_668": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_507": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_114": {
                "variable": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "user_input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_115": {
                "variable": {
                    "value": "self.context_input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "context_input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_116": {
                "variable": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "item_input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_117": {
                "variable": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "labels",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gather_193": {
                "variable": {
                    "value": "self.valid_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "list(range(self.num_valid_items))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_198": {
                "variable": {
                    "value": "self.all_init_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.user_embeddings, self.user_feature_embeddings, self.item_embeddings, self.item_feature_embeddings, self.context_feature_embeddings]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "all_init_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "concat_205": {
                "variable": {
                    "value": "self.all_init_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.user_bias, self.user_feature_bias, self.item_bias, self.item_feature_bias, self.context_feature_bias, self.global_bias]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "all_init_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "expand_dims_218": {
                "variable": {
                    "value": "all_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "embedding_lookup_225": {
                "variable": {
                    "value": "item_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_feature_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_226": {
                "variable": {
                    "value": "all_item_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(self.valid_item_embeddings, 1), item_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "embedding_lookup_236": {
                "variable": {
                    "value": "self.context_feature_embedding_wo_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_feature_wo_last",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_238": {
                "variable": {
                    "value": "self.context_feature_embedding_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_feature_last",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_240": {
                "variable": {
                    "value": "self.context_feature_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.context_feature_embedding_wo_last, tf.expand_dims(self.context_feature_embedding_last, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "embedding_lookup_243": {
                "variable": {
                    "value": "self.context_feature_bias_wo_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_feature_wo_last",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_245": {
                "variable": {
                    "value": "self.context_feature_bias_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_feature_last",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_247": {
                "variable": {
                    "value": "self.context_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.context_feature_bias_wo_last, tf.expand_dims(self.context_feature_bias_last, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_250": {
                "variable": {
                    "value": "self.encoded_context_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.context_feature_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "embedding_lookup_253": {
                "variable": {
                    "value": "insts_context_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.encoded_context_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.insts2contextid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_333": {
                "variable": {
                    "value": "all_user_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "all_user_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[layer_user_embedding * self.gcn_layer_weight[0]]",
                            "List"
                        ],
                        [
                            "tf.stack(all_user_embeddings, 1)",
                            "Call"
                        ],
                        [
                            "all_user_embeddings + [layer_user_embedding * self.gcn_layer_weight[k]]",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_334": {
                "variable": {
                    "value": "self.u_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "all_user_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[layer_user_embedding * self.gcn_layer_weight[0]]",
                            "List"
                        ],
                        [
                            "tf.stack(all_user_embeddings, 1)",
                            "Call"
                        ],
                        [
                            "all_user_embeddings + [layer_user_embedding * self.gcn_layer_weight[k]]",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "updated_u_embedding",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_335": {
                "variable": {
                    "value": "all_item_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "all_item_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[layer_item_embedding * self.gcn_layer_weight[0]]",
                            "List"
                        ],
                        [
                            "tf.stack(all_item_embeddings, 1)",
                            "Call"
                        ],
                        [
                            "all_item_embeddings + [layer_item_embedding * self.gcn_layer_weight[k]]",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_336": {
                "variable": {
                    "value": "self.i_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "all_item_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[layer_item_embedding * self.gcn_layer_weight[0]]",
                            "List"
                        ],
                        [
                            "tf.stack(all_item_embeddings, 1)",
                            "Call"
                        ],
                        [
                            "all_item_embeddings + [layer_item_embedding * self.gcn_layer_weight[k]]",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "name": {
                    "value": "updated_item_embedding",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_339": {
                "variable": {
                    "value": "self.updated_user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self.user_embeddings)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "updated_user_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_341": {
                "variable": {
                    "value": "self.updated_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self.valid_item_embeddings)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "updated_item_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_486": {
                "variable": {
                    "value": "self.log_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.nn.sigmoid_cross_entropy_with_logits(labels=self.labels, logits=tf.squeeze(self.output))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "embedding_lookup_488": {
                "variable": {
                    "value": "u_embeddings_pre",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_489": {
                "variable": {
                    "value": "i_embeddings_pre",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_490": {
                "variable": {
                    "value": "feature_embeddings_pre",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.user_feature_embeddings, self.item_feature_embeddings, self.context_feature_embeddings]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Session_670": {
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_113": {
                "name": {
                    "value": "input_data",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_120": {
                "name": {
                    "value": "embedding",
                    "type": "str",
                    "possible_values": []
                }
            },
            "import_meta_graph_122": {
                "variable": {
                    "value": "weight_saver",
                    "type": "variable",
                    "possible_values": []
                },
                "meta_graph_or_file": {
                    "value": "self.read_file + '.meta'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_default_graph_123": {
                "variable": {
                    "value": "pretrain_graph",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_154": {
                "variable": {
                    "value": "self.user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ue",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "user_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_155": {
                "variable": {
                    "value": "self.user_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ufe",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "user_feature_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_156": {
                "variable": {
                    "value": "self.item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ie",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "item_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_157": {
                "variable": {
                    "value": "self.item_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ife",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "item_feature_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_158": {
                "variable": {
                    "value": "self.context_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "cfe",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "context_feature_embeddings",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_159": {
                "variable": {
                    "value": "self.user_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ub",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "user_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_160": {
                "variable": {
                    "value": "self.user_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ufb",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "user_feature_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_161": {
                "variable": {
                    "value": "self.item_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ib",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "item_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_162": {
                "variable": {
                    "value": "self.item_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "ifb",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "item_feature_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_163": {
                "variable": {
                    "value": "self.context_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "cfb",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "context_feature_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_164": {
                "variable": {
                    "value": "self.global_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "gb",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "global_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_169": {
                "variable": {
                    "value": "self.user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_users, self.hidden_factor])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "user_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_171": {
                "variable": {
                    "value": "self.user_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_user_features, self.hidden_factor])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "user_feature_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_173": {
                "variable": {
                    "value": "self.item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_items, self.hidden_factor])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "item_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_175": {
                "variable": {
                    "value": "self.item_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_item_features, self.hidden_factor])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "item_feature_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_177": {
                "variable": {
                    "value": "self.context_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_context_features - self.num_items, self.hidden_factor])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "context_feature_embeddings",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_180": {
                "variable": {
                    "value": "self.user_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_users, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "user_bias",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_182": {
                "variable": {
                    "value": "self.user_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_user_features, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "user_feature_bias",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_184": {
                "variable": {
                    "value": "self.item_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_items, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "item_bias",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_186": {
                "variable": {
                    "value": "self.item_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_item_features, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "item_feature_bias",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_188": {
                "variable": {
                    "value": "self.context_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "initializer([self.num_context_features - self.num_items, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "context_feature_bias",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_190": {
                "variable": {
                    "value": "self.global_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros([1, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "global_bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_195": {
                "variable": {
                    "value": "self.norm_user_nn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.norm_user_neighbor_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "norm_user_neighbor_number",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_196": {
                "variable": {
                    "value": "self.norm_item_nn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.norm_item_neighbor_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "norm_item_neighbor_number",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_215": {
                "name": {
                    "value": "inference",
                    "type": "str",
                    "possible_values": []
                }
            },
            "embedding_lookup_220": {
                "variable": {
                    "value": "user_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.user_feature_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_feature_mat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_221": {
                "variable": {
                    "value": "all_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[all_user_embedding, user_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_229": {
                "variable": {
                    "value": "self.encoded_user_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "all_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.expand_dims(self.user_embeddings, 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([all_user_embedding, user_feature_embedding], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_230": {
                "variable": {
                    "value": "self.encoded_item_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "all_item_feature_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(self.valid_item_embeddings, 1), item_feature_embedding], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_232": {
                "variable": {
                    "value": "self.encoded_user_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "all_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.expand_dims(self.user_embeddings, 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([all_user_embedding, user_feature_embedding], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_233": {
                "variable": {
                    "value": "self.encoded_item_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "all_item_feature_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(self.valid_item_embeddings, 1), item_feature_embedding], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "l2_normalize_255": {
                "variable": {
                    "value": "norm_insts_context_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "insts_context_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.encoded_context_embedding, self.insts2contextid)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "normalize_context",
                    "type": "str",
                    "possible_values": []
                }
            },
            "embedding_lookup_267": {
                "variable": {
                    "value": "insts_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "layer_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoded_user_embedding",
                            "Attribute"
                        ],
                        [
                            "tf.multiply(layer_user_embedding, tf.expand_dims(self.norm_user_nn, 1))",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sqrt_n(insts_user_embedding_new, self.insts2userid, self.num_users, name='aggregate_user_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sum(insts_user_embedding_new, self.insts2userid, self.num_users, name='aggregate_user_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_mean(insts_user_embedding_new, self.insts2userid, self.num_users, name='aggregate_user_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.insts2userid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_268": {
                "variable": {
                    "value": "insts_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "layer_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoded_item_embedding",
                            "Attribute"
                        ],
                        [
                            "tf.multiply(layer_item_embedding, tf.expand_dims(self.norm_item_nn, 1))",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sqrt_n(insts_item_embedding_new, self.insts2itemid, self.num_valid_items, name='aggregate_item_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sum(insts_item_embedding_new, self.insts2itemid, self.num_valid_items, name='aggregate_item_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_mean(insts_item_embedding_new, self.insts2itemid, self.num_valid_items, name='aggregate_item_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "ids": {
                    "value": "self.insts2itemid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_347": {
                "variable": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.u_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_348": {
                "variable": {
                    "value": "batch_user_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.user_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_350": {
                "variable": {
                    "value": "batch_context_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_351": {
                "variable": {
                    "value": "batch_context_feature_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_353": {
                "variable": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.i_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_354": {
                "variable": {
                    "value": "batch_item_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_356": {
                "variable": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_359": {
                "variable": {
                    "value": "batch_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_bias, 1), tf.expand_dims(batch_item_bias, 1), batch_context_feature_bias]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_362": {
                "variable": {
                    "value": "square_of_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_sum(batch_embedding, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_363": {
                "variable": {
                    "value": "sum_of_square",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(batch_embedding)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_365": {
                "variable": {
                    "value": "bi_linear",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "bi_linear",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "reduce_sum_366": {
                "variable": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "batch_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_bias, 1), tf.expand_dims(batch_item_bias, 1), batch_context_feature_bias], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_bias, 1), tf.expand_dims(batch_item_bias, 1), batch_context_feature_bias], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "add_367": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "bi_linear",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_368": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.global_bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_372": {
                "variable": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_374": {
                "variable": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_376": {
                "variable": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_379": {
                "variable": {
                    "value": "square_of_sum_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_sum(batch_embedding_eval, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_380": {
                "variable": {
                    "value": "sum_of_square_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(batch_embedding_eval)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_382": {
                "variable": {
                    "value": "bi_linear_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "bi_linear_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "add_383": {
                "variable": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "bi_linear_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_384": {
                "variable": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.global_bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_485": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_498": {
                "name": {
                    "value": "learner",
                    "type": "str",
                    "possible_values": []
                }
            },
            "global_variables_initializer_674": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_137": {
                "variable": {
                    "value": "user_feature_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[0, self.hidden_factor]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_138": {
                "variable": {
                    "value": "user_feature_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "multiply_264": {
                "variable": {
                    "value": "layer_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "layer_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoded_user_embedding",
                            "Attribute"
                        ],
                        [
                            "tf.multiply(layer_user_embedding, tf.expand_dims(self.norm_user_nn, 1))",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sqrt_n(insts_user_embedding_new, self.insts2userid, self.num_users, name='aggregate_user_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sum(insts_user_embedding_new, self.insts2userid, self.num_users, name='aggregate_user_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_mean(insts_user_embedding_new, self.insts2userid, self.num_users, name='aggregate_user_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.expand_dims(self.norm_user_nn, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "multiply_265": {
                "variable": {
                    "value": "layer_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "layer_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoded_item_embedding",
                            "Attribute"
                        ],
                        [
                            "tf.multiply(layer_item_embedding, tf.expand_dims(self.norm_item_nn, 1))",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sqrt_n(insts_item_embedding_new, self.insts2itemid, self.num_valid_items, name='aggregate_item_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_sum(insts_item_embedding_new, self.insts2itemid, self.num_valid_items, name='aggregate_item_l%d' % k)",
                            "Call"
                        ],
                        [
                            "tf.math.unsorted_segment_mean(insts_item_embedding_new, self.insts2itemid, self.num_valid_items, name='aggregate_item_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.expand_dims(self.norm_item_nn, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_271": {
                "variable": {
                    "value": "insts_user_embedding_new",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "insts_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(layer_item_embedding, self.insts2itemid)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "insts_context_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.encoded_context_embedding, self.insts2contextid)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_272": {
                "variable": {
                    "value": "insts_item_embedding_new",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "insts_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(layer_user_embedding, self.insts2userid)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "insts_context_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.encoded_context_embedding, self.insts2contextid)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsorted_segment_sqrt_n_297": {
                "variable": {
                    "value": "layer_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "insts_user_embedding_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.add(insts_item_embedding, insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.multiply(insts_item_embedding, norm_insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(tf.concat([insts_item_embedding, insts_context_embedding], axis=1), self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='gc_user_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "segment_ids": {
                    "value": "self.insts2userid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_segments": {
                    "value": "self.num_users",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'aggregate_user_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unsorted_segment_sqrt_n_302": {
                "variable": {
                    "value": "layer_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "insts_item_embedding_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.add(insts_user_embedding, insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.multiply(insts_user_embedding, norm_insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(tf.concat([insts_user_embedding, insts_context_embedding], axis=1), self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='gc_item_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "segment_ids": {
                    "value": "self.insts2itemid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_segments": {
                    "value": "self.num_valid_items",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'aggregate_item_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_like_339": {
                "input": {
                    "value": "self.user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_341": {
                "input": {
                    "value": "self.valid_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_387": {
                "variable": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.u_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_388": {
                "variable": {
                    "value": "batch_user_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.user_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_390": {
                "variable": {
                    "value": "batch_context_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_391": {
                "variable": {
                    "value": "batch_context_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "batch_context_feature_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.context_feature_embedding, self.context_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.context_feature_embedding, self.context_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.reduce_mean(batch_context_feature_embedding, axis=1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.context_feature_embedding, self.context_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "embedding_lookup_392": {
                "variable": {
                    "value": "batch_context_feature_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_393": {
                "variable": {
                    "value": "batch_context_feature_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "batch_context_feature_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.context_feature_bias, self.context_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.context_feature_bias, self.context_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.reduce_mean(batch_context_feature_bias, axis=1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "embedding_lookup_395": {
                "variable": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.i_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_396": {
                "variable": {
                    "value": "batch_item_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.item_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_398": {
                "variable": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_401": {
                "variable": {
                    "value": "batch_bias",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_bias, 1), tf.expand_dims(batch_item_bias, 1), batch_context_feature_bias]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_404": {
                "variable": {
                    "value": "square_of_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_sum(batch_embedding, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_405": {
                "variable": {
                    "value": "sum_of_square",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(batch_embedding)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_407": {
                "variable": {
                    "value": "bi_linear",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "bi_linear",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "reduce_sum_408": {
                "variable": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "batch_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_bias, 1), tf.expand_dims(batch_item_bias, 1), batch_context_feature_bias], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_bias, 1), tf.expand_dims(batch_item_bias, 1), batch_context_feature_bias], axis=1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "add_409": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "bi_linear",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum, sum_of_square)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_410": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.global_bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_414": {
                "variable": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_416": {
                "variable": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_418": {
                "variable": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_421": {
                "variable": {
                    "value": "square_of_sum_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_sum(batch_embedding_eval, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_422": {
                "variable": {
                    "value": "sum_of_square_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(batch_embedding_eval)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_424": {
                "variable": {
                    "value": "bi_linear_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "bi_linear_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "add_425": {
                "variable": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "bi_linear_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ],
                        [
                            "0.5 * tf.subtract(square_of_sum_eval, sum_of_square_eval)",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(bi_linear_eval, 1, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(batch_bias, 1, keep_dims=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "add_426": {
                "variable": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.global_bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_cross_entropy_with_logits_486": {
                "labels": {
                    "value": "self.labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "tf.squeeze(self.output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_140": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_190": {
                "shape": {
                    "value": "[1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "expand_dims_226": {
                "input": {
                    "value": "self.valid_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_241": {
                "input": {
                    "value": "self.context_feature_embedding_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_248": {
                "input": {
                    "value": "self.context_feature_bias_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "multiply_274": {
                "variable": {
                    "value": "insts_user_embedding_new",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "insts_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(layer_item_embedding, self.insts2itemid)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "norm_insts_context_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.l2_normalize(insts_context_embedding, axis=1, name='normalize_context')",
                            "Call"
                        ]
                    ]
                }
            },
            "multiply_275": {
                "variable": {
                    "value": "insts_item_embedding_new",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "insts_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(layer_user_embedding, self.insts2userid)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "norm_insts_context_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.l2_normalize(insts_context_embedding, axis=1, name='normalize_context')",
                            "Call"
                        ]
                    ]
                }
            },
            "unsorted_segment_sum_308": {
                "variable": {
                    "value": "layer_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "insts_user_embedding_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.add(insts_item_embedding, insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.multiply(insts_item_embedding, norm_insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(tf.concat([insts_item_embedding, insts_context_embedding], axis=1), self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='gc_user_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "segment_ids": {
                    "value": "self.insts2userid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_segments": {
                    "value": "self.num_users",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'aggregate_user_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unsorted_segment_sum_313": {
                "variable": {
                    "value": "layer_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "insts_item_embedding_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.add(insts_user_embedding, insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.multiply(insts_user_embedding, norm_insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(tf.concat([insts_user_embedding, insts_context_embedding], axis=1), self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='gc_item_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "segment_ids": {
                    "value": "self.insts2itemid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_segments": {
                    "value": "self.num_valid_items",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'aggregate_item_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_362": {
                "input_tensor": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_363": {
                "x": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                }
            },
            "subtract_364": {
                "x": {
                    "value": "square_of_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(tf.reduce_sum(batch_embedding, 1))",
                            "Call"
                        ],
                        [
                            "tf.square(tf.reduce_sum(batch_embedding, 1))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "sum_of_square",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(tf.square(batch_embedding), 1)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(tf.square(batch_embedding), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_sum_379": {
                "input_tensor": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_380": {
                "x": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                }
            },
            "subtract_381": {
                "x": {
                    "value": "square_of_sum_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(tf.reduce_sum(batch_embedding_eval, 1))",
                            "Call"
                        ],
                        [
                            "tf.square(tf.reduce_sum(batch_embedding_eval, 1))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "sum_of_square_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(tf.square(batch_embedding_eval), 1)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(tf.square(batch_embedding_eval), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "embedding_lookup_429": {
                "variable": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.u_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_431": {
                "variable": {
                    "value": "batch_context_feature_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_feature_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.context_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_433": {
                "variable": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.i_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_434": {
                "variable": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_437": {
                "variable": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.hidden_factor * (self.num_context_fields + 2)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dense_445": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "predictor",
                    "type": "str",
                    "possible_values": []
                }
            },
            "embedding_lookup_452": {
                "variable": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_454": {
                "variable": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_455": {
                "variable": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_458": {
                "variable": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.hidden_factor * (self.num_context_fields + 2)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dense_466": {
                "variable": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "predictor",
                    "type": "str",
                    "possible_values": []
                }
            },
            "expand_dims_264": {
                "input": {
                    "value": "self.norm_user_nn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_265": {
                "input": {
                    "value": "self.norm_item_nn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dense_277": {
                "variable": {
                    "value": "insts_user_embedding_new",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "tf.concat([insts_item_embedding, insts_context_embedding], axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "units": {
                    "value": "self.hidden_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'gc_user_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dense_285": {
                "variable": {
                    "value": "insts_item_embedding_new",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "tf.concat([insts_user_embedding, insts_context_embedding], axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "units": {
                    "value": "self.hidden_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'gc_item_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unsorted_segment_mean_319": {
                "variable": {
                    "value": "layer_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "insts_user_embedding_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.add(insts_item_embedding, insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.multiply(insts_item_embedding, norm_insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(tf.concat([insts_item_embedding, insts_context_embedding], axis=1), self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='gc_user_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "segment_ids": {
                    "value": "self.insts2userid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_segments": {
                    "value": "self.num_users",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'aggregate_user_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unsorted_segment_mean_324": {
                "variable": {
                    "value": "layer_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "insts_item_embedding_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.add(insts_user_embedding, insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.multiply(insts_user_embedding, norm_insts_context_embedding)",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(tf.concat([insts_user_embedding, insts_context_embedding], axis=1), self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='gc_item_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "segment_ids": {
                    "value": "self.insts2itemid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_segments": {
                    "value": "self.num_valid_items",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'aggregate_item_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_356": {
                "input": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_357": {
                "input": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_359": {
                "input": {
                    "value": "batch_user_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.user_bias, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.user_bias, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_360": {
                "input": {
                    "value": "batch_item_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.item_bias, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.item_bias, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_376": {
                "input": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_377": {
                "input": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_404": {
                "input_tensor": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_405": {
                "x": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                }
            },
            "subtract_406": {
                "x": {
                    "value": "square_of_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(tf.reduce_sum(batch_embedding, 1))",
                            "Call"
                        ],
                        [
                            "tf.square(tf.reduce_sum(batch_embedding, 1))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "sum_of_square",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(tf.square(batch_embedding), 1)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(tf.square(batch_embedding), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_sum_421": {
                "input_tensor": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_422": {
                "x": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                }
            },
            "subtract_423": {
                "x": {
                    "value": "square_of_sum_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(tf.reduce_sum(batch_embedding_eval, 1))",
                            "Call"
                        ],
                        [
                            "tf.square(tf.reduce_sum(batch_embedding_eval, 1))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "sum_of_square_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(tf.square(batch_embedding_eval), 1)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(tf.square(batch_embedding_eval), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "dense_439": {
                "variable": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "batch_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding, 1), tf.expand_dims(batch_item_embedding, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "self.hidden_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'predict_hidden_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dense_460": {
                "variable": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "batch_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.concat([tf.expand_dims(batch_user_embedding_eval, 1), tf.expand_dims(batch_item_embedding_eval, 1), batch_context_feature_embedding], axis=1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_embedding_eval, [-1, self.hidden_factor * (self.num_context_fields + 2)])",
                            "Call"
                        ],
                        [
                            "tf.layers.dense(batch_embedding_eval, self.hidden_factor, activation=tf.nn.leaky_relu, use_bias=True, reuse=tf.AUTO_REUSE, name='predict_hidden_l%d' % k)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "self.hidden_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "use_bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'predict_hidden_l%d' % k",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "embedding_lookup_473": {
                "variable": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.u_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_475": {
                "variable": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.i_g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_476": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.multiply(batch_user_embedding, batch_item_embedding)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "embedding_lookup_479": {
                "variable": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_user_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.user_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_481": {
                "variable": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.updated_item_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.item_input",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_482": {
                "variable": {
                    "value": "self.output_eval",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.multiply(batch_user_embedding_eval, batch_item_embedding_eval)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "squeeze_486": {
                "input": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_398": {
                "input": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_399": {
                "input": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_401": {
                "input": {
                    "value": "batch_user_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.user_bias, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.user_bias, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_402": {
                "input": {
                    "value": "batch_item_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.item_bias, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.item_bias, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_418": {
                "input": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_419": {
                "input": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_278": {
                "values": {
                    "value": "[insts_item_embedding, insts_context_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_286": {
                "values": {
                    "value": "[insts_user_embedding, insts_context_embedding]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_434": {
                "input": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_435": {
                "input": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_455": {
                "input": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_456": {
                "input": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "multiply_476": {
                "x": {
                    "value": "batch_user_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.u_g_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "batch_item_embedding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.i_g_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                }
            },
            "multiply_482": {
                "x": {
                    "value": "batch_user_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_user_embeddings, self.user_input)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "batch_item_embedding_eval",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ],
                        [
                            "tf.nn.embedding_lookup(self.updated_item_embeddings, self.item_input)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "utility/Learner.py": {
        "tensorflow": {
            "AdagradOptimizer_7": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_accumulator_value": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                }
            },
            "RMSPropOptimizer_10": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "AdamOptimizer_12": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_14": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "MomentumOptimizer_16": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": []
                },
                "momentum": {
                    "value": "momentum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.9",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "utility/Tool.py": {
        "tensorflow": {
            "pad_sequences_187": {
                "variable": {
                    "value": "array",
                    "type": "variable",
                    "possible_values": []
                },
                "sequences": {
                    "value": "array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.preprocessing.sequence.pad_sequences(array, maxlen=max_len, value=value, dtype='int32', padding=padding, truncating=truncating)",
                            "Call"
                        ]
                    ]
                },
                "maxlen": {
                    "value": "max_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'post'",
                            "Method Argument"
                        ]
                    ]
                },
                "truncating": {
                    "value": "truncating",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'post'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sigmoid_15": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "add_n_212": {
                "inputs": {
                    "value": "[tf.nn.l2_loss(w) for w in params]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "tanh_17": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "truncated_normal_initializer_96": {
                "stddev": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "name_scope_194": {
                "name": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'inner_product'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "reduce_sum_195": {
                "input_tensor": {
                    "value": "tf.multiply(a, b)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "relu_20": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "random_uniform_initializer_98": {
                "minval": {
                    "value": "-stddev",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "multiply_195": {
                "x": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.arange(high)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "l2_loss_212": {
                "t": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "elu_23": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "random_normal_initializer_100": {
                "stddev": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "identity_26": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "softmax_29": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "selu_32": {
                "variable": {
                    "value": "act_func",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "act_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "truncated_normal_initializer_112": {
                "stddev": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}