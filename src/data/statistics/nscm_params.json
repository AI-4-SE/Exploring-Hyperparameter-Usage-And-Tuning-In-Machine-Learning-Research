{
    "SpectralNormalizationKeras.py": {
        "tensorflow": {
            "InputSpec_35": {
                "variable": {
                    "value": "self.input_spec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "min_ndim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "axes": {
                    "value": "{-1: input_dim}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "reshape_48": {
                "variable": {
                    "value": "W_reshaped",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, W_shape[-1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dot_51": {
                "variable": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "_v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "_l2normalize(K.dot(_u, K.transpose(W)))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W_reshaped",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "K.reshape(self.kernel, [-1, W_shape[-1]])",
                            "Call"
                        ]
                    ]
                }
            },
            "dot_52": {
                "variable": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "K.dot(_v, W_reshaped)",
                            "Call"
                        ],
                        [
                            "K.dot(sigma, K.transpose(_u))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "K.transpose(_u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dot_61": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "W_bar",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "W_reshaped / sigma",
                            "BinOp"
                        ],
                        [
                            "K.reshape(W_bar, W_shape)",
                            "Call"
                        ],
                        [
                            "K.reshape(W_bar, W_shape)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_57": {
                "variable": {
                    "value": "W_bar",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "W_bar",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "W_reshaped / sigma",
                            "BinOp"
                        ],
                        [
                            "K.reshape(W_bar, W_shape)",
                            "Call"
                        ],
                        [
                            "K.reshape(W_bar, W_shape)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "W_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.kernel.shape.as_list()",
                            "Call"
                        ]
                    ]
                }
            },
            "bias_add_63": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "K.dot(inputs, W_bar)",
                            "Call"
                        ],
                        [
                            "K.bias_add(output, self.bias, data_format='channels_last')",
                            "Call"
                        ],
                        [
                            "self.activation(output)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data_format": {
                    "value": "channels_last",
                    "type": "str",
                    "possible_values": []
                }
            },
            "transpose_52": {
                "a": {
                    "value": "_u",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "u",
                            "Name"
                        ],
                        [
                            "_l2normalize(K.dot(_v, W))",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_60": {
                "variable": {
                    "value": "W_bar",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "W_bar",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "W_reshaped / sigma",
                            "BinOp"
                        ],
                        [
                            "K.reshape(W_bar, W_shape)",
                            "Call"
                        ],
                        [
                            "K.reshape(W_bar, W_shape)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "W_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.kernel.shape.as_list()",
                            "Call"
                        ]
                    ]
                }
            },
            "RandomNormal_32": {
                "mean": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stddev": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dot_43": {
                "a": {
                    "value": "_u",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "u",
                            "Name"
                        ],
                        [
                            "_l2normalize(K.dot(_v, W))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "K.transpose(W)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "dot_44": {
                "a": {
                    "value": "_v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "_l2normalize(K.dot(_u, K.transpose(W)))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "control_dependencies_59": {
                "control_inputs": {
                    "value": "[self.u.assign(_u)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_43": {
                "a": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sum_40": {
                "a": {
                    "value": "v ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "classncm_sn.py": {
        "tensorflow": {
            "Sequential_283": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "NCM",
                    "type": "str",
                    "possible_values": []
                }
            },
            "EarlyStopping_294": {
                "variable": {
                    "value": "es",
                    "type": "Variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "Patience",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "load_model_303": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "models/ + self.fname + .h5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Lambda_285": {
                "function": {
                    "value": "lambda x: x * c_opt",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Activation_286": {
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Lambda_292": {
                "function": {
                    "value": "lambda x: x * np.sqrt(self.mbar)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_289": {
                "function": {
                    "value": "lambda x: x * c_opt",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Activation_290": {
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "classsncm.py": {
        "tensorflow": {
            "Sequential_277": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "NCM",
                    "type": "str",
                    "possible_values": []
                }
            },
            "EarlyStopping_288": {
                "variable": {
                    "value": "es",
                    "type": "Variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "Patience",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "load_model_297": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "models/ + self.fname + .h5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Lambda_279": {
                "function": {
                    "value": "lambda x: x * c_opt",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Activation_280": {
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Lambda_286": {
                "function": {
                    "value": "lambda x: x * np.sqrt(self.mbar)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_283": {
                "function": {
                    "value": "lambda x: x * c_opt",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Activation_284": {
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "tensorflow": {
            "set_seed_16": {
                "seed": {
                    "value": "226",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}