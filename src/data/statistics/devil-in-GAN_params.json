{
    "notebooks/utils/styleGANtf2.py": {
        "tensorflow": {
            "constant_17": {
                "variable": {
                    "value": "epsilon",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "epsilon",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.constant(epsilon, dtype=inputs.dtype, name='epsilon')",
                            "Call"
                        ],
                        [
                            "1e-08",
                            "Constant"
                        ],
                        [
                            "1e-08",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "inputs.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "epsilon",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_46": {
                "variable": {
                    "value": "self.x_avg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.zeros(self.x_avg_shape).astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "where_51": {
                "variable": {
                    "value": "coefs",
                    "type": "variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "layer_idx < self.cutoff",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "self.psi * ones",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.ones(layer_idx.shape, dtype=np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "constant_104": {
                "variable": {
                    "value": "self.epsilon",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "epsilon",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.constant(epsilon, dtype=inputs.dtype, name='epsilon')",
                            "Call"
                        ],
                        [
                            "1e-08",
                            "Constant"
                        ],
                        [
                            "1e-08",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "epsilon",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_197": {
                "variable": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(self.f, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "f[:, np.newaxis] * f[np.newaxis, :]",
                            "BinOp"
                        ],
                        [
                            "f / np.sum(f)",
                            "BinOp"
                        ],
                        [
                            "f[::-1, ::-1]",
                            "Subscript"
                        ],
                        [
                            "f[:, :, np.newaxis, np.newaxis]",
                            "Subscript"
                        ],
                        [
                            "np.tile(f, [1, 1, int(x.shape[-1]), 1])",
                            "Call"
                        ],
                        [
                            "tf.constant(f, dtype=x.dtype, name='filter')",
                            "Call"
                        ],
                        [
                            "[1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "x.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "filter",
                    "type": "str",
                    "possible_values": []
                }
            },
            "depthwise_conv2d_199": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "filter": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(self.f, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "f[:, np.newaxis] * f[np.newaxis, :]",
                            "BinOp"
                        ],
                        [
                            "f / np.sum(f)",
                            "BinOp"
                        ],
                        [
                            "f[::-1, ::-1]",
                            "Subscript"
                        ],
                        [
                            "f[:, :, np.newaxis, np.newaxis]",
                            "Subscript"
                        ],
                        [
                            "np.tile(f, [1, 1, int(x.shape[-1]), 1])",
                            "Call"
                        ],
                        [
                            "tf.constant(f, dtype=x.dtype, name='filter')",
                            "Call"
                        ],
                        [
                            "[1",
                            "MethodArgument"
                        ]
                    ]
                },
                "strides": {
                    "value": "strides",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[1, 1, 1, 1]",
                            "List"
                        ]
                    ]
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                },
                "data_format": {
                    "value": "NHWC",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cast_239": {
                "variable": {
                    "value": "self.lod_tf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.lod",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tile_31": {
                "input": {
                    "value": "inputs[:, np.newaxis]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, self.dlatent_broadcast, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_85": {
                "variable": {
                    "value": "x_dlatents",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x_dlatents",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x_dlatents, [-1, 2] + [1] * (len(x.shape) - 2) + [x.shape[-1]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x_dlatents, [-1, 2, x.shape[1]] + [1] * (len(x.shape) - 2))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 2] + [1] * (len(x.shape) - 2) + [x.shape[-1]]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_87": {
                "variable": {
                    "value": "x_dlatents",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x_dlatents",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x_dlatents, [-1, 2] + [1] * (len(x.shape) - 2) + [x.shape[-1]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x_dlatents, [-1, 2, x.shape[1]] + [1] * (len(x.shape) - 2))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 2, x.shape[1]] + [1] * (len(x.shape) - 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_108": {
                "input_tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "rsqrt_109": {
                "x": {
                    "value": "tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_217": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, s[1], 1, s[2], 1, s[3]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_218": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, 1, self.factor, 1, self.factor, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_219": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, s[1] * self.factor, s[2] * self.factor, s[3]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_221": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, s[1], s[2], 1, s[3], 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_222": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, 1, 1, self.factor, 1, self.factor]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_223": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, s[1], s[2] * self.factor, s[3] * self.factor]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rsqrt_18": {
                "x": {
                    "value": "tf.reduce_mean(tf.square(inputs), axis=1, keepdims=True) + epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tile_125": {
                "input": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[tf.shape(x)[0], 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_109": {
                "input_tensor": {
                    "value": "tf.square(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "reshape_149": {
                "tensor": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_174": {
                "tensor": {
                    "value": "tf.cast(self.weight, x.dtype)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, -1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_value_243": {
                "t": {
                    "value": "self.lod_tf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "reduce_mean_18": {
                "input_tensor": {
                    "value": "tf.square(inputs)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "square_109": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_172": {
                "tensor": {
                    "value": "tf.cast(self.weight, x.dtype)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cast_174": {
                "x": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "x.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_18": {
                "x": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shape_125": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * tf.math.rsqrt(tf.reduce_mean(tf.square(x), axis=[1, 2], keepdims=True) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "tf.nn.depthwise_conv2d(x, f, strides=strides, padding='SAME', data_format='NHWC')",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], 1, s[2], 1, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, self.factor, 1, self.factor, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1] * self.factor, s[2] * self.factor, s[3]])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2], 1, s[3], 1])",
                            "Call"
                        ],
                        [
                            "tf.tile(x, [1, 1, 1, self.factor, 1, self.factor])",
                            "Call"
                        ],
                        [
                            "tf.reshape(x, [-1, s[1], s[2] * self.factor, s[3] * self.factor])",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_172": {
                "x": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "x.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}