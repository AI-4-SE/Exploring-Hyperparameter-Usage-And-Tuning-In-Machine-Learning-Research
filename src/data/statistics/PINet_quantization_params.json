{
    "pinet_quantization_test/evaluation.py": {
        "sklearn": {
            "LinearRegression_7": {
                "variable": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/evaluation.py": {
        "sklearn": {
            "LinearRegression_7": {
                "variable": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_test/UNet_2Plus.py": {
        "torch": {
            "MaxPool2d_22": {
                "variable": {
                    "value": "self.maxpool0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_24": {
                "variable": {
                    "value": "self.maxpool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_26": {
                "variable": {
                    "value": "self.maxpool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_28": {
                "variable": {
                    "value": "self.maxpool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "variable": {
                    "value": "self.final_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.final_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.final_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_52": {
                "variable": {
                    "value": "self.final_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_test/agent.py": {
        "torch": {
            "Adam_50": {
                "variable": {
                    "value": "self.lane_detection_optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.lane_detection_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.p.l_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "self.p.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_156": {
                "variable": {
                    "value": "ground_truth_point",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "ground_truth_point",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(ground_truth_point).float()",
                            "Call"
                        ],
                        [
                            "Variable(ground_truth_point).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_163": {
                "variable": {
                    "value": "ground_truth_instance",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "ground_truth_instance",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.make_ground_truth_instance(target_lanes, target_h)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(ground_truth_instance).float()",
                            "Call"
                        ],
                        [
                            "Variable(ground_truth_instance).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Softmax_253": {
                "variable": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_339": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cuda()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cpu()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_348": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cuda()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cpu()",
                            "Call"
                        ]
                    ]
                }
            },
            "trace_367": {
                "variable": {
                    "value": "traced_script_module",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lane_val",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_236": {
                "variable": {
                    "value": "distance_map",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "distance_map",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(feature_map - point_feature) ** 2",
                            "BinOp"
                        ],
                        [
                            "torch.sum(distance_map, dim=1).view(real_batch_size, 1, self.p.grid_y * self.p.grid_x, self.p.grid_y * self.p.grid_x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_256": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attentions[-1][i].data ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_392": {
                "obj": {
                    "value": "self.lane_detection_network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.p.save_path + str(epoch) + '_' + str(loss) + '_' + 'lane_detection_network.pkl'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_260": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "j[i] ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_367": {
                "*size": {
                    "value": "self.p.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.p.x_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.p.y_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_385": {
                "f": {
                    "value": "self.p.model_path + str(epoch) + '_' + str(loss) + '_' + 'lane_detection_network.pkl'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_245": {
                "input": {
                    "value": "count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.p.K1 - distance_map[ground_truth_instance == 2] > 0",
                            "Compare"
                        ],
                        [
                            "torch.sum(count).data",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sum_268": {
                "input": {
                    "value": "feature ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_187": {
                "input": {
                    "value": "(1 - confidance[i][confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_192": {
                "input": {
                    "value": "target[target > 0.01] ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_206": {
                "input": {
                    "value": "(1 - confidance[confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_207": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_212": {
                "input": {
                    "value": "target[target > 0.01] ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_225": {
                "input": {
                    "value": "(offset_y_gt[confidance_gt == 1] - predict_y[confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_226": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_240": {
                "input": {
                    "value": "distance_map[ground_truth_instance == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_241": {
                "input": {
                    "value": "ground_truth_instance == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_247": {
                "input": {
                    "value": "(self.p.K1 - distance_map[ground_truth_instance == 2])[self.p.K1 - distance_map[ground_truth_instance == 2] > 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_248": {
                "input": {
                    "value": "ground_truth_instance == 2",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_188": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_193": {
                "input": {
                    "value": "target > 0.01",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_213": {
                "input": {
                    "value": "target > 0.01",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_223": {
                "input": {
                    "value": "(offset_x_gt[confidance_gt == 1] - predict_x[confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_224": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_262": {
                "input": {
                    "value": "(m(s) - target) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_test/hourglass_network.py": {
        "torch": {}
    },
    "pinet_quantization_test/init_weights.py": {
        "torch": {}
    },
    "pinet_quantization_test/layers.py": {
        "torch": {
            "ConvTranspose2d_48": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "UpsamplingBilinear2d_50": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "outputs0",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[outputs0, input[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_69": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_72": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "self.add",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_size, out_size, ks, s, p)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_size, out_size, ks, s, p)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_87": {
                "variable": {
                    "value": "outputs0",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[outputs0, input[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "padding",
                            "Name"
                        ]
                    ]
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "padding",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_test/test.py": {
        "torch": {
            "is_available_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_239": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_test/util.py": {
        "torch": {
            "CrossEntropyLoss_14": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_test/util_hourglass.py": {
        "torch": {
            "Conv2d_40": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "temp_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_41": {
                "variable": {
                    "value": "self.ConvRelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(temp_channels, out_channels, 1, padding=0, stride=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_86": {
                "variable": {
                    "value": "self.re2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "variable": {
                    "value": "self.re3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.cbr_unit",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels, n_filters, k_size, padding=padding, stride=stride, bias=bias, dilation=dilation)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "variable": {
                    "value": "self.cbr_unit",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "temp_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_24": {
                "num_features": {
                    "value": "n_filters",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/UNet_2Plus.py": {
        "torch": {
            "MaxPool2d_23": {
                "variable": {
                    "value": "self.maxpool0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_25": {
                "variable": {
                    "value": "self.maxpool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "variable": {
                    "value": "self.maxpool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "self.maxpool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.final_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.final_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_52": {
                "variable": {
                    "value": "self.final_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "variable": {
                    "value": "self.final_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "filters[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/agent.py": {
        "torch": {
            "Adam_49": {
                "variable": {
                    "value": "self.lane_detection_optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.lane_detection_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.p.l_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "self.p.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_155": {
                "variable": {
                    "value": "ground_truth_point",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "ground_truth_point",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(ground_truth_point).float()",
                            "Call"
                        ],
                        [
                            "Variable(ground_truth_point).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_162": {
                "variable": {
                    "value": "ground_truth_instance",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "ground_truth_instance",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.make_ground_truth_instance(target_lanes, target_h)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(ground_truth_instance).float()",
                            "Call"
                        ],
                        [
                            "Variable(ground_truth_instance).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Softmax_252": {
                "variable": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_338": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cuda()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cpu()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_347": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cuda()",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(inputs).float()",
                            "Call"
                        ],
                        [
                            "Variable(inputs).cpu()",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_235": {
                "variable": {
                    "value": "distance_map",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "distance_map",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(feature_map - point_feature) ** 2",
                            "BinOp"
                        ],
                        [
                            "torch.sum(distance_map, dim=1).view(real_batch_size, 1, self.p.grid_y * self.p.grid_x, self.p.grid_y * self.p.grid_x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_255": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attentions[-1][i].data ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_394": {
                "obj": {
                    "value": "self.lane_detection_network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "self.p.save_path + str(epoch) + '_' + str(loss) + '_' + 'lane_detection_network.pkl'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_258": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "j[i] ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_244": {
                "input": {
                    "value": "count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.p.K1 - distance_map[ground_truth_instance == 2] > 0",
                            "Compare"
                        ],
                        [
                            "torch.sum(count).data",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sum_266": {
                "input": {
                    "value": "feature ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_386": {
                "f": {
                    "value": "self.p.model_path + str(epoch) + '_' + str(loss) + '_' + 'lane_detection_network.pkl'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_186": {
                "input": {
                    "value": "(1 - confidance[i][confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_191": {
                "input": {
                    "value": "target[target > 0.01] ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_205": {
                "input": {
                    "value": "(1 - confidance[confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_206": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_211": {
                "input": {
                    "value": "target[target > 0.01] ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_224": {
                "input": {
                    "value": "(offset_y_gt[confidance_gt == 1] - predict_y[confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_225": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_239": {
                "input": {
                    "value": "distance_map[ground_truth_instance == 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_240": {
                "input": {
                    "value": "ground_truth_instance == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_246": {
                "input": {
                    "value": "(self.p.K1 - distance_map[ground_truth_instance == 2])[self.p.K1 - distance_map[ground_truth_instance == 2] > 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_247": {
                "input": {
                    "value": "ground_truth_instance == 2",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_187": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_192": {
                "input": {
                    "value": "target > 0.01",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_212": {
                "input": {
                    "value": "target > 0.01",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_222": {
                "input": {
                    "value": "(offset_x_gt[confidance_gt == 1] - predict_x[confidance_gt == 1]) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_223": {
                "input": {
                    "value": "confidance_gt == 1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sum_260": {
                "input": {
                    "value": "(m(s) - target) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/hourglass_network.py": {
        "torch": {}
    },
    "pinet_quantization_train/init_weights.py": {
        "torch": {}
    },
    "pinet_quantization_train/layers.py": {
        "torch": {
            "ConvTranspose2d_47": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "UpsamplingBilinear2d_49": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_59": {
                "variable": {
                    "value": "outputs0",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[outputs0, input[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_69": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_72": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "self.add",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_size, out_size, ks, s, p)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_size, out_size, ks, s, p)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_88": {
                "variable": {
                    "value": "outputs0",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[outputs0, input[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "padding",
                            "Name"
                        ]
                    ]
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_size",
                            "Name"
                        ],
                        [
                            "out_size",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "stride",
                            "Name"
                        ]
                    ]
                },
                "padding": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "padding",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/test.py": {
        "torch": {
            "synchronize_192": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/train.py": {
        "torch": {
            "is_available_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/util.py": {
        "torch": {
            "CrossEntropyLoss_14": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pinet_quantization_train/util_hourglass.py": {
        "torch": {
            "Conv2d_41": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "temp_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.ConvRelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(temp_channels, out_channels, 1, padding=0, stride=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "variable": {
                    "value": "self.re2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "variable": {
                    "value": "self.re3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.cbr_unit",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels, n_filters, k_size, padding=padding, stride=stride, bias=bias, dilation=dilation)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "variable": {
                    "value": "self.cbr_unit",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_42": {
                "in_channels": {
                    "value": "temp_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_24": {
                "num_features": {
                    "value": "n_filters",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}