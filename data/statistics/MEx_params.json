{
    "2m/act_acw.py": {
        "sklearn": {
            "f1_score_415": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_416": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_18": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "2m/act_dc.py": {
        "sklearn": {
            "f1_score_446": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_447": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_462": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "2m/acw_dc.py": {
        "sklearn": {
            "f1_score_446": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_447": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_462": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "2m/pm_act.py": {
        "sklearn": {
            "f1_score_405": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_406": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_421": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "2m/pm_acw.py": {
        "sklearn": {
            "f1_score_431": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_432": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_447": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "2m/pm_dc.py": {
        "sklearn": {
            "f1_score_408": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_409": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_424": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "3m/act_acw_dc.py": {
        "sklearn": {
            "f1_score_510": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_511": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_527": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "3m/act_acw_pm.py": {
        "sklearn": {
            "f1_score_493": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_494": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_510": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "3m/act_dc_pm.py": {
        "sklearn": {
            "f1_score_523": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_524": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_540": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "3m/acw_dc_pm.py": {
        "sklearn": {
            "f1_score_523": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_524": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_540": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "4m/twdcpm.py": {
        "sklearn": {
            "f1_score_617": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_618": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_635": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "act.py": {
        "sklearn": {
            "KNeighborsClassifier_236": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_239": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_240": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "acw.py": {
        "sklearn": {
            "KNeighborsClassifier_240": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_243": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_244": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "ann/act.py": {
        "sklearn": {
            "f1_score_276": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_277": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_297": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "ann/acw.py": {
        "sklearn": {
            "f1_score_277": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_278": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_298": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "ann/dc.py": {
        "sklearn": {
            "f1_score_254": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_255": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_275": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "ann/pm.py": {
        "sklearn": {
            "f1_score_275": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_276": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_296": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/act.py": {
        "sklearn": {
            "f1_score_269": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_270": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_290": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/act_raw.py": {
        "sklearn": {
            "f1_score_244": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_245": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_265": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/acw.py": {
        "sklearn": {
            "f1_score_270": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_271": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_291": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/acw_raw.py": {
        "sklearn": {
            "f1_score_244": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_245": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_265": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/dc_1D.py": {
        "sklearn": {
            "f1_score_246": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_247": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_268": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/dc_2D.py": {
        "sklearn": {
            "f1_score_255": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_256": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {}
    },
    "cnn/pm_1D.py": {
        "sklearn": {
            "f1_score_270": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_271": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_291": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "cnn/pm_2D.py": {
        "sklearn": {
            "f1_score_279": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_280": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_301": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "dc.py": {
        "sklearn": {
            "KNeighborsClassifier_251": {
                "variable": {
                    "value": "_model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(sys.argv[1])",
                            "Call"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_254": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_255": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "knn/act.py": {
        "sklearn": {
            "KNeighborsClassifier_236": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_239": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_240": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "knn/acw.py": {
        "sklearn": {
            "KNeighborsClassifier_240": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_243": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_244": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "knn/dc.py": {
        "sklearn": {
            "KNeighborsClassifier_251": {
                "variable": {
                    "value": "_model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(sys.argv[1])",
                            "Call"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_254": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_255": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "knn/pm.py": {
        "sklearn": {
            "KNeighborsClassifier_330": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(sys.argv[1])",
                            "Call"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_333": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_334": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            },
            "KNeighborsClassifier_266": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(sys.argv[1])",
                            "Call"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_269": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_270": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lstm/act_dct.py": {
        "sklearn": {
            "f1_score_292": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_293": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {}
    },
    "lstm/act_raw.py": {
        "sklearn": {
            "f1_score_250": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_251": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_271": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lstm/acw_dct.py": {
        "sklearn": {
            "f1_score_280": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_281": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {}
    },
    "lstm/acw_raw.py": {
        "sklearn": {
            "f1_score_251": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_252": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_273": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lstm/dc_1D.py": {
        "sklearn": {
            "f1_score_250": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_251": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_272": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lstm/dc_2D.py": {
        "sklearn": {
            "f1_score_249": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_250": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_271": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lstm/pm_1D.py": {
        "sklearn": {
            "f1_score_276": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_277": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {}
    },
    "lstm/pm_2D.py": {
        "sklearn": {
            "f1_score_274": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_275": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "_predict_labels.argmax(axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_random_seed_296": {
                "seed": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "pm.py": {
        "sklearn": {
            "KNeighborsClassifier_330": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(sys.argv[1])",
                            "Call"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_333": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_334": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            },
            "KNeighborsClassifier_266": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(sys.argv[1])",
                            "Call"
                        ]
                    ]
                },
                "weights": {
                    "value": "distance",
                    "type": "str",
                    "possible_values": []
                }
            },
            "f1_score_269": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_270": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ],
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "svm/act.py": {
        "sklearn": {
            "SVC_238": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "f1_score_241": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_242": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "svm/acw.py": {
        "sklearn": {
            "SVC_238": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "f1_score_241": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_242": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "svm/dc.py": {
        "sklearn": {
            "SVC_250": {
                "variable": {
                    "value": "_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "f1_score_253": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_254": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "svm/pm.py": {
        "sklearn": {
            "SVC_269": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "f1_score_272": {
                "variable": {
                    "value": "f_score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                }
            },
            "accuracy_score_273": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "_test_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pd.Series(_test_labels, name='Actual')",
                            "Call"
                        ],
                        [
                            "_test_labels",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "_predict_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(_test_features)",
                            "Call"
                        ],
                        [
                            "pd.Series(_predict_labels, name='Predicted')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}