{
    "docs/notebooks/05_reconstructing_the_light_curve_of_stars.py": {
        "sklearn": {
            "MinMaxScaler_226": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "feature_range": {
                    "value": "(0, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "wax/encode.py": {
        "sklearn": {
            "LabelEncoder_177": {
                "variable": {
                    "value": "encoder",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "wax/modules/ewmcov_test.py": {
        "sklearn": {
            "EmpiricalCovariance_62": {
                "assume_centered": {
                    "value": "assume_centered",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "EmpiricalCovariance_83": {
                "assume_centered": {
                    "value": "assume_centered",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "EmpiricalCovariance_104": {
                "assume_centered": {
                    "value": "assume_centered",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "external/eagerpy_tests/test_main.py": {
        "tensorflow": {}
    },
    "wax/external/eagerpy/convert.py": {
        "tensorflow": {
            "convert_to_tensor_43": {
                "value": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "tensor_48": {
                "data": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "wax/external/eagerpy/tensor/__init__.py": {
        "tensorflow": {}
    },
    "wax/external/eagerpy/tensor/tensorflow.py": {
        "tensorflow": {
            "top_k_190": {
                "variable": {
                    "value": "(values, indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "k": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ndim - 2",
                            "BinOp"
                        ]
                    ]
                },
                "sorted": {
                    "value": "sorted",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cast_228": {
                "variable": {
                    "value": "fill_value",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fill_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(fill_value, self.raw.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_241": {
                "variable": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(value, self.raw.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "meshgrid_416": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "*tensors",
                    "type": "Starred",
                    "possible_values": []
                },
                "indexing": {
                    "value": "indexing",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "slogdet_457": {
                "variable": {
                    "value": "(sign, logabsdet)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_349": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*indices)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(indices)",
                            "Call"
                        ],
                        [
                            "[tf.cast(idx, tf.int64) if idx.dtype == tf.int32 else idx for idx in indices]",
                            "ListComp"
                        ],
                        [
                            "tf.stack(indices, axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_401": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_52": {
                "device_name": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_122": {
                "tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "tuple((max(x) for x in zip(*shapes)))",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_125": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "clip_by_value_128": {
                "t": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "min_",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "max_",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "square_131": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "atanh_134": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_141": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reduce_prod_148": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reduce_mean_157": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reduce_min_162": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reduce_max_167": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "minimum_170": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "unwrap1(other)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "maximum_173": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "unwrap1(other)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmin_176": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "argmax_179": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "argsort_182": {
                "values": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "sort_185": {
                "values": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "uniform_200": {
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "tuple((max(x) for x in zip(*shapes)))",
                            "Call"
                        ]
                    ]
                },
                "minval": {
                    "value": "low",
                    "type": "variable",
                    "possible_values": []
                },
                "maxval": {
                    "value": "high",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_210": {
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "tuple((max(x) for x in zip(*shapes)))",
                            "Call"
                        ]
                    ]
                },
                "mean": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "stddev": {
                    "value": "stddev",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_215": {
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "tuple((max(x) for x in zip(*shapes)))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_219": {
                "shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "tuple((max(x) for x in zip(*shapes)))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_222": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_225": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "fill_229": {
                "dims": {
                    "value": "self.raw.shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "fill_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(fill_value, self.raw.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "one_hot_243": {
                "indices": {
                    "value": "indices.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "depth": {
                    "value": "self.raw.shape[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "on_value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(value, self.raw.dtype)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_253": {
                "value": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw.numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_260": {
                "values": {
                    "value": "tensors_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ],
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "stack_267": {
                "values": {
                    "value": "tensors_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ],
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "transpose_272": {
                "a": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "perm": {
                    "value": "axes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim - 1, -1, -1))",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_all_278": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reduce_any_284": {
                "input_tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "keepdims": {
                    "value": "keepdims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "logical_and_289": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "unwrap1(other)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "logical_or_294": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "unwrap1(other)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "logical_not_298": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_301": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_304": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log1p_313": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tile_319": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "multiples": {
                    "value": "multiples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap1(multiples)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_322": {
                "logits": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "log_softmax_325": {
                "logits": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "squeeze_328": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "expand_dims_331": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "fill_337": {
                "dims": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "tuple((max(x) for x in zip(*shapes)))",
                            "Call"
                        ]
                    ]
                },
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(value, self.raw.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "fill_353": {
                "variable": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "x.shape[-1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "value": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill((indices.shape[0],), values_)",
                            "Call"
                        ]
                    ]
                }
            },
            "cumsum_403": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "reverse_410": {
                "tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "pad_439": {
                "tensor": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "paddings": {
                    "value": "paddings",
                    "type": "variable",
                    "possible_values": []
                },
                "mode": {
                    "value": "mode",
                    "type": "variable",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(value, self.raw.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_nan_442": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_inf_445": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_453": {
                "labels": {
                    "value": "labels.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sign_504": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_507": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_510": {
                "x": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "where_520": {
                "condition": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_575": {
                "variable": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple((x.raw if isinstance(x, Tensor) else x for x in index))",
                            "Call"
                        ],
                        [
                            "[tf.convert_to_tensor(x) for x in index]",
                            "ListComp"
                        ],
                        [
                            "tf.stack(index, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "gather_597": {
                "params": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "index.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "batch_dims": {
                    "value": "batch_dims",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "log_307": {
                "x": {
                    "value": "2.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "log_310": {
                "x": {
                    "value": "10.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_scatter_nd_update_355": {
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "[[indices]]",
                    "type": "List",
                    "possible_values": []
                },
                "updates": {
                    "value": "values_[None]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "transpose_365": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_scatter_nd_update_368": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "[[indices[-1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "updates": {
                    "value": "values_[None]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "stack_378": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*indices)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(indices)",
                            "Call"
                        ],
                        [
                            "[tf.cast(idx, tf.int64) if idx.dtype == tf.int32 else idx for idx in indices]",
                            "ListComp"
                        ],
                        [
                            "tf.stack(indices, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cumsum_402": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "identity_485": {
                "input": {
                    "value": "x.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_487": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tile_574": {
                "variable": {
                    "value": "index[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index[i]",
                            "Subscript"
                        ],
                        [
                            "tf.cast(t, tf.int64)",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "tiling",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "fill_367": {
                "variable": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "x.shape[-1:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "value": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill((indices.shape[0],), values_)",
                            "Call"
                        ]
                    ]
                }
            },
            "fill_380": {
                "variable": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "(indices.shape[0],)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill((indices.shape[0],), values_)",
                            "Call"
                        ]
                    ]
                }
            },
            "convert_to_tensor_555": {
                "value": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_562": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "index[i]",
                            "Subscript"
                        ],
                        [
                            "tf.cast(t, tf.int64)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_nd_576": {
                "params": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple((x.raw if isinstance(x, Tensor) else x for x in index))",
                            "Call"
                        ],
                        [
                            "[tf.convert_to_tensor(x) for x in index]",
                            "ListComp"
                        ],
                        [
                            "tf.stack(index, axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_582": {
                "params": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple((x.raw if isinstance(x, Tensor) else x for x in index))",
                            "Call"
                        ],
                        [
                            "[tf.convert_to_tensor(x) for x in index]",
                            "ListComp"
                        ],
                        [
                            "tf.stack(index, axis=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_369": {
                "a": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.tensor_scatter_nd_update(x, [[indices[-1]]], values_[None])",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_scatter_nd_update_381": {
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "tf.transpose(x)",
                            "Call"
                        ],
                        [
                            "tf.reshape(self.raw, (-1,))",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*indices)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(indices)",
                            "Call"
                        ],
                        [
                            "[tf.cast(idx, tf.int64) if idx.dtype == tf.int32 else idx for idx in indices]",
                            "ListComp"
                        ],
                        [
                            "tf.stack(indices, axis=-1)",
                            "Call"
                        ]
                    ]
                },
                "updates": {
                    "value": "values_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill(x.shape[-1:], values_)",
                            "Call"
                        ],
                        [
                            "tf.fill((indices.shape[0],), values_)",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_587": {
                "params": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "index.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_375": {
                "x": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "wax/external/eagerpy/types.py": {
        "tensorflow": {},
        "torch": {}
    },
    "wax/universal/eager_ewma.py": {
        "tensorflow": {
            "scan_298": {
                "variable": {
                    "value": "state_sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "fn": {
                    "value": "scan_f",
                    "type": "variable",
                    "possible_values": []
                },
                "elems": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ep.stack([x] * T)",
                            "Call"
                        ]
                    ]
                },
                "initializer": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "fun_init_state if state is None else state",
                            "IfExp"
                        ],
                        [
                            "fun_init_state if state is None else state",
                            "IfExp"
                        ],
                        [
                            "fun_init_state if state is None else state",
                            "IfExp"
                        ],
                        [
                            "fun_init_state if state is None else state",
                            "IfExp"
                        ]
                    ]
                }
            }
        }
    },
    "wax/external/eagerpy/astensor.py": {
        "torch": {}
    },
    "wax/external/eagerpy/tensor/pytorch.py": {
        "torch": {
            "zeros_like_267": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "slogdet_484": {
                "variable": {
                    "value": "(sign, logabsdet)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "meshgrid_430": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indexing": {
                    "value": "*tensors",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "tanh_72": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_like_186": {
                "variable": {
                    "value": "other_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "other",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "min_191": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_like_197": {
                "variable": {
                    "value": "other_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "other",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_202": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_241": {
                "*size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_246": {
                "*size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_250": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_253": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_like_256": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "fill_value",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "as_tensor_273": {
                "data": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw.detach().cpu().numpy()",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_280": {
                "tensors": {
                    "value": "tensors_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ],
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "stack_287": {
                "tensors": {
                    "value": "tensors_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ],
                        [
                            "unwrap_(*tensors)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "exp_339": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_342": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log2_345": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log10_348": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log1p_351": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_359": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "log_softmax_362": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "full_385": {
                "size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_410": {
                "start": {
                    "value": "start",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ]
                    ]
                },
                "end": {
                    "value": "stop",
                    "type": "variable",
                    "possible_values": [
                        [
                            "start",
                            "variable"
                        ]
                    ]
                },
                "step": {
                    "value": "step",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "meshgrid_432": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "tensors[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "indexing": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pad_465": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pad": {
                    "value": "paddings_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list((x for p in reversed(paddings) for x in p))",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "mode",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "value",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "isnan_469": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "isinf_472": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_480": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "target": {
                    "value": "labels.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sign_540": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_543": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_like_560": {
                "variable": {
                    "value": "x_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "x.prod(i, keepdim=keepdims)",
                            "Call"
                        ],
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "torch.zeros_like(self.raw)",
                            "Call"
                        ],
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "x.all(i, keepdim=keepdims)",
                            "Call"
                        ],
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "x.any(i, keepdim=keepdims)",
                            "Call"
                        ],
                        [
                            "self.raw",
                            "Attribute"
                        ],
                        [
                            "x.squeeze(dim=i)",
                            "Call"
                        ],
                        [
                            "self.raw.clone()",
                            "Call"
                        ],
                        [
                            "type(self)(x.raw.clone().requires_grad_())",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y.raw.dtype",
                            "Attribute"
                        ],
                        [
                            "torch.float32",
                            "Attribute"
                        ],
                        [
                            "x.raw.dtype",
                            "Attribute"
                        ],
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            },
            "full_like_572": {
                "variable": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y.raw.dtype",
                            "Attribute"
                        ],
                        [
                            "torch.float32",
                            "Attribute"
                        ],
                        [
                            "x.raw.dtype",
                            "Attribute"
                        ],
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            },
            "where_573": {
                "condition": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "x_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.raw",
                            "Attribute"
                        ],
                        [
                            "torch.full_like(self.raw, x, dtype=dtype)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "y_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y.raw",
                            "Attribute"
                        ],
                        [
                            "torch.full_like(self.raw, y, dtype=dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_605": {
                "input": {
                    "value": "self.raw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "axis",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ],
                        [
                            "tuple(range(self.ndim))",
                            "Call"
                        ],
                        [
                            "(axis,)",
                            "Tuple"
                        ]
                    ]
                },
                "index": {
                    "value": "index.raw",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log1p_108": {
                "input": {
                    "value": "-self.raw",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "rand_226": {
                "*size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_235": {
                "*size": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(shape,)",
                            "Tuple"
                        ],
                        [
                            "(shape,)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.raw.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.raw.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}