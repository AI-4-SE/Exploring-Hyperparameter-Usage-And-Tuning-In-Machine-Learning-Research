{
    "Adience DB/LSN1.py": {
        "tensorflow": {
            "scan_35": {
                "variable": {
                    "value": "st8_tf",
                    "type": "Variable",
                    "possible_values": []
                },
                "fn": {
                    "value": "forward",
                    "type": "Variable",
                    "possible_values": []
                },
                "elems": {
                    "value": "elems",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'X': inputs, 'y': outputs}",
                            "Dict"
                        ]
                    ]
                },
                "initializer": {
                    "value": "st8_t0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'M': M_t0, 'h': h_t0}",
                            "Dict"
                        ]
                    ]
                }
            },
            "norm_20": {
                "variable": {
                    "value": "X_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.expand_dims(X_t, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_21": {
                "variable": {
                    "value": "M_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "M_tm1",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_22": {
                "variable": {
                    "value": "inner_prod",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.expand_dims(X_t, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.transpose(M_tm1, perm=[0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_23": {
                "variable": {
                    "value": "norm_prod",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "X_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(tf.expand_dims(X_t, 1), axis=2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.transpose(M_norm, perm=[0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_24": {
                "variable": {
                    "value": "h_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.divide(inner_prod, norm_prod)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_27": {
                "variable": {
                    "value": "u_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.expand_dims(X_t, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.expand_dims(y_t, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_9": {
                "initial_value": {
                    "value": "tf.cast(np.asarray(x, dtype=np.float32), tf.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "''",
                            "MethodArgument"
                        ]
                    ]
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_9": {
                "x": {
                    "value": "np.asarray(x, dtype=np.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_20": {
                "input": {
                    "value": "X_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_22": {
                "input": {
                    "value": "X_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_22": {
                "a": {
                    "value": "M_tm1",
                    "type": "Variable",
                    "possible_values": []
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_23": {
                "a": {
                    "value": "M_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(M_tm1, axis=2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "divide_24": {
                "x": {
                    "value": "inner_prod",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(tf.expand_dims(X_t, 1), tf.transpose(M_tm1, perm=[0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "norm_prod",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(X_norm, tf.transpose(M_norm, perm=[0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_27": {
                "input": {
                    "value": "y_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_28": {
                "x": {
                    "value": "tf.transpose(u_t, perm=[0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_28": {
                "a": {
                    "value": "u_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(tf.expand_dims(X_t, 2), tf.expand_dims(y_t, 1))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "Omniglot/LSN.py": {
        "tensorflow": {
            "scan_35": {
                "variable": {
                    "value": "st8_tf",
                    "type": "Variable",
                    "possible_values": []
                },
                "fn": {
                    "value": "forward",
                    "type": "Variable",
                    "possible_values": []
                },
                "elems": {
                    "value": "elems",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'X': inputs, 'y': outputs}",
                            "Dict"
                        ]
                    ]
                },
                "initializer": {
                    "value": "st8_t0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'M': M_t0, 'h': h_t0}",
                            "Dict"
                        ]
                    ]
                }
            },
            "norm_20": {
                "variable": {
                    "value": "X_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.expand_dims(X_t, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_21": {
                "variable": {
                    "value": "M_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "M_tm1",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_22": {
                "variable": {
                    "value": "inner_prod",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.expand_dims(X_t, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.transpose(M_tm1, perm=[0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_23": {
                "variable": {
                    "value": "norm_prod",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "X_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(tf.expand_dims(X_t, 1), axis=2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.transpose(M_norm, perm=[0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_24": {
                "variable": {
                    "value": "h_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.divide(inner_prod, norm_prod)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_27": {
                "variable": {
                    "value": "u_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.expand_dims(X_t, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.expand_dims(y_t, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_9": {
                "initial_value": {
                    "value": "tf.cast(np.asarray(x, dtype=np.float32), tf.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "''",
                            "MethodArgument"
                        ]
                    ]
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_9": {
                "x": {
                    "value": "np.asarray(x, dtype=np.float32)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_20": {
                "input": {
                    "value": "X_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_22": {
                "input": {
                    "value": "X_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_22": {
                "a": {
                    "value": "M_tm1",
                    "type": "Variable",
                    "possible_values": []
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_23": {
                "a": {
                    "value": "M_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(M_tm1, axis=2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "divide_24": {
                "x": {
                    "value": "inner_prod",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(tf.expand_dims(X_t, 1), tf.transpose(M_tm1, perm=[0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "norm_prod",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(X_norm, tf.transpose(M_norm, perm=[0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_27": {
                "input": {
                    "value": "y_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_28": {
                "x": {
                    "value": "tf.transpose(u_t, perm=[0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_28": {
                "a": {
                    "value": "u_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(tf.expand_dims(X_t, 2), tf.expand_dims(y_t, 1))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "Omniglot/utilys.py": {
        "tensorflow": {
            "Variable_9": {
                "initial_value": {
                    "value": "truncated_normal(shape, stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_10": {
                "initial_value": {
                    "value": "constant(0.1, shape=shape)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_11": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool_12": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "ksize": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 2, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "truncated_normal_9": {
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_10": {
                "value": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    }
}