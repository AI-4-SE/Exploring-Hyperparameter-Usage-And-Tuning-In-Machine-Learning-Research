{
    "model/data.py": {
        "sklearn": {
            "train_test_split_171": {
                "variable": {
                    "value": "(t_train, t_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "t",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "coords",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_split",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "tensor_30": {
                "data": {
                    "value": "J",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.concatenate([Id[n // 2:], -Id[:n // 2]])",
                            "Call"
                        ],
                        [
                            "np.ones((n, n)) - np.eye(n)",
                            "BinOp"
                        ],
                        [
                            "symplectic_form(self.dimension()).cpu().numpy()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "metrics.py": {
        "torch": {
            "tensor_109": {
                "variable": {
                    "value": "zero_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.zeros(dim)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_132": {
                "variable": {
                    "value": "y0",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.array(y0_list)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_135": {
                "variable": {
                    "value": "zero_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.zeros(dim)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_19": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_40": {
                "variable": {
                    "value": "y_var",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "y_var",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(y_var, requires_grad=True, dtype=torch.float32).view(1, dim)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_41": {
                "variable": {
                    "value": "yn",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "yn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(yn, requires_grad=True, dtype=torch.float32).view(1, dim)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_102": {
                "data": {
                    "value": "y_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.stack((P, Q), axis=-1).reshape(-1, 2)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/hnn.py": {
        "torch": {
            "einsum_68": {
                "variable": {
                    "value": "vector_field",
                    "type": "Variable",
                    "possible_values": []
                },
                "equation": {
                    "value": "ij,aj->ai",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "self.J.T",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_36": {
                "variable": {
                    "value": "saved_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path(args)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_38": {
                "variable": {
                    "value": "saved_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path(args)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "set_default_tensor_type_21": {
                "t": {
                    "value": "torch.cuda.FloatTensor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "grad_64": {
                "outputs": {
                    "value": "H.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_36": {
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/loss.py": {
        "torch": {
            "split_52": {
                "variable": {
                    "value": "(p0, q0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y0",
                    "type": "Variable",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "self.args.dim // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_53": {
                "variable": {
                    "value": "(p1, q1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y1",
                    "type": "Variable",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "self.args.dim // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_64": {
                "variable": {
                    "value": "(dH_p, dH_q)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "dH",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.autograd.grad(hamiltonian.sum(), x, create_graph=True)[0]",
                            "Subscript"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.args.dim // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_154": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.diff(t, axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_55": {
                "tensors": {
                    "value": "(p1, q0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "grad_63": {
                "outputs": {
                    "value": "hamiltonian.sum()",
                    "type": "Call",
                    "possible_values": []
                },
                "inputs": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.scheme.argument(xn, xplusone)",
                            "Call"
                        ]
                    ]
                },
                "create_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "einsum_68": {
                "equation": {
                    "value": "ai,ai->a",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "dH_p",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "model/standard_nn.py": {
        "torch": {
            "Linear_22": {
                "in_features": {
                    "value": "input_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "parallelize.py": {
        "torch": {
            "is_available_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "AdamW_62": {
                "variable": {
                    "value": "optim",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learn_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-08",
                    "type": "Constant",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_69": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "data['coords']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_70": {
                "variable": {
                    "value": "test_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "data['test_coords']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_34": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_143": {
                "obj": {
                    "value": "{'args': args, 'model': model.state_dict(), 'stats': loss_log}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path(args)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "sigmoid_36": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "visualize.py": {
        "torch": {
            "tensor_46": {
                "variable": {
                    "value": "mesh_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "xs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.stack([b.flatten(), a.flatten()]).T",
                            "Attribute"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}