{
    "1d_regression/data/sine.py": {
        "torch": {
            "from_numpy_18": {
                "ndarray": {
                    "value": "array.astype('float32')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "1d_regression/evaluate.py": {
        "torch": {
            "load_34": {
                "variable": {
                    "value": "saved_state_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_38": {
                "variable": {
                    "value": "mse_criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SGD_61": {
                "variable": {
                    "value": "h_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "h.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learner_args.inner_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_62": {
                "variable": {
                    "value": "h_crit",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_126": {
                "variable": {
                    "value": "losses_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "losses_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat(losses_test)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_127": {
                "variable": {
                    "value": "losses_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "losses_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat(losses_train)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_70": {
                "variable": {
                    "value": "te_xp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_test, preds_test]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "tr_xp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_train, preds_train]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_72": {
                "variable": {
                    "value": "tr_xyp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_train, y_train, preds_train]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "no_grad_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "1d_regression/model/modules.py": {
        "torch": {
            "Linear_12": {
                "variable": {
                    "value": "self.fc_q",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_query",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_13": {
                "variable": {
                    "value": "self.fc_k",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_key",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_14": {
                "variable": {
                    "value": "self.fc_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_value",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_15": {
                "variable": {
                    "value": "self.fc_o",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_output",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_22": {
                "variable": {
                    "value": "query_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query.chunk(self.num_heads, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_23": {
                "variable": {
                    "value": "key_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "key.chunk(self.num_heads, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_24": {
                "variable": {
                    "value": "value_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "value.chunk(self.num_heads, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_35": {
                "variable": {
                    "value": "outs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(A @ value_).chunk(self.num_heads, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Parameter_44": {
                "variable": {
                    "value": "self.S",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(1, num_seeds, dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_28": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask.squeeze(-1)] * query.shape[-2]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_29": {
                "variable": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask] * self.num_heads",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_31": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "query_ @ key_.transpose(-2, -1) / math.sqrt(query.shape[-1])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_33": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A_logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "query_ @ key_.transpose(-2, -1) / math.sqrt(query.shape[-1])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "relu_37": {
                "input": {
                    "value": "self.fc_o(outs)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "1d_regression/model/neural_complexity.py": {
        "torch": {
            "Identity_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_15": {
                "in_features": {
                    "value": "input_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "*args": {
                    "value": "*modules",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_17": {
                "in_features": {
                    "value": "input_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "in_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "1d_regression/model/nn_learner.py": {
        "torch": {
            "Parameter_35": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.stack([m.weight for m in fcs])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_36": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.stack([m.bias for m in fcs]).unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules",
                    "type": null,
                    "possible_values": []
                }
            },
            "bmm_93": {
                "variable": {
                    "value": "sym",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "weight.transpose(2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_163": {
                "variable": {
                    "value": "self.log_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "log_alpha",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(torch.ones(dim) * alpha).log()",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_95": {
                "tensors": {
                    "value": "eyes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[torch.eye(n, device='cuda') for _ in range(bs)]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "randn_187": {
                "variable": {
                    "value": "epsilon",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "clamp_190": {
                "variable": {
                    "value": "self.log_alpha.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.log_alpha.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "max": {
                    "value": "self.max_alpha",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "[m.weight for m in fcs]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_36": {
                "tensors": {
                    "value": "[m.bias for m in fcs]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "unsqueeze_36": {
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "einsum_39": {
                "equation": {
                    "value": "bnd,bmd->bnm",
                    "type": "Constant",
                    "possible_values": []
                },
                "*operands": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x.repeat(self.bs, 1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_94": {
                "n": {
                    "value": "n",
                    "type": "Variable",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_108": {
                "tensors": {
                    "value": "[self.l1(p) for p in ps]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "sum_108": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_110": {
                "tensors": {
                    "value": "[self.l2(p) for p in ps]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "sum_110": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AlphaDropout_59": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LayerNorm_62": {
                "normalized_shape": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "elementwise_affine": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_112": {
                "tensors": {
                    "value": "[self.norm(w, p=1, q=inf) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "prod_112": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_150": {
                "*size": {
                    "value": "x.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_162": {
                "*size": {
                    "value": "dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "stack_114": {
                "tensors": {
                    "value": "[self.norm(w, p=2, q=2) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "prod_114": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_116": {
                "tensors": {
                    "value": "[self.norm(w, p=3, q=1.5) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "prod_116": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_119": {
                "tensors": {
                    "value": "[self.orthogonal_loss(w) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "sum_119": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_121": {
                "tensors": {
                    "value": "[self.op_norm(w, p=inf) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "prod_121": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_123": {
                "tensors": {
                    "value": "[self.op_norm(w, p=1.5) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "prod_123": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_125": {
                "tensors": {
                    "value": "[self.op_norm(w, p=1) for w in ws]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "prod_125": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "1d_regression/run.py": {
        "torch": {
            "SummaryWriter_92": {
                "variable": {
                    "value": "writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "args.log_dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_97": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_98": {
                "variable": {
                    "value": "mse_criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "L1Loss_99": {
                "variable": {
                    "value": "mae_criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_163": {
                "variable": {
                    "value": "h_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "h.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.inner_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_164": {
                "variable": {
                    "value": "h_crit",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_230": {
                "variable": {
                    "value": "all_gaps",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_accum['gap']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_231": {
                "variable": {
                    "value": "all_preds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_accum['pred']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "mean_l_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_accum['l_test']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_233": {
                "variable": {
                    "value": "mean_l_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_234": {
                "variable": {
                    "value": "mean_l_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_accum['l_train']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_234": {
                "variable": {
                    "value": "mean_l_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_170": {
                "variable": {
                    "value": "te_xp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_test, preds_test]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "tr_xp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_train, preds_train]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "tr_xyp",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_train, y_train, preds_train]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_126": {
                "variable": {
                    "value": "self.te_xp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.te_xp, te_xp]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_127": {
                "variable": {
                    "value": "self.tr_xp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.tr_xp, tr_xp]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_128": {
                "variable": {
                    "value": "self.tr_xyp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.tr_xyp, tr_xyp]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_129": {
                "variable": {
                    "value": "self.gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.gap, gap]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_283": {
                "variable": {
                    "value": "all_gaps",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "accum['gap']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_284": {
                "variable": {
                    "value": "all_preds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "accum['pred']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_207": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_281": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "1d_regression/utils.py": {
        "torch": {
            "manual_seed_53": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "manual_seed_54": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "manual_seed_55": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}