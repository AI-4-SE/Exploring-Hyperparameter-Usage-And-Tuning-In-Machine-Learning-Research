{
    "src/entrypointGAN.py": {
        "torch": {
            "Sequential_20": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(noise_dim, hidden_size[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(4, hidden_size[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_75": {
                "variable": {
                    "value": "self.G_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.G.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_G",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['LearningRateG']",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(beta1, beta2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_76": {
                "variable": {
                    "value": "self.D_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.D.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['LearningRateD']",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(beta1, beta2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_115": {
                "variable": {
                    "value": "self.train_samples",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "entry_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_86": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoints",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.checkpoints",
                            "Attribute"
                        ],
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_96": {
                "obj": {
                    "value": "{'epoch': epoch, 'G_dict': self.G.state_dict(), 'D_dict': self.D.state_dict(), 'G_optimizer': self.G_optimizer.state_dict(), 'D_optimizer': self.D_optimizer.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoints",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.checkpoints",
                            "Attribute"
                        ],
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "noise_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_20": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_22": {
                "in_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_22": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "hidden_size[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_24": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "hidden_size[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_37": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "BatchNorm1d_38": {
                "num_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "in_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_39": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_41": {
                "in_features": {
                    "value": "hidden_size[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_41": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['EntryPointGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_43": {
                "in_features": {
                    "value": "hidden_size[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_126": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_179": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_119": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(real_points)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_120": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(real_points)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_121": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(real_points)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.noise_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_196": {
                "*size": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "200",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "self.noise_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/predictorGAN.py": {
        "torch": {
            "Sequential_26": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*embed_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "LSTM_30": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embedding_size[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*fc_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_45": {
                "variable": {
                    "value": "x_in_vel",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_in_vel, torch.zeros((bs, 1, 2), device=x_in.device, dtype=x_in.dtype))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_48": {
                "variable": {
                    "value": "x_in_aug",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_in, x_in_vel]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_56": {
                "variable": {
                    "value": "hid_vector",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(lstm_out_last, noise)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*embed_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "LSTM_73": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embedding_size[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*fc_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_100": {
                "variable": {
                    "value": "hid_vector",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(lstm_out_last, e_out)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_132": {
                "variable": {
                    "value": "self.G_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.G.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_G",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['LearningRateG']",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(beta1, beta2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_133": {
                "variable": {
                    "value": "self.D_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.D.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_D",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['LearningRateD']",
                            "Subscript"
                        ]
                    ]
                },
                "betas": {
                    "value": "(beta1, beta2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MSELoss_134": {
                "variable": {
                    "value": "self.mse_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_158": {
                "variable": {
                    "value": "continuation_data_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "continuation_data_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(continuation_data_pred, dim=0).cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pad_sequence_159": {
                "variable": {
                    "value": "continuation_data_obsv",
                    "type": "variable",
                    "possible_values": []
                },
                "sequences": {
                    "value": "continuation_data_obsv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "pad_sequence(continuation_data_obsv, batch_first=True).cuda()",
                            "Call"
                        ]
                    ]
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "empty_227": {
                "variable": {
                    "value": "mse_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_268": {
                "variable": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[entry_points.clone() for _ in range(n_samples)]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(x_in, dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat([x_in, x_out.unsqueeze(1)], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_172": {
                "obj": {
                    "value": "{'epoch': epoch, 'G_dict': self.G.state_dict(), 'D_dict': self.D.state_dict(), 'G_optimizer': self.G_optimizer.state_dict(), 'D_optimizer': self.D_optimizer.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoints",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.checkpoints",
                            "Attribute"
                        ],
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "load_186": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoints",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.checkpoints",
                            "Attribute"
                        ],
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mse_loss_229": {
                "variable": {
                    "value": "mse_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "preds_fake",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.G(obsvs, noise, obsv_lengths)",
                            "Call"
                        ],
                        [
                            "self.G(obsvs, noise, obsv_lengths)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "preds",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_279": {
                "variable": {
                    "value": "x_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_in, x_out.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_23": {
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "embedding_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_23": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_33": {
                "in_features": {
                    "value": "lstm_size + noise_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_33": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_36": {
                "in_features": {
                    "value": "hidden_size[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_52": {
                "*size": {
                    "value": "(1, bs, self.lstm_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "noise.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "embedding_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_66": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "BatchNorm1d_66": {
                "num_features": {
                    "value": "embedding_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "in_features": {
                    "value": "lstm_size + embedding_size[-1]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_76": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_79": {
                "in_features": {
                    "value": "hidden_size[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_95": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "noise.size(0)",
                            "Call"
                        ],
                        [
                            "x_in.size(0)",
                            "Call"
                        ],
                        [
                            "self.batch_size",
                            "Attribute"
                        ],
                        [
                            "len(preds)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.lstm_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "x_in.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_45": {
                "*size": {
                    "value": "(bs, 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "x_in.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "x_in.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_202": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "embedding_size[ii - 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "embedding_size[ii]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_25": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_35": {
                "in_features": {
                    "value": "hidden_size[ii - 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[ii]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_35": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_68": {
                "in_features": {
                    "value": "embedding_size[ii - 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "embedding_size[ii]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_68": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "hidden_size[ii - 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size[ii]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "LeakyReLU_78": {
                "negative_slope": {
                    "value": "relu_slope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config['PredictorGAN']['ReluSlope']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_197": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "noise.size(0)",
                            "Call"
                        ],
                        [
                            "x_in.size(0)",
                            "Call"
                        ],
                        [
                            "self.batch_size",
                            "Attribute"
                        ],
                        [
                            "len(preds)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_198": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "noise.size(0)",
                            "Call"
                        ],
                        [
                            "x_in.size(0)",
                            "Call"
                        ],
                        [
                            "self.batch_size",
                            "Attribute"
                        ],
                        [
                            "len(preds)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_199": {
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "noise.size(0)",
                            "Call"
                        ],
                        [
                            "x_in.size(0)",
                            "Call"
                        ],
                        [
                            "self.batch_size",
                            "Attribute"
                        ],
                        [
                            "len(preds)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.noise_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_276": {
                "*size": {
                    "value": "N",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(x_in)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.noise_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/simulation.py": {
        "torch": {
            "stack_74": {
                "variable": {
                    "value": "train_path_points",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_path_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(train_path_points, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_75": {
                "variable": {
                    "value": "train_entry_points",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_entry_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(train_entry_points, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_76": {
                "variable": {
                    "value": "test_path_points",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_path_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(test_path_points, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_77": {
                "variable": {
                    "value": "test_entry_points",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_entry_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(test_entry_points, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_87": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_113": {
                "variable": {
                    "value": "entry_pnts_fltr",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "entry_pnts_fltr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(entry_pnts_fltr)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}