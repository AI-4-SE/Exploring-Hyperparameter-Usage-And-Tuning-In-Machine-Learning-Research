{
    "models/conv.py": {
        "tensorflow": {
            "Sequential_11": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "layers": {
                    "value": "[layers.Conv2D(args['filters'], 3, activation='relu', padding='same', input_shape=args['input_shape']), layers.BatchNormalization(), tf.keras.layers.Dense(units=args['forecast_horizon'])]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_12": {
                "filters": {
                    "value": "args['filters']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "input_shape": {
                    "value": "args['input_shape']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "args",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNormalization_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_14": {
                "units": {
                    "value": "args['forecast_horizon']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "args",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "models/convlstm.py": {
        "tensorflow": {
            "Sequential_11": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "layers": {
                    "value": "[keras.Input(shape=args['input_shape']), layers.TimeDistributed(layers.Conv2D(args['filters'], 3, activation='relu', padding='same')), layers.TimeDistributed(layers.Flatten()), layers.BatchNormalization(), layers.LSTM(args['lstm_size'], dropout=0.1), layers.BatchNormalization(), layers.Dense(units=args['forecast_horizon'] * args['input_shape'][1] * args['input_shape'][2]), layers.Reshape((args['input_shape'][1], args['input_shape'][2], args['forecast_horizon']))]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Input_12": {
                "shape": {
                    "value": "args['input_shape']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "args",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "TimeDistributed_15": {
                "layer": {
                    "value": "layers.Conv2D(args['filters'], 3, activation='relu', padding='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TimeDistributed_16": {
                "layer": {
                    "value": "layers.Flatten()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNormalization_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_18": {
                "units": {
                    "value": "args['lstm_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "BatchNormalization_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_20": {
                "units": {
                    "value": "args['forecast_horizon'] * args['input_shape'][1] * args['input_shape'][2]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Reshape_21": {
                "target_shape": {
                    "value": "(args['input_shape'][1], args['input_shape'][2], args['forecast_horizon'])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2D_15": {
                "filters": {
                    "value": "args['filters']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/gcnlstm.py": {
        "tensorflow": {
            "Model_732": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "x_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gcn_lstm.in_out_tensors()",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gcn_lstm.in_out_tensors()",
                            "Call"
                        ]
                    ]
                }
            },
            "get_383": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_386": {
                "variable": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'glorot_uniform'",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_387": {
                "variable": {
                    "value": "self.kernel_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_regularizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_388": {
                "variable": {
                    "value": "self.kernel_constraint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_constraint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_389": {
                "variable": {
                    "value": "self.bias_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'zeros'",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_390": {
                "variable": {
                    "value": "self.bias_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_regularizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_391": {
                "variable": {
                    "value": "self.bias_constraint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_constraint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "transpose_486": {
                "variable": {
                    "value": "nodes_last",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ],
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dot_487": {
                "variable": {
                    "value": "neighbours",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "nodes_last",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.transpose(features, [0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.A",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_490": {
                "variable": {
                    "value": "h_graph",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "neighbours",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.dot(nodes_last, self.A)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dot_492": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "h_graph",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.transpose(neighbours, [0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_594": {
                "variable": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'glorot_uniform'",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_595": {
                "variable": {
                    "value": "self.kernel_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_regularizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_596": {
                "variable": {
                    "value": "self.kernel_constraint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_constraint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_597": {
                "variable": {
                    "value": "self.bias_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'zeros'",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_598": {
                "variable": {
                    "value": "self.bias_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_regularizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_599": {
                "variable": {
                    "value": "self.bias_constraint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_constraint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Dense_652": {
                "variable": {
                    "value": "self._decoder_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.n_nodes * self.forecast_horizon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Input_708": {
                "variable": {
                    "value": "x_t",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._features.shape",
                            "Attribute"
                        ],
                        [
                            "(None, self.n_nodes, self.n_features, self.variates)",
                            "Tuple"
                        ],
                        [
                            "(None, self.n_nodes, self.n_features)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Input_711": {
                "variable": {
                    "value": "out_indices_t",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_shape": {
                    "value": "(None, self.n_nodes)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_445": {
                "variable": {
                    "value": "adj_init",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "self.adj",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_447": {
                "variable": {
                    "value": "adj_init",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "expand_dims_662": {
                "variable": {
                    "value": "h_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h_layer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x_in",
                            "variable"
                        ],
                        [
                            "tf.expand_dims(h_layer, axis=-1)",
                            "Call"
                        ],
                        [
                            "Reshape((self.n_nodes, self.seq_len * self.variates))(h_layer)",
                            "Call"
                        ],
                        [
                            "layer(h_layer)",
                            "Call"
                        ],
                        [
                            "Reshape((self.n_nodes, -1, self.variates))(h_layer)",
                            "Call"
                        ],
                        [
                            "Permute((2, 1, 3))(h_layer)",
                            "Call"
                        ],
                        [
                            "Reshape((-1, self.n_nodes * self.variates))(h_layer)",
                            "Call"
                        ],
                        [
                            "layer(h_layer)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(h_layer)",
                            "Call"
                        ],
                        [
                            "self._decoder_layer(h_layer)",
                            "Call"
                        ],
                        [
                            "Reshape((self.n_nodes, self.forecast_horizon))(h_layer)",
                            "Call"
                        ],
                        [
                            "Reshape((self.n_nodes, self.variates))(h_layer)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "serialize_406": {
                "activation": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "serialize_407": {
                "activation": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "serialize_408": {
                "activation": {
                    "value": "self.kernel_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "serialize_409": {
                "activation": {
                    "value": "self.kernel_constraint",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "serialize_410": {
                "activation": {
                    "value": "self.bias_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "serialize_411": {
                "activation": {
                    "value": "self.bias_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "serialize_412": {
                "activation": {
                    "value": "self.bias_constraint",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_638": {
                "units": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "return_sequences": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_644": {
                "units": {
                    "value": "self.lstm_layer_sizes[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "self.lstm_activations[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "return_sequences": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNormalization_651": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Reshape_666": {
                "target_shape": {
                    "value": "(self.n_nodes, self.seq_len * self.variates)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Reshape_673": {
                "target_shape": {
                    "value": "(self.n_nodes, -1, self.variates)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Permute_676": {
                "dims": {
                    "value": "(2, 1, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Reshape_678": {
                "target_shape": {
                    "value": "(-1, self.n_nodes * self.variates)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNormalization_684": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Reshape_686": {
                "target_shape": {
                    "value": "(self.n_nodes, self.forecast_horizon)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Reshape_691": {
                "target_shape": {
                    "value": "(self.n_nodes, self.variates)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    }
}