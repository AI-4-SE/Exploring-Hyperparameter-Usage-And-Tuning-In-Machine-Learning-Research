{
    "ODIN_interface.py": {
        "tensorflow": {}
    },
    "generate_FHN_data.py": {
        "tensorflow": {
            "Exists_23": {
                "filename": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MakeDirs_24": {
                "dirname": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Exists_26": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_27": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Exists_30": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_31": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + '/' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "generate_Glucose_data.py": {
        "tensorflow": {
            "Exists_23": {
                "filename": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MakeDirs_24": {
                "dirname": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Exists_26": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_27": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Exists_30": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_31": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + '/' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "generate_Lorenz63_data.py": {
        "tensorflow": {
            "Exists_23": {
                "filename": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MakeDirs_24": {
                "dirname": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Exists_26": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_27": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Exists_30": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_31": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + '/' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "generate_PT_data.py": {
        "tensorflow": {
            "Exists_22": {
                "filename": {
                    "value": "str(args.noise_var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MakeDirs_23": {
                "dirname": {
                    "value": "str(args.noise_var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Exists_25": {
                "filename": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_26": {
                "dirname": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Exists_29": {
                "filename": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs) + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_30": {
                "dirname": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs) + '/' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "generate_Quadro_data.py": {
        "tensorflow": {
            "Exists_23": {
                "filename": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MakeDirs_24": {
                "dirname": {
                    "value": "str(args.SNR)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Exists_26": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_27": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Exists_30": {
                "filename": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_31": {
                "dirname": {
                    "value": "str(args.SNR) + '/' + str(args.n_obs) + '/' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "generate_lv_data.py": {
        "tensorflow": {
            "Exists_22": {
                "filename": {
                    "value": "str(args.noise_var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MakeDirs_23": {
                "dirname": {
                    "value": "str(args.noise_var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Exists_25": {
                "filename": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_26": {
                "dirname": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Exists_29": {
                "filename": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs) + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MakeDirs_30": {
                "dirname": {
                    "value": "str(args.noise_var) + '/' + str(args.n_obs) + '/' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "odin/core/GP_approx_risk_minimization.py": {
        "tensorflow": {
            "reshape_29": {
                "variable": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, -1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sqrt_31": {
                "variable": {
                    "value": "weights",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reshape(weights / np.sqrt(np.pi), [1, 1, -1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_45": {
                "variable": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, -1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_61": {
                "variable": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(X, [1, -1, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, -1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_34": {
                "values": {
                    "value": "[cos_nodes, sin_nodes]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_49": {
                "values": {
                    "value": "[cos_nodes, sin_nodes]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_143": {
                "variable": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_144": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_t_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_145": {
                "variable": {
                    "value": "self.system_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_148": {
                "variable": {
                    "value": "self.system_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_151": {
                "variable": {
                    "value": "self.t_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_152": {
                "variable": {
                    "value": "self.t_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_153": {
                "variable": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.n_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_154": {
                "variable": {
                    "value": "self.dimensionality",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "trainable_variables_165": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_185": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_249": {
                "variable": {
                    "value": "Z_t_y",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "Z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.variances * hermite_embeding(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ],
                        [
                            "self.variances * RFF_embeding(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ],
                        [
                            "self.variances * RFF_embeding_bias(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.expand_dims(self.system, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Z_t_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "solve_251": {
                "variable": {
                    "value": "inv_Z_t_y",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "Kernel_inner_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(Z, Z, transpose_a=True, name='Kernel_inner_dim') + self.likelihood_variances * tf.eye(self.QFF_approx, dtype=tf.float64)",
                            "BinOp"
                        ]
                    ]
                },
                "rhs": {
                    "value": "Z_t_y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(Z, tf.expand_dims(self.system, -1), transpose_a=True, name='Z_t_y')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "inv_Z_t_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_253": {
                "variable": {
                    "value": "a_vector",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "Z_t_y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(Z, tf.expand_dims(self.system, -1), transpose_a=True, name='Z_t_y')",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "inv_Z_t_y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(Kernel_inner_dim, Z_t_y, name='inv_Z_t_y')",
                            "Call"
                        ]
                    ]
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "reg_risk_main_term",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_265": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_274": {
                "variable": {
                    "value": "session",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_28": {
                "tensor": {
                    "value": "np.sqrt(2) * nodes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_31": {
                "tensor": {
                    "value": "weights / np.sqrt(np.pi)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cos_32": {
                "x": {
                    "value": "nodes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(np.sqrt(2) * nodes, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sin_33": {
                "x": {
                    "value": "nodes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(np.sqrt(2) * nodes, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reshape_44": {
                "tensor": {
                    "value": "omegas",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.random.normal(size=m // 2)",
                            "Call"
                        ],
                        [
                            "np.random.normal(size=m)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cos_47": {
                "x": {
                    "value": "nodes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(np.sqrt(2) * nodes, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sin_48": {
                "x": {
                    "value": "nodes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(np.sqrt(2) * nodes, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(omegas, [1, 1, -1]) * gamma",
                            "BinOp"
                        ],
                        [
                            "nodes * X",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reshape_60": {
                "tensor": {
                    "value": "omegas",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.random.normal(size=m // 2)",
                            "Call"
                        ],
                        [
                            "np.random.normal(size=m)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "exp_241": {
                "variable": {
                    "value": "self.likelihood_variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.likelihood_logvariances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reset_default_graph_293": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_63": {
                "x": {
                    "value": "nodes + biases",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Session_177": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variable_scope_202": {
                "name_or_scope": {
                    "value": "gaussian_process_kernel",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_204": {
                "variable": {
                    "value": "self.log_lengthscale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_lengthscale",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_208": {
                "variable": {
                    "value": "self.log_variance",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_variance",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_218": {
                "variable": {
                    "value": "self.likelihood_logvariance",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "variance_loglik",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_226": {
                "variable": {
                    "value": "self.log_lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "lengthscales",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_230": {
                "variable": {
                    "value": "self.log_variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "variances",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_234": {
                "variable": {
                    "value": "self.variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_235": {
                "variable": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_236": {
                "variable": {
                    "value": "self.likelihood_logvariances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "variances_loglik",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_249": {
                "input": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_250": {
                "a": {
                    "value": "Z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.variances * hermite_embeding(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ],
                        [
                            "self.variances * RFF_embeding(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ],
                        [
                            "self.variances * RFF_embeding_bias(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "Z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.variances * hermite_embeding(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ],
                        [
                            "self.variances * RFF_embeding(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ],
                        [
                            "self.variances * RFF_embeding_bias(self.QFF_approx, self.lengthscales, self.t)",
                            "BinOp"
                        ]
                    ]
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Kernel_inner_dim",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_254": {
                "input_tensor": {
                    "value": "self.system * self.system",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_256": {
                "input_tensor": {
                    "value": "tf.log(self.likelihood_variances)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "eye_250": {
                "num_rows": {
                    "value": "self.QFF_approx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "logdet_256": {
                "matrix": {
                    "value": "Kernel_inner_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(Z, Z, transpose_a=True, name='Kernel_inner_dim') + self.likelihood_variances * tf.eye(self.QFF_approx, dtype=tf.float64)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "exp_213": {
                "x": {
                    "value": "self.log_lengthscale",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_214": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_216": {
                "x": {
                    "value": "self.log_variance",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_217": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_222": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_231": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_254": {
                "input": {
                    "value": "self.likelihood_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_256": {
                "x": {
                    "value": "self.likelihood_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_227": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_237": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "odin/core/GP_risk_minimization.py": {
        "tensorflow": {
            "constant_95": {
                "variable": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_96": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_t_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_97": {
                "variable": {
                    "value": "self.system_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_100": {
                "variable": {
                    "value": "self.system_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_103": {
                "variable": {
                    "value": "self.t_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_104": {
                "variable": {
                    "value": "self.t_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_105": {
                "variable": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.n_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_106": {
                "variable": {
                    "value": "self.dimensionality",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "trainable_variables_117": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_138": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_160": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_189": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_198": {
                "variable": {
                    "value": "session",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reset_default_graph_227": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "odin/core/ODE_approx_risk_minimization.py": {
        "tensorflow": {
            "constant_285": {
                "variable": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_286": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_t_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_287": {
                "variable": {
                    "value": "self.system_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_290": {
                "variable": {
                    "value": "self.system_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_293": {
                "variable": {
                    "value": "self.t_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_294": {
                "variable": {
                    "value": "self.t_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_295": {
                "variable": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.n_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_296": {
                "variable": {
                    "value": "self.dimensionality",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_328": {
                "variable": {
                    "value": "self.Z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros([self.dim, self.n_p, self.QFF_approx], dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Z",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_329": {
                "variable": {
                    "value": "self.Z_prime",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros([self.dim, self.n_p, self.QFF_approx], dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Z_prime",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_358": {
                "variable": {
                    "value": "a_vector",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "self.Z_t_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.inv_Z_t_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "reg_risk_main_term",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_369": {
                "variable": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "states_difference * states_difference",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_382": {
                "variable": {
                    "value": "model_derivatives",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.trainable.compute_gradients(unnormalized_states) / self.system_std_dev * self.t_std_dev",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_385": {
                "variable": {
                    "value": "self.data_derivatives",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.Z_prime",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.inv_Z_t_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "Dx",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_389": {
                "variable": {
                    "value": "Z_prime_t_der_dif",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "self.Z_prime",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "derivatives_difference",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model_derivatives - self.data_derivatives",
                            "BinOp"
                        ]
                    ]
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Z_prime_t_der_dif",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_390": {
                "variable": {
                    "value": "self.Hess_inner_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.Z_prime",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Z_prime",
                    "type": "Attribute",
                    "possible_values": []
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Hess_inner_dim",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "solve_392": {
                "variable": {
                    "value": "temp1",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "temp",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.Hess_inner_dim + self.gamma * self.Z_t_Z_lamda / self.lamda",
                            "BinOp"
                        ]
                    ]
                },
                "rhs": {
                    "value": "Z_prime_t_der_dif",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(self.Z_prime, derivatives_difference, transpose_a=True, name='Z_prime_t_der_dif')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "inverse_of_der_risk_term",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_393": {
                "variable": {
                    "value": "second_term",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "Z_prime_t_der_dif",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(self.Z_prime, derivatives_difference, transpose_a=True, name='Z_prime_t_der_dif')",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "temp1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(temp, Z_prime_t_der_dif, name='inverse_of_der_risk_term')",
                            "Call"
                        ]
                    ]
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_394": {
                "variable": {
                    "value": "first_term",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "derivatives_difference",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model_derivatives - self.data_derivatives",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "derivatives_difference",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model_derivatives - self.data_derivatives",
                            "BinOp"
                        ]
                    ]
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_405": {
                "variable": {
                    "value": "self.A_inner_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros([self.dim, self.QFF_approx, self.QFF_approx], dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "A_inner_dim",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "trainable_variables_430": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_454": {
                "variable": {
                    "value": "self.Z_t_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.Z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.expand_dims(self.x, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Z_t_x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_456": {
                "variable": {
                    "value": "self.Kernel_inner_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.Z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "Kernel_inner_dim",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "solve_458": {
                "variable": {
                    "value": "self.inv_Z_t_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.Z_t_Z_lamda",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "self.Z_t_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "inv_Z_t_x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_470": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "assign_480": {
                "variable": {
                    "value": "assign_states_mean",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "tf.squeeze(self.mean_prediction)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "clip_by_value_483": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "t": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "tf.constant(self.state_lower_bounds)",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "tf.constant(self.state_upper_bounds)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_524": {
                "variable": {
                    "value": "session",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FileWriter_214": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "tensorboard_summary_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "histogram_215": {
                "variable": {
                    "value": "self.theta_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "Theta_summary",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "self.trainable.theta",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_331": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "states",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_372": {
                "input_tensor": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 / self.lamda * (tf.reduce_sum(self.x * self.x) - tf.reduce_sum(a_vector))",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(states_difference * states_difference, 1)",
                            "Call"
                        ],
                        [
                            "risk_term * 0.5 / tf.squeeze(self.gaussian_process.likelihood_variances)",
                            "BinOp"
                        ],
                        [
                            "(first_term - second_term) / self.gamma",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.reduce_sum(risk_term)",
                            "BinOp"
                        ],
                        [
                            "0.5 * (tf.linalg.logdet(self.A_inner_dim + self.gamma * tf.eye(self.QFF_approx, dtype=tf.float64)) + (self.n_p - self.QFF_approx) * tf.squeeze(tf.log(self.gamma)))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_407": {
                "input_tensor": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 / self.lamda * (tf.reduce_sum(self.x * self.x) - tf.reduce_sum(a_vector))",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(states_difference * states_difference, 1)",
                            "Call"
                        ],
                        [
                            "risk_term * 0.5 / tf.squeeze(self.gaussian_process.likelihood_variances)",
                            "BinOp"
                        ],
                        [
                            "(first_term - second_term) / self.gamma",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.reduce_sum(risk_term)",
                            "BinOp"
                        ],
                        [
                            "0.5 * (tf.linalg.logdet(self.A_inner_dim + self.gamma * tf.eye(self.QFF_approx, dtype=tf.float64)) + (self.n_p - self.QFF_approx) * tf.squeeze(tf.log(self.gamma)))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "scalar_421": {
                "variable": {
                    "value": "loss_sum",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_sum",
                    "type": "Constant",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.risk",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_all_462": {
                "variable": {
                    "value": "self.merged_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reset_default_graph_593": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_328": {
                "shape": {
                    "value": "[self.dim, self.n_p, self.QFF_approx]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_329": {
                "shape": {
                    "value": "[self.dim, self.n_p, self.QFF_approx]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_330": {
                "name_or_scope": {
                    "value": "risk_main",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_335": {
                "variable": {
                    "value": "self.log_gamma_single",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(self.initial_gamma)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.train_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "gamma",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_343": {
                "variable": {
                    "value": "self.log_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(self.initial_gamma) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.train_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "log_gamma",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_350": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_370": {
                "input": {
                    "value": "self.gaussian_process.likelihood_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_396": {
                "input_tensor": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 / self.lamda * (tf.reduce_sum(self.x * self.x) - tf.reduce_sum(a_vector))",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(states_difference * states_difference, 1)",
                            "Call"
                        ],
                        [
                            "risk_term * 0.5 / tf.squeeze(self.gaussian_process.likelihood_variances)",
                            "BinOp"
                        ],
                        [
                            "(first_term - second_term) / self.gamma",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.reduce_sum(risk_term)",
                            "BinOp"
                        ],
                        [
                            "0.5 * (tf.linalg.logdet(self.A_inner_dim + self.gamma * tf.eye(self.QFF_approx, dtype=tf.float64)) + (self.n_p - self.QFF_approx) * tf.squeeze(tf.log(self.gamma)))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_405": {
                "shape": {
                    "value": "[self.dim, self.QFF_approx, self.QFF_approx]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_454": {
                "input": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "squeeze_480": {
                "input": {
                    "value": "self.mean_prediction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_359": {
                "input_tensor": {
                    "value": "a_vector",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(self.Z_t_x, self.inv_Z_t_x, transpose_a=True, name='reg_risk_main_term')",
                            "Call"
                        ]
                    ]
                }
            },
            "logdet_406": {
                "matrix": {
                    "value": "self.A_inner_dim + self.gamma * tf.eye(self.QFF_approx, dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "eye_457": {
                "num_rows": {
                    "value": "self.QFF_approx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_484": {
                "value": {
                    "value": "self.state_lower_bounds",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_485": {
                "value": {
                    "value": "self.state_upper_bounds",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_340": {
                "x": {
                    "value": "self.log_gamma_single",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_341": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_406": {
                "input": {
                    "value": "tf.log(self.gamma)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_581": {
                "input": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_345": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_406": {
                "x": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_406": {
                "num_rows": {
                    "value": "self.QFF_approx",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "odin/core/ODE_risk_minimization.py": {
        "tensorflow": {
            "constant_181": {
                "variable": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_182": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.normalized_t_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_183": {
                "variable": {
                    "value": "self.system_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_186": {
                "variable": {
                    "value": "self.system_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.system_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.dim, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_189": {
                "variable": {
                    "value": "self.t_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_190": {
                "variable": {
                    "value": "self.t_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.t_data_std_dev",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_191": {
                "variable": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.n_p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_192": {
                "variable": {
                    "value": "self.dimensionality",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "solve_251": {
                "variable": {
                    "value": "a_vector",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.gaussian_process.c_phi_matrices_noiseless",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "tf.expand_dims(self.x, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "reg_risk_inv_kernel",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_263": {
                "variable": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "states_difference * states_difference",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_276": {
                "variable": {
                    "value": "model_derivatives",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.trainable.compute_gradients(unnormalized_states) / self.system_std_dev * self.t_std_dev",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "solve_288": {
                "variable": {
                    "value": "a_vector",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "post_variance",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.posterior_derivative_variance + self.gamma * tf.expand_dims(tf.eye(self.n_points, dtype=tf.float64), 0)",
                            "BinOp"
                        ],
                        [
                            "self.posterior_derivative_variance + self.gamma * tf.expand_dims(tf.eye(self.n_points, dtype=tf.float64), 0)",
                            "BinOp"
                        ]
                    ]
                },
                "rhs": {
                    "value": "derivatives_difference",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model_derivatives - data_derivatives",
                            "BinOp"
                        ]
                    ]
                },
                "name": {
                    "value": "deriv_risk_inv_A",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "trainable_variables_326": {
                "variable": {
                    "value": "t_vars",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_361": {
                "variable": {
                    "value": "self.init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "assign_372": {
                "variable": {
                    "value": "assign_states_mean",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "tf.squeeze(mean_prediction)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "clip_by_value_375": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "t": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "tf.constant(self.state_lower_bounds)",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "tf.constant(self.state_upper_bounds)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_391": {
                "variable": {
                    "value": "session",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FileWriter_107": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "tensorboard_summary_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "histogram_108": {
                "variable": {
                    "value": "theta_sum",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "Theta_summary",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "self.trainable.theta",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_224": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "self.system",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "states",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_254": {
                "input_tensor": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * tf.reduce_sum(self.x * tf.squeeze(a_vector))",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(states_difference * states_difference, 1)",
                            "Call"
                        ],
                        [
                            "risk_term * 0.5 / tf.squeeze(self.gaussian_process.likelihood_variances)",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.reduce_sum(a_vector * derivatives_difference)",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.linalg.logdet(post_variance)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_266": {
                "input_tensor": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * tf.reduce_sum(self.x * tf.squeeze(a_vector))",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(states_difference * states_difference, 1)",
                            "Call"
                        ],
                        [
                            "risk_term * 0.5 / tf.squeeze(self.gaussian_process.likelihood_variances)",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.reduce_sum(a_vector * derivatives_difference)",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.linalg.logdet(post_variance)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_303": {
                "input_tensor": {
                    "value": "risk_term",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * tf.reduce_sum(self.x * tf.squeeze(a_vector))",
                            "BinOp"
                        ],
                        [
                            "tf.reduce_sum(states_difference * states_difference, 1)",
                            "Call"
                        ],
                        [
                            "risk_term * 0.5 / tf.squeeze(self.gaussian_process.likelihood_variances)",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.reduce_sum(a_vector * derivatives_difference)",
                            "BinOp"
                        ],
                        [
                            "0.5 * tf.linalg.logdet(post_variance)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "scalar_317": {
                "variable": {
                    "value": "loss_sum",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_sum",
                    "type": "Constant",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.risk",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_all_353": {
                "variable": {
                    "value": "self.merged_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reset_default_graph_463": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variable_scope_223": {
                "name_or_scope": {
                    "value": "risk_main",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_228": {
                "variable": {
                    "value": "self.log_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(self.initial_gamma)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.train_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "log_gamma",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_236": {
                "variable": {
                    "value": "self.log_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(self.initial_gamma) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "trainable": {
                    "value": "self.train_gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "log_gamma",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_242": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_252": {
                "input": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reduce_sum_253": {
                "input_tensor": {
                    "value": "self.x * tf.squeeze(a_vector)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "squeeze_264": {
                "input": {
                    "value": "self.gaussian_process.likelihood_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_289": {
                "input_tensor": {
                    "value": "a_vector * derivatives_difference",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "logdet_302": {
                "matrix": {
                    "value": "post_variance",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.posterior_derivative_variance + self.gamma * tf.expand_dims(tf.eye(self.n_points, dtype=tf.float64), 0)",
                            "BinOp"
                        ],
                        [
                            "self.posterior_derivative_variance + self.gamma * tf.expand_dims(tf.eye(self.n_points, dtype=tf.float64), 0)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "squeeze_372": {
                "input": {
                    "value": "mean_prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.gaussian_process.compute_posterior_mean(self.system)",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_285": {
                "input": {
                    "value": "tf.eye(self.n_points, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_300": {
                "input": {
                    "value": "tf.eye(self.n_points, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_376": {
                "value": {
                    "value": "self.state_lower_bounds",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_377": {
                "value": {
                    "value": "self.state_upper_bounds",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_232": {
                "x": {
                    "value": "self.log_gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_233": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_253": {
                "input": {
                    "value": "a_vector",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(self.gaussian_process.c_phi_matrices_noiseless, tf.expand_dims(self.x, -1), name='reg_risk_inv_kernel')",
                            "Call"
                        ],
                        [
                            "tf.linalg.solve(post_variance, derivatives_difference, name='deriv_risk_inv_A')",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_285": {
                "num_rows": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_300": {
                "num_rows": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_451": {
                "input": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_237": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "odin/utils/gaussian_processes.py": {
        "tensorflow": {
            "constant_38": {
                "variable": {
                    "value": "self.n_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "input_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_39": {
                "variable": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "n_points",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_40": {
                "variable": {
                    "value": "self.jitter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "solve_208": {
                "variable": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "tf.expand_dims(system, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_210": {
                "variable": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "self.cross_c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(self.c_phi_matrices, tf.expand_dims(system, -1))",
                            "Call"
                        ],
                        [
                            "tf.linalg.solve(self.c_phi_matrices, tf.expand_dims(system, -1))",
                            "Call"
                        ]
                    ]
                }
            },
            "solve_218": {
                "variable": {
                    "value": "a_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "self.cross_c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "solve_230": {
                "variable": {
                    "value": "v_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.c_phi_matrices_noiseless",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "tf.expand_dims(system, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_232": {
                "variable": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "self.diff_c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "v_matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(self.c_phi_matrices_noiseless, tf.expand_dims(system, -1))",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_241": {
                "variable": {
                    "value": "second_term",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "self.diff_c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.linalg.solve(self.c_phi_matrices_noiseless, self.c_phi_diff_matrices)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "logdet_256": {
                "variable": {
                    "value": "logdets_cov_matrices",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "solve_257": {
                "variable": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "matrix": {
                    "value": "self.c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "tf.expand_dims(system, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_259": {
                "variable": {
                    "value": "first_term",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "system * tf.squeeze(y_matrix)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_108": {
                "variable": {
                    "value": "self.likelihood_variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.likelihood_logvariances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_261": {
                "input_tensor": {
                    "value": "log_likelihood / tf.cast(self.n_points, tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "variable_scope_93": {
                "name_or_scope": {
                    "value": "gaussian_process",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_95": {
                "variable": {
                    "value": "self.likelihood_logvariance",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "variance_loglik",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_103": {
                "variable": {
                    "value": "self.likelihood_logvariances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.n_states, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "variances_loglik",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_209": {
                "input": {
                    "value": "system",
                    "type": "Name",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_221": {
                "a": {
                    "value": "self.cross_c_phi_matrices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "a_matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(self.c_phi_matrices, self.cross_c_phi_matrices)",
                            "Call"
                        ]
                    ]
                },
                "transpose_a": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_231": {
                "input": {
                    "value": "system",
                    "type": "Name",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "solve_243": {
                "matrix": {
                    "value": "self.c_phi_matrices_noiseless",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rhs": {
                    "value": "self.c_phi_diff_matrices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_258": {
                "input": {
                    "value": "system",
                    "type": "Name",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "expand_dims_139": {
                "input": {
                    "value": "tf.eye(self.n_points, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_150": {
                "input": {
                    "value": "tf.eye(self.n_points, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_246": {
                "input": {
                    "value": "tf.eye(self.n_points, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_259": {
                "input": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.linalg.solve(self.c_phi_matrices, tf.expand_dims(system, -1))",
                            "Call"
                        ],
                        [
                            "tf.linalg.solve(self.c_phi_matrices, tf.expand_dims(system, -1))",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_261": {
                "x": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_99": {
                "shape": {
                    "value": "[self.n_states, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_139": {
                "num_rows": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_150": {
                "num_rows": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_246": {
                "num_rows": {
                    "value": "self.n_points",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_104": {
                "shape": {
                    "value": "[self.n_states, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "odin/utils/kernels.py": {
        "tensorflow": {
            "constant_28": {
                "variable": {
                    "value": "self.dimensionality",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "input_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_83": {
                "variable": {
                    "value": "r_xx",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "r_xx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "xx * xx",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(r_xx, [-1, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_85": {
                "variable": {
                    "value": "r_yy",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "r_yy",
                    "type": "Name",
                    "possible_values": [
                        [
                            "yy * yy",
                            "BinOp"
                        ],
                        [
                            "tf.reshape(r_yy, [1, -1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_86": {
                "variable": {
                    "value": "r_xy",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.reshape(xx, [-1, 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "tf.reshape(yy, [1, -1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "expand_dims_201": {
                "variable": {
                    "value": "distances",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "xx - tf.transpose(yy)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_289": {
                "variable": {
                    "value": "distances",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "squared_distances",
                    "type": "Name",
                    "possible_values": [
                        [
                            "r_xx - 2.0 * r_xy + r_yy",
                            "BinOp"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ]
                    ]
                }
            },
            "constant_380": {
                "variable": {
                    "value": "self.alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_398": {
                "variable": {
                    "value": "cov_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "scaled_distances + 1.0",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "-self.alpha",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "expand_dims_513": {
                "variable": {
                    "value": "x_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.tile(xx, [1, xx.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_514": {
                "variable": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(tf.tile(yy, [1, yy.shape[0]]))",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "asin_516": {
                "variable": {
                    "value": "cov_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "(self.a + self.b * x_matrix * y_matrix) / tf.sqrt((self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_534": {
                "variable": {
                    "value": "x_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.tile(xx, [1, xx.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_535": {
                "variable": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(tf.tile(yy, [1, yy.shape[0]]))",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_537": {
                "variable": {
                    "value": "sqrt_term_num",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "(self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_542": {
                "variable": {
                    "value": "sqrt_term_den",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "1.0 - (self.a + self.b * x_matrix * y_matrix) ** 2 / ((self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_564": {
                "variable": {
                    "value": "x_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.tile(xx, [1, xx.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_565": {
                "variable": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(tf.tile(yy, [1, yy.shape[0]]))",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_567": {
                "variable": {
                    "value": "sqrt_term_num",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "(self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_572": {
                "variable": {
                    "value": "sqrt_term_den",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "1.0 - (self.a + self.b * x_matrix * y_matrix) ** 2 / ((self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_592": {
                "variable": {
                    "value": "x_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.tile(xx, [1, xx.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_593": {
                "variable": {
                    "value": "y_matrix",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(tf.tile(yy, [1, yy.shape[0]]))",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_596": {
                "variable": {
                    "value": "den_term1",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "(self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_598": {
                "variable": {
                    "value": "den_term2",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "(self.a * self.b * x_matrix ** 2 - 2.0 * self.a * self.b * x_matrix * y_matrix + self.a * self.b * y_matrix ** 2 + 2.0 * self.a + self.b * x_matrix ** 2 + self.b * y_matrix ** 2 + 1.0) / (self.a ** 2 + self.a * self.b * x_matrix ** 2 + self.a * self.b * y_matrix ** 2 + 2.0 * self.a + (self.b * x_matrix * y_matrix) ** 2 + self.b * x_matrix ** 2 + self.b * y_matrix ** 2 + 1.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_88": {
                "input": {
                    "value": "squared_distances",
                    "type": "Name",
                    "possible_values": [
                        [
                            "r_xx - 2.0 * r_xy + r_yy",
                            "BinOp"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_squared_distances(xx, yy)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_103": {
                "input": {
                    "value": "tf.abs(distances)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "constant_132": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "constant_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variable_scope_41": {
                "name_or_scope": {
                    "value": "gaussian_process_kernel",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_43": {
                "variable": {
                    "value": "self.log_lengthscale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_lengthscale",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_47": {
                "variable": {
                    "value": "self.log_variance",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_variance",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_58": {
                "variable": {
                    "value": "self.log_lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_lengthscales",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_62": {
                "variable": {
                    "value": "self.log_variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_variances",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_66": {
                "variable": {
                    "value": "self.variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_67": {
                "variable": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_86": {
                "tensor": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_102": {
                "tensor": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_103": {
                "x": {
                    "value": "distances",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(xx, [-1, 1]) - tf.reshape(yy, [1, -1])",
                            "BinOp"
                        ],
                        [
                            "tf.expand_dims(xx - tf.transpose(yy), 0)",
                            "Call"
                        ],
                        [
                            "self._compute_absolute_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_absolute_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "tf.sqrt(squared_distances)",
                            "Call"
                        ],
                        [
                            "self._compute_absolute_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_absolute_distances(xx, yy)",
                            "Call"
                        ],
                        [
                            "self._compute_absolute_distances(xx, yy)",
                            "Call"
                        ]
                    ]
                }
            },
            "exp_185": {
                "x": {
                    "value": "scaled_distances",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-squared_distances / tf.pow(self.lengthscales, 2.0) * 0.5",
                            "BinOp"
                        ],
                        [
                            "squared_distances / (2.0 * self.alpha * self.lengthscales ** 2)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "exp_249": {
                "x": {
                    "value": "-tf.cast(tf.sqrt(5.0), dtype=tf.float64) / self.lengthscales * distances",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "exp_271": {
                "x": {
                    "value": "-tf.cast(tf.sqrt(5.0), dtype=tf.float64) / self.lengthscales * distances",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_273": {
                "input": {
                    "value": "xx - tf.transpose(yy)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_295": {
                "x": {
                    "value": "-tf.cast(tf.sqrt(5.0), dtype=tf.float64) / self.lengthscales * distances",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "exp_321": {
                "x": {
                    "value": "-tf.cast(tf.sqrt(3.0), tf.float64) / self.lengthscales * distances",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_341": {
                "input": {
                    "value": "xx - tf.transpose(yy)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_361": {
                "x": {
                    "value": "-tf.cast(tf.sqrt(3.0), tf.float64) / self.lengthscales * distances",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_419": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_436": {
                "x": {
                    "value": "1.0 + squared_distances / (2.0 * self.alpha * tf.pow(self.lengthscales, 2))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "-self.alpha - 1.0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_441": {
                "x": {
                    "value": "1.0 + squared_distances / (2.0 * self.alpha * tf.pow(self.lengthscales, 2))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "-self.alpha - 2.0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "variable_scope_458": {
                "name_or_scope": {
                    "value": "gaussian_process_kernel",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_460": {
                "variable": {
                    "value": "self.log_a_single",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "sigmoid_a",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_463": {
                "variable": {
                    "value": "self.log_b_single",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "sigmoid_b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_466": {
                "variable": {
                    "value": "self.log_variance",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "log_variance",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_479": {
                "variable": {
                    "value": "self.log_a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "sigmoid_a",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_485": {
                "variable": {
                    "value": "self.log_b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "sigmoid_b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_491": {
                "variable": {
                    "value": "self.log_variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.log(1.0) * tf.ones([self.dimensionality, 1, 1], dtype=tf.float64)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "variances",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_495": {
                "variable": {
                    "value": "self.a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_a",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_496": {
                "variable": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_b",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_497": {
                "variable": {
                    "value": "self.variances",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.log_variances",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tile_513": {
                "input": {
                    "value": "xx",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, xx.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_514": {
                "a": {
                    "value": "tf.tile(yy, [1, yy.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tile_534": {
                "input": {
                    "value": "xx",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, xx.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_535": {
                "a": {
                    "value": "tf.tile(yy, [1, yy.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tile_564": {
                "input": {
                    "value": "xx",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, xx.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_565": {
                "a": {
                    "value": "tf.tile(yy, [1, yy.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tile_592": {
                "input": {
                    "value": "xx",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, xx.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_593": {
                "a": {
                    "value": "tf.tile(yy, [1, yy.shape[0]])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pow_184": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_201": {
                "a": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "pow_202": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_218": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "-2.0",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_339": {
                "x": {
                    "value": "-tf.cast(tf.sqrt(3.0), tf.float64) / self.lengthscales * distances",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_418": {
                "input": {
                    "value": "xx - tf.transpose(yy)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_435": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tile_514": {
                "input": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, yy.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sqrt_517": {
                "x": {
                    "value": "(self.a + self.b * x_matrix ** 2 + 1.0) * (self.a + self.b * y_matrix ** 2 + 1.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tile_535": {
                "input": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, yy.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_565": {
                "input": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, yy.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_593": {
                "input": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, yy.shape[0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "exp_52": {
                "x": {
                    "value": "self.log_lengthscale",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_53": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_55": {
                "x": {
                    "value": "self.log_variance",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_56": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_63": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_220": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "4.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_273": {
                "a": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "transpose_341": {
                "a": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "pow_414": {
                "x": {
                    "value": "1.0 + squared_distances / (2.0 * self.alpha * tf.pow(self.lengthscales, 2))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "-self.alpha - 1.0",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_440": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_470": {
                "x": {
                    "value": "self.log_a_single",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_471": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_473": {
                "x": {
                    "value": "self.log_b_single",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_474": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "exp_476": {
                "x": {
                    "value": "self.log_variance",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_477": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_59": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_269": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_358": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_418": {
                "a": {
                    "value": "yy",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "ones_480": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_486": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_492": {
                "shape": {
                    "value": "[self.dimensionality, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_249": {
                "x": {
                    "value": "tf.sqrt(5.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_268": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_271": {
                "x": {
                    "value": "tf.sqrt(5.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_295": {
                "x": {
                    "value": "tf.sqrt(5.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_319": {
                "x": {
                    "value": "tf.sqrt(3.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_321": {
                "x": {
                    "value": "tf.sqrt(3.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_359": {
                "x": {
                    "value": "tf.sqrt(3.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_360": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_361": {
                "x": {
                    "value": "tf.sqrt(3.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_437": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_442": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_244": {
                "x": {
                    "value": "tf.sqrt(5.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_249": {
                "x": {
                    "value": "5.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_271": {
                "x": {
                    "value": "5.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_291": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_294": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "4.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_295": {
                "x": {
                    "value": "5.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_319": {
                "x": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_321": {
                "x": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_339": {
                "x": {
                    "value": "tf.sqrt(3.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_359": {
                "x": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_361": {
                "x": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_244": {
                "x": {
                    "value": "5.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_266": {
                "x": {
                    "value": "tf.sqrt(5.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_292": {
                "x": {
                    "value": "tf.sqrt(5.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_293": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_339": {
                "x": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_416": {
                "x": {
                    "value": "self.lengthscales",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_266": {
                "x": {
                    "value": "5.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_292": {
                "x": {
                    "value": "5.0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "odin/utils/scipy_interface.py": {
        "tensorflow": {
            "set_verbosity_37": {
                "level": {
                    "value": "logging.DEBUG",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gradients_478": {
                "variable": {
                    "value": "grads",
                    "type": "Name",
                    "possible_values": []
                },
                "ys": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "xs": {
                    "value": "var_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "trainable_variables_102": {
                "variable": {
                    "value": "self._vars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "info_453": {
                "msg": {
                    "value": "'\\n'.join(message_lines)",
                    "type": "Call",
                    "possible_values": []
                },
                "*args": {
                    "value": "*message_args",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "placeholder_121": {
                "dtype": {
                    "value": "var.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_default_session_184": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_481": {
                "input": {
                    "value": "var",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._vars",
                            "Attribute"
                        ]
                    ]
                }
            },
            "reshape_124": {
                "tensor": {
                    "value": "placeholder",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "_get_shape_tuple(var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_273": {
                "tensor": {
                    "value": "tensors[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_276": {
                "values": {
                    "value": "flattened",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[array_ops.reshape(tensor, [-1]) for tensor in tensors]",
                            "ListComp"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Exists_287": {
                "filename": {
                    "value": "self.dir_name",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MakeDirs_288": {
                "dirname": {
                    "value": "self.dir_name",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Profiler_304": {
                "variable": {
                    "value": "profiler",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_275": {
                "tensor": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "as_bytes_306": {
                "bytes_or_text": {
                    "value": "'profile_%d' % eval_func.step",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "odin/utils/tensorflow_optimizer.py": {
        "tensorflow": {
            "get_default_session_145": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "odin/utils/trainable_models.py": {
        "tensorflow": {
            "constant_39": {
                "variable": {
                    "value": "self.n_params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self.theta.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_40": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.n_params, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Variable_61": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_88": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([4, 1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_108": {
                "variable": {
                    "value": "gradient_samples",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[grad1, grad2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_123": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([3, 1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_143": {
                "variable": {
                    "value": "gradient_samples",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[grad1, grad2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_158": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([6, 1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_184": {
                "variable": {
                    "value": "gradient_samples",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[grad1, grad2, grad3, grad4, grad5]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_199": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_205": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_230": {
                "variable": {
                    "value": "gradients",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "grad_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[grad1, grad2]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_244": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([3, 1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_263": {
                "variable": {
                    "value": "gradient_samples",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[grad1, grad2, grad3]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_277": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([7, 1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cos_323": {
                "variable": {
                    "value": "cphi",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "phi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x[6:7, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sin_323": {
                "variable": {
                    "value": "sphi",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "phi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x[6:7, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cos_324": {
                "variable": {
                    "value": "cthe",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "theta_sys",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x[7:8, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sin_324": {
                "variable": {
                    "value": "sthe",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "theta_sys",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x[7:8, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cos_325": {
                "variable": {
                    "value": "cpsi",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "psi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x[8:9, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sin_325": {
                "variable": {
                    "value": "spsi",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "psi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x[8:9, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Variable_391": {
                "variable": {
                    "value": "self.theta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.abs(tf.random_normal([10, 1], mean=0.0, stddev=1.0, dtype=tf.float64))",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "theta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_420": {
                "variable": {
                    "value": "gradient_samples",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[grad0, grad1, grad2, grad3, grad4, grad5, grad6, grad7, grad8]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "concat_359": {
                "values": {
                    "value": "grads",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[grad0, grad1, grad2, grad3, grad4, grad5, grad6, grad7, grad8, grad9, grad10, grad11]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "variable_scope_37": {
                "name_or_scope": {
                    "value": "risk_main",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_88": {
                "x": {
                    "value": "tf.random_normal([4, 1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_123": {
                "x": {
                    "value": "tf.random_normal([3, 1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_158": {
                "x": {
                    "value": "tf.random_normal([6, 1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_199": {
                "x": {
                    "value": "tf.random_normal([1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_244": {
                "x": {
                    "value": "tf.random_normal([3, 1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_277": {
                "x": {
                    "value": "tf.random_normal([7, 1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_391": {
                "x": {
                    "value": "tf.random_normal([10, 1], mean=0.0, stddev=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pow_139": {
                "x": {
                    "value": "x[0:1, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "3.0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}