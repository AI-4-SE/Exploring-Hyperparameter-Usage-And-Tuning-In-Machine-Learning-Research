{
    "mvn2vec-reg.py": {
        "torch": {
            "ModuleList_20": {
                "variable": {
                    "value": "self.node_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_21": {
                "variable": {
                    "value": "self.neigh_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "logsigmoid_50": {
                "variable": {
                    "value": "loss_positive",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.bmm(neigh_emb, node_emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_50": {
                "variable": {
                    "value": "loss_positive",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_50": {
                "variable": {
                    "value": "loss_positive",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "logsigmoid_68": {
                "variable": {
                    "value": "loss_negative",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.bmm(negative_context_emb, node_emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_68": {
                "variable": {
                    "value": "loss_negative",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_68": {
                "variable": {
                    "value": "loss_negative",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_68": {
                "variable": {
                    "value": "loss_negative",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_cache_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_23": {
                "num_embeddings": {
                    "value": "len_common_nodes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len_common_nodes",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "embedding_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embedding_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Embedding_24": {
                "num_embeddings": {
                    "value": "len_common_nodes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len_common_nodes",
                            "Method Argument"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "embedding_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embedding_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "dist_44": {
                "input": {
                    "value": "node_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.node_embeddings[i](Variable(nodesidx)).view(len(batch_indices), -1).unsqueeze(2)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "sumr1_inner / self.num_net",
                    "type": "BinOp",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dist_57": {
                "input": {
                    "value": "neigh_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.neigh_embeddings[i](Variable(neighsidx)).unsqueeze(2).view(len(batch_indices), -1, self.embedding_dim)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "sumr2_inner / self.num_net",
                    "type": "BinOp",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dist_74": {
                "input": {
                    "value": "neigh_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.neigh_embeddings[i](Variable(neighsidx)).unsqueeze(2).view(len(batch_indices), -1, self.embedding_dim)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "sumr2_inner_neg / self.num_net",
                    "type": "BinOp",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_51": {
                "input": {
                    "value": "neigh_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.neigh_embeddings[i](Variable(neighsidx)).unsqueeze(2).view(len(batch_indices), -1, self.embedding_dim)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "node_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.node_embeddings[i](Variable(nodesidx)).view(len(batch_indices), -1).unsqueeze(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_68": {
                "input": {
                    "value": "negative_context_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.neigh_embeddings[i](negative_context).view(len(batch_indices), -1, self.embedding_dim).neg()",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "node_emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.node_embeddings[i](Variable(nodesidx)).view(len(batch_indices), -1).unsqueeze(2)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}