{
    "Loo Boys/modules/soccer/prediction.py": {
        "sklearn": {},
        "torch": {
            "softmax_106": {
                "variable": {
                    "value": "softmax",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.qnodes(self.params, x=x_point, parallel=False)",
                            "Call"
                        ],
                        [
                            "self.predict_point(self.params, x_point=x_point, parallel=parallel)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_101": {
                "input": {
                    "value": "softmax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.nn.functional.softmax(results, dim=1)",
                            "Call"
                        ],
                        [
                            "softmax",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "where_107": {
                "condition": {
                    "value": "softmax == torch.max(softmax)",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "max_107": {
                "input": {
                    "value": "softmax",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.nn.functional.softmax(results, dim=1)",
                            "Call"
                        ],
                        [
                            "softmax",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "Qunova Computing/utils.py": {
        "sklearn": {
            "train_test_split_88": {
                "variable": {
                    "value": "(x_div_train, x_div_test, y_div_train, y_div_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "x_div",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_div",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_size",
                            "Method Argument"
                        ]
                    ]
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PCA_91": {
                "variable": {
                    "value": "pca",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "num_PCs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_PCs",
                            "Method Argument"
                        ]
                    ]
                },
                "random_state": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "Qunova Computing/QVC.py": {
        "torch": {
            "SummaryWriter_63": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "'runs/' + exp_name",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "SRRSA/Pyfiles/QNN.py": {
        "torch": {}
    }
}