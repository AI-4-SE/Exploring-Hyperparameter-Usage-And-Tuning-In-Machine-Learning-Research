{
    "src/command_line.py": {
        "tensorflow": {
            "Sum_76": {
                "variable": {
                    "value": "acc_reward",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "reward",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Mean_77": {
                "variable": {
                    "value": "actions_squared",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "actions",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Mean_78": {
                "variable": {
                    "value": "Q_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Q_loss",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Mean_79": {
                "variable": {
                    "value": "A_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "A_loss",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_102": {
                "input": {
                    "value": "prev_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "env.reset()",
                            "Call"
                        ],
                        [
                            "state",
                            "variable"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/common_definitions.py": {
        "tensorflow": {
            "glorot_normal_10": {
                "variable": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/model.py": {
        "tensorflow": {
            "random_normal_initializer_32": {
                "variable": {
                    "value": "last_init",
                    "type": "variable",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Input_34": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(num_states,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Model_42": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.layers.Input(shape=(num_states,), dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.layers.Dense(num_actions, activation='tanh', kernel_initializer=last_init)(out) * action_high",
                            "BinOp"
                        ],
                        [
                            "tf.keras.layers.Dense(1, kernel_initializer=last_init)(outs)",
                            "Call"
                        ]
                    ]
                }
            },
            "random_normal_initializer_58": {
                "variable": {
                    "value": "last_init",
                    "type": "variable",
                    "possible_values": []
                },
                "stddev": {
                    "value": "5e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Input_61": {
                "variable": {
                    "value": "state_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "num_states",
                    "type": "variable",
                    "possible_values": [
                        [
                            "24",
                            "Method Argument"
                        ],
                        [
                            "24",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_69": {
                "variable": {
                    "value": "action_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "num_actions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Model_84": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "[state_input, action_input]",
                    "type": "List",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.keras.layers.Dense(num_actions, activation='tanh', kernel_initializer=last_init)(out) * action_high",
                            "BinOp"
                        ],
                        [
                            "tf.keras.layers.Dense(1, kernel_initializer=last_init)(outs)",
                            "Call"
                        ]
                    ]
                }
            },
            "constant_109": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "GAMMA",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Adam_118": {
                "variable": {
                    "value": "self.critic_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "CRITIC_LR",
                    "type": "variable",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_119": {
                "variable": {
                    "value": "self.actor_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "ACTOR_LR",
                    "type": "variable",
                    "possible_values": []
                },
                "amsgrad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dense_35": {
                "units": {
                    "value": "600",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dense_37": {
                "units": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dense_62": {
                "units": {
                    "value": "600",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNormalization_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_65": {
                "units": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dense_70": {
                "units": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Add_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_78": {
                "units": {
                    "value": "150",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "KERNEL_INITIALIZER",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNormalization_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_81": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "last_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_normal_initializer(stddev=0.0005)",
                            "Call"
                        ],
                        [
                            "tf.random_normal_initializer(stddev=5e-05)",
                            "Call"
                        ]
                    ]
                }
            },
            "function_125": {
                "input_signature": {
                    "value": "[tf.TensorSpec(shape=(None, num_states), dtype=tf.float32), tf.TensorSpec(shape=(None, num_actions), dtype=tf.float32), tf.TensorSpec(shape=(None, 1), dtype=tf.float32), tf.TensorSpec(shape=(None, num_states), dtype=tf.float32), tf.TensorSpec(shape=(None, 1), dtype=tf.float32)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Dense_39": {
                "units": {
                    "value": "num_actions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "last_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.random_normal_initializer(stddev=0.0005)",
                            "Call"
                        ],
                        [
                            "tf.random_normal_initializer(stddev=5e-05)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_141": {
                "variable": {
                    "value": "critic_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.math.abs(y - self.critic_network([s, a]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "convert_to_tensor_210": {
                "value": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_211": {
                "value": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_212": {
                "value": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_213": {
                "value": {
                    "value": "sn",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_214": {
                "value": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_137": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "abs_141": {
                "x": {
                    "value": "y - self.critic_network([s, a])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_148": {
                "input_tensor": {
                    "value": "self.critic_network([s, self.actor_network(s)])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TensorSpec_127": {
                "shape": {
                    "value": "(None, num_states)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorSpec_128": {
                "shape": {
                    "value": "(None, num_actions)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorSpec_129": {
                "shape": {
                    "value": "(None, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorSpec_130": {
                "shape": {
                    "value": "(None, num_states)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorSpec_131": {
                "shape": {
                    "value": "(None, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/utils.py": {
        "tensorflow": {
            "create_file_writer_87": {
                "variable": {
                    "value": "self.train_summary_writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "train_log_dir",
                    "type": "variable",
                    "possible_values": [
                        [
                            "log_dir + current_time + '/train'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "scalar_94": {
                "name": {
                    "value": "reward",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "reward.result()",
                    "type": "Call",
                    "possible_values": []
                },
                "step": {
                    "value": "epoch",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "scalar_95": {
                "name": {
                    "value": "actions squared",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "actions_squared.result()",
                    "type": "Call",
                    "possible_values": []
                },
                "step": {
                    "value": "epoch",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "scalar_96": {
                "name": {
                    "value": "critic loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "Q_loss.result()",
                    "type": "Call",
                    "possible_values": []
                },
                "step": {
                    "value": "epoch",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "scalar_97": {
                "name": {
                    "value": "actor loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "A_loss.result()",
                    "type": "Call",
                    "possible_values": []
                },
                "step": {
                    "value": "epoch",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}