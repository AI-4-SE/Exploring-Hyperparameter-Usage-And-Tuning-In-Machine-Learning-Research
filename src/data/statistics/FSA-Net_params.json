{
    "training_and_testing/TYY_callbacks.py": {
        "sklearn": {},
        "tensorflow": {}
    },
    "lib/FSANET_model.py": {
        "tensorflow": {
            "moments_126": {
                "variable": {
                    "value": "(_, var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "axes": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_143": {
                "a": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "matmul_178": {
                "a": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "lib/SSRNET_model.py": {
        "tensorflow": {}
    },
    "lib/capsulelayers.py": {
        "tensorflow": {
            "reshape_88": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y, tf.concat([tf.shape(y), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "tf.concat([tf.shape(y), [1] * diff], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_107": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x, tf.concat([tf.shape(x), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y, tf.concat([tf.shape(y), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                },
                "adjoint_a": {
                    "value": "adj_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None if axes[0] == K.ndim(x) - 1 else True",
                            "IfExp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ]
                    ]
                },
                "adjoint_b": {
                    "value": "adj_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if axes[1] == K.ndim(y) - 1 else None",
                            "IfExp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ]
                    ]
                }
            },
            "squeeze_113": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(tf.multiply(x, y), axes[0])",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(tf.multiply(tf.transpose(x, [1, 0]), y), axes[1])",
                            "Call"
                        ],
                        [
                            "tf.matmul(x, y, adjoint_a=adj_x, adjoint_b=adj_y)",
                            "Call"
                        ],
                        [
                            "K.expand_dims(out, 1)",
                            "Call"
                        ],
                        [
                            "tf.squeeze(out, list(range(idx, idx + diff)))",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "list(range(idx, idx + diff))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_189": {
                "variable": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[K.shape(inputs_hat)[0], self.num_capsule, self.input_num_capsule]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_91": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x, tf.concat([tf.shape(x), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "tf.concat([tf.shape(x), [1] * diff], axis=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_96": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.multiply(x, y)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "axes[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "reduce_sum_98": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.multiply(tf.transpose(x, [1, 0]), y)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "axes[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "softmax_195": {
                "variable": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "b",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.zeros(shape=[K.shape(inputs_hat)[0], self.num_capsule, self.input_num_capsule])",
                            "Call"
                        ],
                        [
                            "b + batch_dot(outputs, inputs_hat, [2, 3])",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_88": {
                "values": {
                    "value": "[tf.shape(y), [1] * diff]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_91": {
                "values": {
                    "value": "[tf.shape(x), [1] * diff]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "multiply_96": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x, tf.concat([tf.shape(x), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y, tf.concat([tf.shape(y), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                }
            },
            "multiply_98": {
                "x": {
                    "value": "tf.transpose(x, [1, 0])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y, tf.concat([tf.shape(y), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_88": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(y, tf.concat([tf.shape(y), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_99": {
                "a": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x, tf.concat([tf.shape(x), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "shape_91": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(x, tf.concat([tf.shape(x), [1] * diff], axis=0))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lib/layers.py": {
        "tensorflow": {
            "meshgrid_8": {
                "*args": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.cast(K.flatten(sampled_grids[:, 0:1, :]), dtype='float32')",
                            "Call"
                        ],
                        [
                            "0.5 * (x + 1.0) * K.cast(height, dtype='float32')",
                            "BinOp"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.cast(K.flatten(sampled_grids[:, 1:2, :]), dtype='float32')",
                            "Call"
                        ],
                        [
                            "0.5 * (y + 1.0) * K.cast(width, dtype='float32')",
                            "BinOp"
                        ]
                    ]
                }
            },
            "linspace_11": {
                "start": {
                    "value": "start",
                    "type": "variable",
                    "possible_values": []
                },
                "stop": {
                    "value": "stop",
                    "type": "variable",
                    "possible_values": []
                },
                "num": {
                    "value": "num",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "lib/loupe_keras.py": {
        "tensorflow": {
            "sigmoid_58": {
                "variable": {
                    "value": "gates",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "gates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.dot(inputs, self.gating_weights)",
                            "Call"
                        ],
                        [
                            "gates + self.gating_biases",
                            "BinOp"
                        ],
                        [
                            "tf.sigmoid(gates)",
                            "Call"
                        ]
                    ]
                }
            },
            "multiply_60": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "gates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.dot(inputs, self.gating_weights)",
                            "Call"
                        ],
                        [
                            "gates + self.gating_biases",
                            "BinOp"
                        ],
                        [
                            "tf.sigmoid(gates)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_129": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_131": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.cluster_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_134": {
                "variable": {
                    "value": "a_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "multiply_136": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "a_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "self.cluster_weights2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_138": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_140": {
                "variable": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_143": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_144": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "subtract_145": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(a_sum, self.cluster_weights2)",
                            "Call"
                        ],
                        [
                            "tf.multiply(a_sum, self.cluster_weights2)",
                            "Call"
                        ]
                    ]
                }
            },
            "l2_normalize_146": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_147": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.cluster_size * self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_normalize_148": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_216": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_218": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.cluster_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_221": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_223": {
                "variable": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_226": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_227": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_normalize_228": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_229": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.cluster_size * self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_normalize_230": {
                "variable": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vlad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(vlad, a)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ],
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(vlad, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(vlad, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(vlad, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(vlad, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_295": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_297": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.cluster_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_300": {
                "variable": {
                    "value": "bow",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "l2_normalize_301": {
                "variable": {
                    "value": "bow",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "bow",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(activation, 1)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(bow, 1)",
                            "Call"
                        ],
                        [
                            "K.dot(bow, self.hidden1_weights)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_371": {
                "variable": {
                    "value": "covar_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.covar_weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_372": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "[1e-06]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "add_373": {
                "variable": {
                    "value": "covar_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "covar_weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(self.covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.add(covar_weights, eps)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.constant([1e-06])",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_379": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_381": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.cluster_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_384": {
                "variable": {
                    "value": "a_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "multiply_386": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "a_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "self.cluster_weights2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_388": {
                "variable": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_390": {
                "variable": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_samples, self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "matmul_393": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_394": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "multiply_397": {
                "variable": {
                    "value": "a2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "a_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.square(self.cluster_weights2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "multiply_399": {
                "variable": {
                    "value": "b2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "self.cluster_weights2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_400": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(inputs, gates)",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "activation + self.cluster_biases",
                            "BinOp"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "K.dot(reshaped_input, self.cluster_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.softmax(activation)",
                            "Call"
                        ],
                        [
                            "tf.reshape(activation, [-1, self.max_samples, self.cluster_size])",
                            "Call"
                        ],
                        [
                            "tf.transpose(activation, perm=[0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.square(reshaped_input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "transpose_402": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "add_n_403": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[a2, fv2, tf.scalar_mul(-2, b2)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "divide_405": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.square(covar_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "subtract_406": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "a_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(activation, -2, keep_dims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_408": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.cluster_size * self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_normalize_410": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_411": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.cluster_size * self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_normalize_412": {
                "variable": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, tf.square(reshaped_input))",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv2, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.add_n([a2, fv2, tf.scalar_mul(-2, b2)])",
                            "Call"
                        ],
                        [
                            "tf.divide(fv2, tf.square(covar_weights))",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv2, a_sum)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv2, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv2, 1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "subtract_414": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(a_sum, self.cluster_weights2)",
                            "Call"
                        ],
                        [
                            "tf.multiply(a_sum, self.cluster_weights2)",
                            "Call"
                        ]
                    ]
                }
            },
            "divide_415": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "covar_weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(self.covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.add(covar_weights, eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "l2_normalize_417": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_418": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.cluster_size * self.feature_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_normalize_419": {
                "variable": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fv1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(activation, reshaped_input)",
                            "Call"
                        ],
                        [
                            "tf.transpose(fv1, perm=[0, 2, 1])",
                            "Call"
                        ],
                        [
                            "tf.subtract(fv1, a)",
                            "Call"
                        ],
                        [
                            "tf.divide(fv1, covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ],
                        [
                            "tf.reshape(fv1, [-1, self.cluster_size * self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.nn.l2_normalize(fv1, 1)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_421": {
                "variable": {
                    "value": "fv",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[fv1, fv2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_397": {
                "x": {
                    "value": "self.cluster_weights2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_400": {
                "x": {
                    "value": "reshaped_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ],
                        [
                            "tf.reshape(reshaped_input, [-1, self.max_samples, self.feature_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "square_405": {
                "x": {
                    "value": "covar_weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(self.covar_weights)",
                            "Call"
                        ],
                        [
                            "tf.add(covar_weights, eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "random_normal_initializer_35": {
                "stddev": {
                    "value": "1 / math.sqrt(input_shape[-1])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_39": {
                "stddev": {
                    "value": "1 / math.sqrt(input_shape[-1])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_83": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_87": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_91": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_95": {
                "stddev": {
                    "value": "1 / math.sqrt(self.cluster_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_174": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_178": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_182": {
                "stddev": {
                    "value": "1 / math.sqrt(self.cluster_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_254": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_258": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_262": {
                "stddev": {
                    "value": "1 / math.sqrt(self.cluster_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_325": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_329": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_333": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_337": {
                "stddev": {
                    "value": "1 / math.sqrt(self.feature_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_normal_initializer_341": {
                "stddev": {
                    "value": "1 / math.sqrt(self.cluster_size)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "scalar_mul_403": {
                "scalar": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "x": {
                    "value": "b2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.multiply(fv1, self.cluster_weights2)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lib/old_version/FSANET_model.py": {
        "tensorflow": {
            "moments_1058": {
                "variable": {
                    "value": "(mean, var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "moments_1886": {
                "variable": {
                    "value": "(mean, var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "moments_2708": {
                "variable": {
                    "value": "(mean, var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "moments_3532": {
                "variable": {
                    "value": "(mean, var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "moments_4355": {
                "variable": {
                    "value": "(mean, var)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3))(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "Conv2D(32, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=self._channel_axis)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(16, (3, 3), padding='same')(img_inputs)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x_layer1)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(32, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x_layer2)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(64, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x_layer3)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ],
                        [
                            "Activation('relu')(x)",
                            "Call"
                        ],
                        [
                            "SeparableConv2D(128, (3, 3), padding='same')(x)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=-1)(x)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_791": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_792": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_793": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1083": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1084": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1085": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1622": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1623": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1624": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1911": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1912": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1913": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2442": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2443": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2444": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2733": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2734": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2735": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3269": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3270": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3271": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3557": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3558": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3559": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4088": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4089": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4090": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4380": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4381": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4382": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_810": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_811": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_812": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1102": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1103": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1104": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1641": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1642": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1643": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1930": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1931": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_1932": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2461": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2462": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2463": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2752": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2753": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_2754": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3288": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3289": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3290": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3576": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3577": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_3578": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4107": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4108": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4109": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4399": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4400": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_4401": {
                "a": {
                    "value": "x[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "b": {
                    "value": "x[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "training_and_testing/TYY_generators.py": {
        "tensorflow": {
            "random_zoom_62": {
                "variable": {
                    "value": "images[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "x": {
                    "value": "images[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "zoom_range": {
                    "value": "[0.8, 1.2]",
                    "type": "List",
                    "possible_values": []
                },
                "row_axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "col_axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "channel_axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "training_and_testing/keras_to_tf.py": {
        "tensorflow": {
            "convert_variables_to_constants_27": {
                "variable": {
                    "value": "frozen_graph",
                    "type": "variable",
                    "possible_values": []
                },
                "sess": {
                    "value": "session",
                    "type": "variable",
                    "possible_values": []
                },
                "input_graph_def": {
                    "value": "input_graph_def",
                    "type": "variable",
                    "possible_values": [
                        [
                            "graph.as_graph_def()",
                            "Call"
                        ]
                    ]
                },
                "output_node_names": {
                    "value": "output_names",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_names or []",
                            "BoolOp"
                        ],
                        [
                            "output_names + [v.op.name for v in tf.global_variables()]",
                            "BinOp"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "variable_names_whitelist": {
                    "value": "freeze_var_names",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(set((v.op.name for v in tf.global_variables())).difference(keep_var_names or []))",
                            "Call"
                        ]
                    ]
                }
            },
            "write_graph_173": {
                "graph_or_graph_def": {
                    "value": "frozen_graph",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_variables_to_constants(session, input_graph_def, output_names, freeze_var_names)",
                            "Call"
                        ],
                        [
                            "freeze_session(sess, output_names=[out.op.name for out in model.outputs])",
                            "Call"
                        ]
                    ]
                },
                "logdir": {
                    "value": "tf_dir_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.output_dir_path, 'converted-models', 'tf')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "f'{model_name}.pb'",
                    "type": "JoinedStr",
                    "possible_values": []
                },
                "as_text": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "global_variables_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}