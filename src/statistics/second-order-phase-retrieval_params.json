{
    "sopt/benchmarks/ops/tensorflow/flops_registry_custom.py": {
        "tensorflow": {
            "tensor_shape_from_node_def_name_294": {
                "variable": {
                    "value": "in_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "graph": {
                    "value": "graph",
                    "type": "Name",
                    "possible_values": []
                },
                "input_name": {
                    "value": "node.input[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_shape_from_node_def_name_316": {
                "variable": {
                    "value": "in_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "graph": {
                    "value": "graph",
                    "type": "Name",
                    "possible_values": []
                },
                "input_name": {
                    "value": "node.input[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_shape_from_node_def_name_333": {
                "variable": {
                    "value": "in_shape",
                    "type": "Name",
                    "possible_values": []
                },
                "graph": {
                    "value": "graph",
                    "type": "Name",
                    "possible_values": []
                },
                "input_name": {
                    "value": "node.input[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/benchmarks/ops/tensorflow/graph_utils_custom.py": {
        "tensorflow": {}
    },
    "sopt/examples/deprecated/tensorflow/bragg_ptychography/functions_simple.py": {
        "tensorflow": {
            "range_131": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "abs_144": {
                "variable": {
                    "value": "absval",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "t",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clip_by_value_145": {
                "variable": {
                    "value": "abs_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "absval",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.abs(t)",
                            "Call"
                        ]
                    ]
                },
                "clip_value_min": {
                    "value": "min_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cast_146": {
                "variable": {
                    "value": "multiplier",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "abs_clipped / (absval + 1e-30)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "complex64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_154": {
                "variable": {
                    "value": "(top, bottom)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat([bottom, top], indexes)",
                            "Call"
                        ],
                        [
                            "tf.concat([right, left], indexes - 1)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(tensor.get_shape()) - 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "concat_155": {
                "variable": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[bottom, top]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(tensor.get_shape()) - 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "split_156": {
                "variable": {
                    "value": "(left, right)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat([bottom, top], indexes)",
                            "Call"
                        ],
                        [
                            "tf.concat([right, left], indexes - 1)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_157": {
                "variable": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[right, left]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_132": {
                "buffer_size": {
                    "value": "ndiffs",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/examples/deprecated/tensorflow/far_field_ptychography/L4.py": {
        "tensorflow": {
            "add_n_25": {
                "inputs": {
                    "value": "[tf.reduce_sum(t1 * t2) for (t1, t2) in zip(list_of_tensors1, list_of_tensors2)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_44": {
                "variable": {
                    "value": "self.EMAgrad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_scale_grad",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_45": {
                "variable": {
                    "value": "self.EMAvar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_scale_var",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_67": {
                "variable": {
                    "value": "self.EMAgrad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_momentum",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_131": {
                "variable": {
                    "value": "ml_newval",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(global_step, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : self.init_factor * self.loss",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.minimum(self.min_loss, self.loss)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "get_or_create_global_step_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_32": {
                "x": {
                    "value": "tf.cast(global_step, tf.float32) * tf.log(decay)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_103": {
                "variable": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "min_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.constant_initializer(0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_or_create_global_step_125": {
                "variable": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_151": {
                "variable": {
                    "value": "var_list",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_25": {
                "input_tensor": {
                    "value": "t1 * t2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_49": {
                "x": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "control_dependencies_52": {
                "control_inputs": {
                    "value": "[shadow_op_gr, shadow_op_var]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_71": {
                "control_inputs": {
                    "value": "[shadow_op_gr]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "variable_scope_102": {
                "name_or_scope": {
                    "value": "L4Optimizer",
                    "type": "Constant",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_131": {
                "x": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 + tf.train.get_or_create_global_step()",
                            "BinOp"
                        ],
                        [
                            "tf.train.get_or_create_global_step()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_135": {
                "control_inputs": {
                    "value": "[ml_update]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "scalar_142": {
                "name": {
                    "value": "effective_learning_rate",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "l_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fraction * (self.loss - min_loss_to_use) / (n_inner_product(directions, derivatives) + self.epsilon)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "scalar_143": {
                "name": {
                    "value": "min_loss_estimate",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_32": {
                "x": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 + tf.train.get_or_create_global_step()",
                            "BinOp"
                        ],
                        [
                            "tf.train.get_or_create_global_step()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_32": {
                "x": {
                    "value": "decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - 1.0 / time_step",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_74": {
                "input": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "minimum_132": {
                "x": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_146": {
                "control_inputs": {
                    "value": "[ml_update2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_initializer_104": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_58": {
                "x": {
                    "value": "var",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/examples/deprecated/tensorflow/far_field_ptychography/tfPtycho.py": {
        "tensorflow": {
            "Graph_89": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "range_116": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_125": {
                "variable": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "batch_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_132": {
                "variable": {
                    "value": "self._batch_train_mods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.gather(self._train_diff_mods_shifted, self._batch_indices)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_134": {
                "variable": {
                    "value": "self._batch_train_obj_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_138": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._obj_npix, self._ptsim._obj_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_139": {
                "variable": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "obj_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "obj_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pad_142": {
                "variable": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(obj_reshaped[0], obj_reshaped[1])",
                            "Call"
                        ]
                    ]
                },
                "paddings": {
                    "value": "[[pad, pad], [pad, pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "self._ptsim._obj_padding_const",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_148": {
                "variable": {
                    "value": "probe_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "probe_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._probe_npix, self._ptsim._probe_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_149": {
                "variable": {
                    "value": "probe_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "probe_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "probe_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "gather_161": {
                "variable": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "tf.reshape(obj_padded, [-1])",
                    "type": "Call",
                    "possible_values": []
                },
                "indices": {
                    "value": "batch_obj_view_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reshape_164": {
                "variable": {
                    "value": "batch_guess_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.abs(batch_farfield_waves)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ConfigProto_235": {
                "variable": {
                    "value": "config",
                    "type": "Name",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "log_device_placement": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_237": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=True, log_device_placement=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "AdamOptimizer_356": {
                "variable": {
                    "value": "self._optparams.obj_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_obj",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_92": {
                "variable": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "obj_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._obj_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "constraint": {
                    "value": "self._getObjConstraint",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_95": {
                "variable": {
                    "value": "self._tf_probe",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "probe_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._probe_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_99": {
                "variable": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "train_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_102": {
                "variable": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_105": {
                "variable": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "train_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_107": {
                "variable": {
                    "value": "self._validation_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_177": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(batch_predictions - batch_diff_mods) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_215": {
                "variable": {
                    "value": "validation_diff_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_223": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_norm_224": {
                "variable": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_tensor_flat, [2, self._ptsim._obj_npix, self._ptsim._obj_npix])",
                            "Call"
                        ],
                        [
                            "tf.reshape(obj_flat, [2, -1])",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_225": {
                "variable": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_norm(obj_reshaped, max_abs, axes=[0])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "AdamOptimizer_361": {
                "variable": {
                    "value": "self._optparams.probe_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_probe",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_91": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_117": {
                "buffer_size": {
                    "value": "self._train_ndiffs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_132": {
                "params": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_161": {
                "tensor": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "fft2d_163": {
                "input": {
                    "value": "batch_exit_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_obj_views * probe_cmplx",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_164": {
                "x": {
                    "value": "batch_farfield_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.fft2d(batch_exit_waves) / self._ptsim._probe_npix",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_181": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_206": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_211": {
                "name": {
                    "value": "validation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_222": {
                "name": {
                    "value": "obj_clip",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_238": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "where_186": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_187": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_205": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_185": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_181": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_187": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/examples/deprecated/tensorflow/far_field_ptychography/tfPtycho_joint_optimization.py": {
        "tensorflow": {
            "Graph_83": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "range_113": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_122": {
                "variable": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "batch_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_129": {
                "variable": {
                    "value": "self._batch_train_mods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.gather(self._train_diff_mods_shifted, self._batch_indices)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_131": {
                "variable": {
                    "value": "self._batch_train_obj_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_135": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._obj_npix, self._ptsim._obj_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_136": {
                "variable": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "obj_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "obj_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pad_139": {
                "variable": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(obj_reshaped[0], obj_reshaped[1])",
                            "Call"
                        ]
                    ]
                },
                "paddings": {
                    "value": "[[pad, pad], [pad, pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "self._ptsim._obj_padding_const",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_145": {
                "variable": {
                    "value": "probe_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "probe_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._probe_npix, self._ptsim._probe_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_146": {
                "variable": {
                    "value": "probe_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "probe_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "probe_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "gather_159": {
                "variable": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "tf.reshape(obj_padded, [-1])",
                    "type": "Call",
                    "possible_values": []
                },
                "indices": {
                    "value": "batch_obj_view_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reshape_162": {
                "variable": {
                    "value": "batch_guess_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.abs(batch_farfield_waves)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Session_235": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdamOptimizer_354": {
                "variable": {
                    "value": "self._optparams.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_86": {
                "variable": {
                    "value": "self._tf_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "vars",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "np.concatenate([self._obj_guess_flat, self._probe_guess_flat])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "constant_94": {
                "variable": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "train_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_97": {
                "variable": {
                    "value": "self._train_diff_max",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_98": {
                "variable": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_101": {
                "variable": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "train_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_103": {
                "variable": {
                    "value": "self._validation_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_210": {
                "variable": {
                    "value": "validation_diff_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_218": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_norm_219": {
                "variable": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_tensor_flat, [2, self._ptsim._obj_npix, self._ptsim._obj_npix])",
                            "Call"
                        ],
                        [
                            "tf.reshape(self._tf_obj, [2, -1])",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_220": {
                "variable": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_norm(obj_reshaped, max_abs, axes=[0])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_221": {
                "variable": {
                    "value": "var_vals",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "(obj_clipped_reshaped, self._tf_probe)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "assign_222": {
                "variable": {
                    "value": "clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self._tf_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "var_vals",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat((obj_clipped_reshaped, self._tf_probe), axis=0)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "clip_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_85": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_114": {
                "buffer_size": {
                    "value": "self._train_ndiffs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_129": {
                "params": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_159": {
                "tensor": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "fft2d_161": {
                "input": {
                    "value": "batch_exit_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_obj_views * probe_cmplx",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_162": {
                "x": {
                    "value": "batch_farfield_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.fft2d(batch_exit_waves) / self._ptsim._probe_npix",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_180": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_202": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_207": {
                "name": {
                    "value": "validation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_217": {
                "name": {
                    "value": "obj_clip",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_236": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_176": {
                "input_tensor": {
                    "value": "(batch_predictions - batch_diff_mods) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_185": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_186": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_201": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_184": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_180": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_186": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/examples/deprecated/tensorflow/near_field_ptychography/tfPtycho.py": {
        "tensorflow": {
            "Graph_87": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "range_120": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_128": {
                "variable": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "batch_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_135": {
                "variable": {
                    "value": "self._batch_train_mods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.gather(self._train_diff_mods_shifted, self._batch_indices)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_136": {
                "variable": {
                    "value": "self._batch_train_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._train_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_156": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._obj_var_npix, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_157": {
                "variable": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "obj_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "obj_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pad_160": {
                "variable": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(obj_reshaped[0], obj_reshaped[1])",
                            "Call"
                        ]
                    ]
                },
                "paddings": {
                    "value": "[[pad, pad], [pad, pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "self._ptsim._obj_params.padding_const",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_166": {
                "variable": {
                    "value": "probe_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "probe_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._probe_npix, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_167": {
                "variable": {
                    "value": "probe_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "probe_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "probe_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "map_fn_191": {
                "variable": {
                    "value": "batch_obj_views_real",
                    "type": "Name",
                    "possible_values": []
                },
                "fn": {
                    "value": "gen_view_fn_real",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda scatter_indices: tf.scatter_nd(indices=scatter_indices[:, :, None], updates=tf.real(obj_padded) - 1.0, shape=[self._probe_npix ** 2])",
                            "Lambda"
                        ]
                    ]
                },
                "elems": {
                    "value": "batch_scatter_indices",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "map_fn_192": {
                "variable": {
                    "value": "batch_obj_views_imag",
                    "type": "Name",
                    "possible_values": []
                },
                "fn": {
                    "value": "gen_view_fn_imag",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda scatter_indices: tf.scatter_nd(indices=scatter_indices[:, :, None], updates=tf.imag(obj_padded), shape=[self._probe_npix ** 2])",
                            "Lambda"
                        ]
                    ]
                },
                "elems": {
                    "value": "batch_scatter_indices",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "complex_193": {
                "variable": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "batch_obj_views_real",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.map_fn(gen_view_fn_real, batch_scatter_indices, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "batch_obj_views_imag",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.map_fn(gen_view_fn_imag, batch_scatter_indices, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_222": {
                "variable": {
                    "value": "batch_guess_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.abs(batch_out_wavefronts)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_254": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_norm_255": {
                "variable": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_tensor_flat, [2, self._obj_var_npix, -1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(self._tf_obj, [2, -1])",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_256": {
                "variable": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_norm(obj_reshaped, max_abs, axes=[0])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "assign_257": {
                "variable": {
                    "value": "clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_clipped, [-1])",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "clip_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_267": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdamOptimizer_385": {
                "variable": {
                    "value": "self._optparams.obj_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_obj",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_90": {
                "variable": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "obj_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._obj_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_92": {
                "variable": {
                    "value": "self._tf_probe",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "probe_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._probe_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_97": {
                "variable": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_mods[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "train_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_99": {
                "variable": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_mods[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_102": {
                "variable": {
                    "value": "self._tf_prop_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._prop_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "complex64",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "propagation_kernel",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_105": {
                "variable": {
                    "value": "self._train_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._scatter_indices[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "train_scatter_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_107": {
                "variable": {
                    "value": "self._validation_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._scatter_indices[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_scatter_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_241": {
                "variable": {
                    "value": "validation_diff_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "AdamOptimizer_390": {
                "variable": {
                    "value": "self._optparams.probe_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_probe",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_89": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_121": {
                "buffer_size": {
                    "value": "self._train_ndiffs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_135": {
                "params": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_180": {
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "scatter_nd_184": {
                "indices": {
                    "value": "scatter_indices[:, :, None]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "updates": {
                    "value": "tf.real(obj_padded) - 1.0",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._probe_npix ** 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "scatter_nd_187": {
                "indices": {
                    "value": "scatter_indices[:, :, None]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "updates": {
                    "value": "tf.imag(obj_padded)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._probe_npix ** 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_194": {
                "tensor": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(batch_obj_views_real, batch_obj_views_imag)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_obj_views, [-1, self._probe_npix, self._probe_npix]) + 1.0",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self._probe_npix, self._probe_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ifft2d_220": {
                "input": {
                    "value": "tf.fft2d(batch_exit_waves) / self._probe_npix * self._tf_prop_kernel",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_222": {
                "x": {
                    "value": "batch_out_wavefronts",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ifft2d(tf.fft2d(batch_exit_waves) / self._probe_npix * self._tf_prop_kernel) * self._probe_npix",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_237": {
                "name": {
                    "value": "validation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_249": {
                "input_tensor": {
                    "value": "(batch_predictions - batch_diff_mods) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "global_variables_initializer_268": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "imag_188": {
                "input": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_params.padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                }
            },
            "real_185": {
                "input": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_params.padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                }
            },
            "fft2d_220": {
                "input": {
                    "value": "batch_exit_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_obj_views * probe_cmplx",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/examples/tensorflow/bragg_ptychography/functions_simple.py": {
        "tensorflow": {
            "range_131": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "abs_144": {
                "variable": {
                    "value": "absval",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "t",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "clip_by_value_145": {
                "variable": {
                    "value": "abs_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "absval",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.abs(t)",
                            "Call"
                        ]
                    ]
                },
                "clip_value_min": {
                    "value": "min_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cast_146": {
                "variable": {
                    "value": "multiplier",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "abs_clipped / (absval + 1e-30)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "complex64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_154": {
                "variable": {
                    "value": "(top, bottom)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat([bottom, top], indexes)",
                            "Call"
                        ],
                        [
                            "tf.concat([right, left], indexes - 1)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(tensor.get_shape()) - 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "concat_155": {
                "variable": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[bottom, top]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(tensor.get_shape()) - 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "split_156": {
                "variable": {
                    "value": "(left, right)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat([bottom, top], indexes)",
                            "Call"
                        ],
                        [
                            "tf.concat([right, left], indexes - 1)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_157": {
                "variable": {
                    "value": "tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[right, left]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "indexes - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_132": {
                "buffer_size": {
                    "value": "ndiffs",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/examples/tensorflow/far_field_ptychography/L4.py": {
        "tensorflow": {
            "add_n_25": {
                "inputs": {
                    "value": "[tf.reduce_sum(t1 * t2) for (t1, t2) in zip(list_of_tensors1, list_of_tensors2)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_44": {
                "variable": {
                    "value": "self.EMAgrad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_scale_grad",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_45": {
                "variable": {
                    "value": "self.EMAvar",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_scale_var",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ExponentialMovingAverage_67": {
                "variable": {
                    "value": "self.EMAgrad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "decay": {
                    "value": "1.0 - 1.0 / self.time_momentum",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_131": {
                "variable": {
                    "value": "ml_newval",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(global_step, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : self.init_factor * self.loss",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.minimum(self.min_loss, self.loss)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "get_or_create_global_step_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "exp_32": {
                "x": {
                    "value": "tf.cast(global_step, tf.float32) * tf.log(decay)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_103": {
                "variable": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "min_loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.constant_initializer(0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_or_create_global_step_125": {
                "variable": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_151": {
                "variable": {
                    "value": "var_list",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_25": {
                "input_tensor": {
                    "value": "t1 * t2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_49": {
                "x": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "control_dependencies_52": {
                "control_inputs": {
                    "value": "[shadow_op_gr, shadow_op_var]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_71": {
                "control_inputs": {
                    "value": "[shadow_op_gr]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "variable_scope_102": {
                "name_or_scope": {
                    "value": "L4Optimizer",
                    "type": "Constant",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_131": {
                "x": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 + tf.train.get_or_create_global_step()",
                            "BinOp"
                        ],
                        [
                            "tf.train.get_or_create_global_step()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_135": {
                "control_inputs": {
                    "value": "[ml_update]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "scalar_142": {
                "name": {
                    "value": "effective_learning_rate",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "l_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fraction * (self.loss - min_loss_to_use) / (n_inner_product(directions, derivatives) + self.epsilon)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "scalar_143": {
                "name": {
                    "value": "min_loss_estimate",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_32": {
                "x": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 + tf.train.get_or_create_global_step()",
                            "BinOp"
                        ],
                        [
                            "tf.train.get_or_create_global_step()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_32": {
                "x": {
                    "value": "decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1.0 - 1.0 / time_step",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_74": {
                "input": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "minimum_132": {
                "x": {
                    "value": "self.min_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_146": {
                "control_inputs": {
                    "value": "[ml_update2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "constant_initializer_104": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_58": {
                "x": {
                    "value": "var",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/examples/tensorflow/far_field_ptychography/tfPtycho.py": {
        "tensorflow": {
            "Graph_89": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "range_116": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_125": {
                "variable": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "batch_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_132": {
                "variable": {
                    "value": "self._batch_train_mods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.gather(self._train_diff_mods_shifted, self._batch_indices)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_134": {
                "variable": {
                    "value": "self._batch_train_obj_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_138": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._obj_npix, self._ptsim._obj_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_139": {
                "variable": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "obj_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "obj_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pad_142": {
                "variable": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(obj_reshaped[0], obj_reshaped[1])",
                            "Call"
                        ]
                    ]
                },
                "paddings": {
                    "value": "[[pad, pad], [pad, pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "self._ptsim._obj_padding_const",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_148": {
                "variable": {
                    "value": "probe_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "probe_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._probe_npix, self._ptsim._probe_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_149": {
                "variable": {
                    "value": "probe_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "probe_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "probe_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "gather_161": {
                "variable": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "tf.reshape(obj_padded, [-1])",
                    "type": "Call",
                    "possible_values": []
                },
                "indices": {
                    "value": "batch_obj_view_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reshape_164": {
                "variable": {
                    "value": "batch_guess_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.abs(batch_farfield_waves)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ConfigProto_235": {
                "variable": {
                    "value": "config",
                    "type": "Name",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "log_device_placement": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_237": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=True, log_device_placement=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "AdamOptimizer_356": {
                "variable": {
                    "value": "self._optparams.obj_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_obj",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_92": {
                "variable": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "obj_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._obj_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "constraint": {
                    "value": "self._getObjConstraint",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_95": {
                "variable": {
                    "value": "self._tf_probe",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "probe_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._probe_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_99": {
                "variable": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "train_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_102": {
                "variable": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_105": {
                "variable": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "train_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_107": {
                "variable": {
                    "value": "self._validation_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_177": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(batch_predictions - batch_diff_mods) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_215": {
                "variable": {
                    "value": "validation_diff_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_223": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_norm_224": {
                "variable": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_tensor_flat, [2, self._ptsim._obj_npix, self._ptsim._obj_npix])",
                            "Call"
                        ],
                        [
                            "tf.reshape(obj_flat, [2, -1])",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_225": {
                "variable": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_norm(obj_reshaped, max_abs, axes=[0])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "AdamOptimizer_361": {
                "variable": {
                    "value": "self._optparams.probe_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_probe",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_91": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_117": {
                "buffer_size": {
                    "value": "self._train_ndiffs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_132": {
                "params": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_161": {
                "tensor": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "fft2d_163": {
                "input": {
                    "value": "batch_exit_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_obj_views * probe_cmplx",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_164": {
                "x": {
                    "value": "batch_farfield_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.fft2d(batch_exit_waves) / self._ptsim._probe_npix",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_181": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_206": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_211": {
                "name": {
                    "value": "validation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_222": {
                "name": {
                    "value": "obj_clip",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_238": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "where_186": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_187": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_205": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_185": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_181": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_187": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/examples/tensorflow/far_field_ptychography/tfPtycho_joint_optimization.py": {
        "tensorflow": {
            "Graph_83": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "range_113": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_122": {
                "variable": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "batch_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_129": {
                "variable": {
                    "value": "self._batch_train_mods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.gather(self._train_diff_mods_shifted, self._batch_indices)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_131": {
                "variable": {
                    "value": "self._batch_train_obj_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_135": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._obj_npix, self._ptsim._obj_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_136": {
                "variable": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "obj_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "obj_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pad_139": {
                "variable": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(obj_reshaped[0], obj_reshaped[1])",
                            "Call"
                        ]
                    ]
                },
                "paddings": {
                    "value": "[[pad, pad], [pad, pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "self._ptsim._obj_padding_const",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_145": {
                "variable": {
                    "value": "probe_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "probe_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._ptsim._probe_npix, self._ptsim._probe_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_146": {
                "variable": {
                    "value": "probe_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "probe_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "probe_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "gather_159": {
                "variable": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "tf.reshape(obj_padded, [-1])",
                    "type": "Call",
                    "possible_values": []
                },
                "indices": {
                    "value": "batch_obj_view_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reshape_162": {
                "variable": {
                    "value": "batch_guess_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.abs(batch_farfield_waves)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Session_235": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdamOptimizer_354": {
                "variable": {
                    "value": "self._optparams.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_86": {
                "variable": {
                    "value": "self._tf_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "vars",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "np.concatenate([self._obj_guess_flat, self._probe_guess_flat])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "constant_94": {
                "variable": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "train_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_max_97": {
                "variable": {
                    "value": "self._train_diff_max",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_98": {
                "variable": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_diffs[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_101": {
                "variable": {
                    "value": "self._train_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "train_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_103": {
                "variable": {
                    "value": "self._validation_view_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._view_indices[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_obj_view_indices",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_210": {
                "variable": {
                    "value": "validation_diff_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_218": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_norm_219": {
                "variable": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_tensor_flat, [2, self._ptsim._obj_npix, self._ptsim._obj_npix])",
                            "Call"
                        ],
                        [
                            "tf.reshape(self._tf_obj, [2, -1])",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_220": {
                "variable": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_norm(obj_reshaped, max_abs, axes=[0])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_221": {
                "variable": {
                    "value": "var_vals",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "(obj_clipped_reshaped, self._tf_probe)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "assign_222": {
                "variable": {
                    "value": "clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self._tf_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "var_vals",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.concat((obj_clipped_reshaped, self._tf_probe), axis=0)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "clip_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_85": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_114": {
                "buffer_size": {
                    "value": "self._train_ndiffs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_129": {
                "params": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_159": {
                "tensor": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "fft2d_161": {
                "input": {
                    "value": "batch_exit_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_obj_views * probe_cmplx",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_162": {
                "x": {
                    "value": "batch_farfield_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.fft2d(batch_exit_waves) / self._ptsim._probe_npix",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_180": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_202": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_207": {
                "name": {
                    "value": "validation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_217": {
                "name": {
                    "value": "obj_clip",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_236": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_176": {
                "input_tensor": {
                    "value": "(batch_predictions - batch_diff_mods) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_185": {
                "variable": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "preds > 0.01",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "epsilons",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ],
                        [
                            "tf.ones_like(preds) * 0.01",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_186": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "preds - diffs * tf.log(preds)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_like_201": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_184": {
                "input": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_180": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_186": {
                "x": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "batch_predictions ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ],
                        [
                            "x ** 2",
                            "BinOp"
                        ],
                        [
                            "tf.where(preds > 0.01, preds, epsilons)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/examples/tensorflow/near_field_ptychography/tfPtycho.py": {
        "tensorflow": {
            "Graph_87": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "range_120": {
                "variable": {
                    "value": "dataset_indices",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_128": {
                "variable": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "batch_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_135": {
                "variable": {
                    "value": "self._batch_train_mods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.gather(self._train_diff_mods_shifted, self._batch_indices)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_136": {
                "variable": {
                    "value": "self._batch_train_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._train_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_156": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._obj_var_npix, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_157": {
                "variable": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "obj_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "obj_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "pad_160": {
                "variable": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_cmplx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(obj_reshaped[0], obj_reshaped[1])",
                            "Call"
                        ]
                    ]
                },
                "paddings": {
                    "value": "[[pad, pad], [pad, pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "constant_values": {
                    "value": "self._ptsim._obj_params.padding_const",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_166": {
                "variable": {
                    "value": "probe_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "probe_tensor_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, self._probe_npix, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_167": {
                "variable": {
                    "value": "probe_cmplx",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "probe_reshaped[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "imag": {
                    "value": "probe_reshaped[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "map_fn_191": {
                "variable": {
                    "value": "batch_obj_views_real",
                    "type": "Name",
                    "possible_values": []
                },
                "fn": {
                    "value": "gen_view_fn_real",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda scatter_indices: tf.scatter_nd(indices=scatter_indices[:, :, None], updates=tf.real(obj_padded) - 1.0, shape=[self._probe_npix ** 2])",
                            "Lambda"
                        ]
                    ]
                },
                "elems": {
                    "value": "batch_scatter_indices",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "map_fn_192": {
                "variable": {
                    "value": "batch_obj_views_imag",
                    "type": "Name",
                    "possible_values": []
                },
                "fn": {
                    "value": "gen_view_fn_imag",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda scatter_indices: tf.scatter_nd(indices=scatter_indices[:, :, None], updates=tf.imag(obj_padded), shape=[self._probe_npix ** 2])",
                            "Lambda"
                        ]
                    ]
                },
                "elems": {
                    "value": "batch_scatter_indices",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "complex_193": {
                "variable": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": []
                },
                "real": {
                    "value": "batch_obj_views_real",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.map_fn(gen_view_fn_real, batch_scatter_indices, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "batch_obj_views_imag",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.map_fn(gen_view_fn_imag, batch_scatter_indices, dtype=tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_222": {
                "variable": {
                    "value": "batch_guess_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.abs(batch_out_wavefronts)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_254": {
                "variable": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "clip_by_norm_255": {
                "variable": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "obj_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_tensor_flat, [2, self._obj_var_npix, -1])",
                            "Call"
                        ],
                        [
                            "tf.reshape(self._tf_obj, [2, -1])",
                            "Call"
                        ]
                    ]
                },
                "clip_norm": {
                    "value": "max_abs",
                    "type": "Name",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_256": {
                "variable": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "obj_clipped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_norm(obj_reshaped, max_abs, axes=[0])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "assign_257": {
                "variable": {
                    "value": "clipped",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "obj_clipped_reshaped",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(obj_clipped, [-1])",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "clip_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_267": {
                "variable": {
                    "value": "self.session",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdamOptimizer_385": {
                "variable": {
                    "value": "self._optparams.obj_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_obj",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_90": {
                "variable": {
                    "value": "self._tf_obj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "obj_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._obj_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_92": {
                "variable": {
                    "value": "self._tf_probe",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "probe_flat",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "self._probe_guess_flat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_97": {
                "variable": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_mods[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "train_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_99": {
                "variable": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "shifted_mods[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_diff_mod",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_102": {
                "variable": {
                    "value": "self._tf_prop_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._prop_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "complex64",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "propagation_kernel",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_105": {
                "variable": {
                    "value": "self._train_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._scatter_indices[self._train_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "train_scatter_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_107": {
                "variable": {
                    "value": "self._validation_scatter_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._ptsim._scatter_indices[self._validation_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "validation_scatter_indices",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_241": {
                "variable": {
                    "value": "validation_diff_mods",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._validation_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "AdamOptimizer_390": {
                "variable": {
                    "value": "self._optparams.probe_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self._optparams.learning_rate_probe",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_89": {
                "device_name": {
                    "value": "/gpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "shuffle_and_repeat_121": {
                "buffer_size": {
                    "value": "self._train_ndiffs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_135": {
                "params": {
                    "value": "self._train_diff_mods_shifted",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self._batch_indices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_180": {
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "scatter_nd_184": {
                "indices": {
                    "value": "scatter_indices[:, :, None]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "updates": {
                    "value": "tf.real(obj_padded) - 1.0",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._probe_npix ** 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "scatter_nd_187": {
                "indices": {
                    "value": "scatter_indices[:, :, None]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "updates": {
                    "value": "tf.imag(obj_padded)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._probe_npix ** 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_194": {
                "tensor": {
                    "value": "batch_obj_views",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.complex(batch_obj_views_real, batch_obj_views_imag)",
                            "Call"
                        ],
                        [
                            "tf.reshape(batch_obj_views, [-1, self._probe_npix, self._probe_npix]) + 1.0",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self._probe_npix, self._probe_npix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ifft2d_220": {
                "input": {
                    "value": "tf.fft2d(batch_exit_waves) / self._probe_npix * self._tf_prop_kernel",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_222": {
                "x": {
                    "value": "batch_out_wavefronts",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ifft2d(tf.fft2d(batch_exit_waves) / self._probe_npix * self._tf_prop_kernel) * self._probe_npix",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_237": {
                "name": {
                    "value": "validation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_249": {
                "input_tensor": {
                    "value": "(batch_predictions - batch_diff_mods) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "global_variables_initializer_268": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "imag_188": {
                "input": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_params.padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                }
            },
            "real_185": {
                "input": {
                    "value": "obj_padded",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.pad(obj_cmplx, [[pad, pad], [pad, pad]], constant_values=self._ptsim._obj_params.padding_const)",
                            "Call"
                        ],
                        [
                            "self._getComplexPaddedObj(obj_flat)",
                            "Call"
                        ]
                    ]
                }
            },
            "fft2d_220": {
                "input": {
                    "value": "batch_exit_waves",
                    "type": "Name",
                    "possible_values": [
                        [
                            "batch_obj_views * probe_cmplx",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/optimizers/tensorflow/curveball.py": {
        "tensorflow": {
            "get_variable_72": {
                "variable": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "lambda",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "damping_factor",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_76": {
                "variable": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "z",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_79": {
                "variable": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "dummy",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_like(self._predictions_fn_tensor)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_82": {
                "variable": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_before_update",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_variable_84": {
                "variable": {
                    "value": "self._iteration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "iteration",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_86": {
                "variable": {
                    "value": "self._successful_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "successful_iters",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_141": {
                "variable": {
                    "value": "a11",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._hjvpdz * self._jvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_142": {
                "variable": {
                    "value": "a12",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jvpz * self._hjvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_143": {
                "variable": {
                    "value": "a22",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jvpz * self._hjvpz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_145": {
                "variable": {
                    "value": "b1",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jloss * self._jvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_146": {
                "variable": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jloss * self._jvpz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_152": {
                "variable": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[[a11, a12], [a12, a22]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_153": {
                "variable": {
                    "value": "b",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[b1, b2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cond_183": {
                "variable": {
                    "value": "m_b",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(b2, 0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "_zero_z_sol",
                    "type": "Name",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "_two_by_two_pinv_sol",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cond_224": {
                "variable": {
                    "value": "damping_update_op",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(self._iteration % self._damping_update_frequency, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "damping_new_op",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.assign(self._damping_factor, update(), name='damping_new_op')",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.assign(self._damping_factor, update(), name='damping_new_op')",
                            "Lambda"
                        ]
                    ]
                },
                "false_fn": {
                    "value": "damping_same",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.identity(self._damping_factor)",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.identity(self._damping_factor)",
                            "Lambda"
                        ]
                    ]
                }
            },
            "get_variable_332": {
                "variable": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "lambda",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "damping_factor",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "get_variable_336": {
                "variable": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "z",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_339": {
                "variable": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "dummy",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_like(self._predictions_fn_tensor)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_342": {
                "variable": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_before_update",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_variable_344": {
                "variable": {
                    "value": "self._iteration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "iteration",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_346": {
                "variable": {
                    "value": "self._successful_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "successful_iters",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_350": {
                "variable": {
                    "value": "self._projected_gradient_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "projected_grad_iterations",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_variable_354": {
                "variable": {
                    "value": "self._total_proj_ls_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "total_projection_line_search_iterations",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_407": {
                "variable": {
                    "value": "a110",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._hjvpdz * self._jvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_408": {
                "variable": {
                    "value": "a12",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jvpz * self._hjvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_409": {
                "variable": {
                    "value": "a22",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jvpz * self._hjvpz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_411": {
                "variable": {
                    "value": "b1",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jloss * self._jvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_412": {
                "variable": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self._jloss * self._jvpz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_420": {
                "variable": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[[a11, a12], [a12, a22]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_421": {
                "variable": {
                    "value": "b",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[b1, b2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cond_446": {
                "variable": {
                    "value": "m_b",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(b2, 0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "_zero_z_sol",
                    "type": "Name",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "_two_by_two_pinv_sol",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cond_490": {
                "variable": {
                    "value": "damping_update_op",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(self._iteration % self._damping_update_frequency, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "damping_new_op",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.assign(self._damping_factor, update(), name='damping_new_op')",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.assign(self._damping_factor, update(), name='damping_new_op')",
                            "Lambda"
                        ]
                    ]
                },
                "false_fn": {
                    "value": "damping_same",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.identity(self._damping_factor)",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.identity(self._damping_factor)",
                            "Lambda"
                        ]
                    ]
                }
            },
            "variable_scope_62": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "name_scope_93": {
                "name": {
                    "value": "self._name + '_second_order'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "name_scope_123": {
                "name": {
                    "value": "self._name + '_param_updates'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pinv_166": {
                "variable": {
                    "value": "A_inv",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.stack([[a11, a12], [a12, a22]])",
                            "Call"
                        ],
                        [
                            "tf.stack([[a11, a12], [a12, a22]])",
                            "Call"
                        ]
                    ]
                },
                "rcond": {
                    "value": "1e-15",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_167": {
                "variable": {
                    "value": "m_b",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "A_inv @ b[:, None]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "name_scope_198": {
                "name": {
                    "value": "self._name + '_damping_update'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "case_211": {
                "variable": {
                    "value": "update_factor",
                    "type": "Name",
                    "possible_values": []
                },
                "pred_fn_pairs": {
                    "value": "{tf.less(gamma_val, self._update_cond_threshold_low): f1, tf.greater(gamma_val, self._update_cond_threshold_high): f2}",
                    "type": "Dict",
                    "possible_values": []
                },
                "default": {
                    "value": "f3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.constant(1.0)",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.constant(1.0)",
                            "Lambda"
                        ]
                    ]
                },
                "exclusive": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_value_215": {
                "variable": {
                    "value": "damping_factor_new",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "self._damping_factor * update_factor",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "self._damping_threshold_low",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self._damping_threshold_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_229": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_254": {
                "variable": {
                    "value": "z_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ],
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : z_new",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.zeros_like(self._z)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_260": {
                "variable": {
                    "value": "var_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ],
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : var_new",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._input_var",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_270": {
                "variable": {
                    "value": "success_iter_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ],
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : 1",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : 0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "group_271": {
                "variable": {
                    "value": "counter_op",
                    "type": "Name",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[self._iteration.assign_add(1, name='counter_op'), self._successful_iterations.assign_add(success_iter_new)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "variable_scope_322": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "name_scope_363": {
                "name": {
                    "value": "self._name + '_second_order'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "name_scope_390": {
                "name": {
                    "value": "self._name + '_param_updates'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pinv_434": {
                "variable": {
                    "value": "A_inv",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.stack([[a11, a12], [a12, a22]])",
                            "Call"
                        ],
                        [
                            "tf.stack([[a11, a12], [a12, a22]])",
                            "Call"
                        ]
                    ]
                },
                "rcond": {
                    "value": "1e-15",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_435": {
                "variable": {
                    "value": "m_b",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "A_inv @ b[:, None]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "name_scope_465": {
                "name": {
                    "value": "self._name + '_damping_update'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "case_477": {
                "variable": {
                    "value": "update_factor",
                    "type": "Name",
                    "possible_values": []
                },
                "pred_fn_pairs": {
                    "value": "{tf.less(gamma_val, self._update_cond_threshold_low): f1, tf.greater(gamma_val, self._update_cond_threshold_high): f2}",
                    "type": "Dict",
                    "possible_values": []
                },
                "default": {
                    "value": "f3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.constant(1.0)",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.constant(1.0)",
                            "Lambda"
                        ]
                    ]
                },
                "exclusive": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_by_value_481": {
                "variable": {
                    "value": "damping_factor_new",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "self._damping_factor * update_factor",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "self._damping_threshold_low",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self._damping_threshold_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_549": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_594": {
                "variable": {
                    "value": "z_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ],
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : z_new",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.zeros_like(self._z)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_600": {
                "variable": {
                    "value": "var_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ],
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : var_new",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._input_var",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_612": {
                "variable": {
                    "value": "success_iter_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ],
                        [
                            "loss_change_before_constraint < self._machine_eps * 10",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : 1",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : 0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "group_613": {
                "variable": {
                    "value": "counter_op",
                    "type": "Name",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[self._iteration.assign_add(1, name='counter_op'), self._successful_iterations.assign_add(success_iter_new)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gradients_67": {
                "ys": {
                    "value": "self._loss_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "jloss",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_94": {
                "ys": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "vjp",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_96": {
                "ys": {
                    "value": "self._vjp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "tf.stop_gradient(self._z)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "jvpz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_113": {
                "ys": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "self._hjvpz + self._jloss",
                    "type": "BinOp",
                    "possible_values": []
                },
                "name": {
                    "value": "jhjvpz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_119": {
                "ys": {
                    "value": "self._loss_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "grad",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_126": {
                "ys": {
                    "value": "self._vjp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "tf.stop_gradient(self._deltaz)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "jvpdz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_148": {
                "input_tensor": {
                    "value": "self._deltaz * self._deltaz * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_149": {
                "input_tensor": {
                    "value": "self._deltaz * self._z * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_150": {
                "input_tensor": {
                    "value": "self._z * self._z * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_181": {
                "values": {
                    "value": "[b[0] / A[[0, 0]], 0.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "equal_183": {
                "x": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reduce_sum(self._jloss * self._jvpz)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(self._jloss * self._jvpz)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_186": {
                "input_tensor": {
                    "value": "m_b * b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "assign_221": {
                "ref": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "update()",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "damping_new_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "identity_222": {
                "input": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_224": {
                "x": {
                    "value": "self._iteration % self._damping_update_frequency",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_232": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_239": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_253": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_259": {
                "control_inputs": {
                    "value": "[z_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_266": {
                "control_inputs": {
                    "value": "[var_update_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_269": {
                "control_inputs": {
                    "value": "damping_update_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._damping_update(loss_change_before_constraint, M)]",
                            "List"
                        ],
                        [
                            "[self._damping_update(loss_change_before_constraint, M)]",
                            "List"
                        ]
                    ]
                }
            },
            "gradients_327": {
                "ys": {
                    "value": "self._loss_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "jloss",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_364": {
                "ys": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "vjp",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_366": {
                "ys": {
                    "value": "self._vjp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "tf.stop_gradient(self._z)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "jvpz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_377": {
                "ys": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "self._hjvpz + self._jloss",
                    "type": "BinOp",
                    "possible_values": []
                },
                "name": {
                    "value": "jhjvpz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_386": {
                "ys": {
                    "value": "self._loss_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gradients_395": {
                "ys": {
                    "value": "self._vjp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "tf.stop_gradient(self._deltaz)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "jvpdz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_405": {
                "input_tensor": {
                    "value": "tf.abs(self._diag_hessian_fn_tensor)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_414": {
                "input_tensor": {
                    "value": "self._deltaz * self._deltaz * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_415": {
                "input_tensor": {
                    "value": "self._deltaz * self._z * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_416": {
                "input_tensor": {
                    "value": "self._z * self._z * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_444": {
                "values": {
                    "value": "[b[0] / A[[0, 0]], 0.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "equal_446": {
                "x": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reduce_sum(self._jloss * self._jvpz)",
                            "Call"
                        ],
                        [
                            "tf.reduce_sum(self._jloss * self._jvpz)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_449": {
                "input_tensor": {
                    "value": "m_b * b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "assign_487": {
                "ref": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "update()",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "damping_new_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "identity_488": {
                "input": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_490": {
                "x": {
                    "value": "self._iteration % self._damping_update_frequency",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_552": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "identity_572": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "linesearch_state.newx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_580": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_593": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_599": {
                "control_inputs": {
                    "value": "[z_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_607": {
                "control_inputs": {
                    "value": "[var_update_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_611": {
                "control_inputs": {
                    "value": "damping_update_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._damping_update(loss_change_before_constraint, M)]",
                            "List"
                        ],
                        [
                            "[self._damping_update(loss_change_before_constraint, M)]",
                            "List"
                        ]
                    ]
                }
            },
            "zeros_like_77": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_80": {
                "input": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stop_gradient_96": {
                "input": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stop_gradient_126": {
                "input": {
                    "value": "self._deltaz",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_207": {
                "value": {
                    "value": "1.0 / self._damping_update_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "constant_208": {
                "value": {
                    "value": "self._damping_update_factor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_209": {
                "value": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_337": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_340": {
                "input": {
                    "value": "self._predictions_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stop_gradient_366": {
                "input": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stop_gradient_395": {
                "input": {
                    "value": "self._deltaz",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_405": {
                "x": {
                    "value": "self._diag_hessian_fn_tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_473": {
                "value": {
                    "value": "1.0 / self._damping_update_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "constant_474": {
                "value": {
                    "value": "self._damping_update_factor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_475": {
                "value": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_571": {
                "control_inputs": {
                    "value": "[*counter_ops, tf.print('alpha', linesearch_state.alpha)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "less_211": {
                "x": {
                    "value": "gamma_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ],
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "self._update_cond_threshold_low",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "greater_212": {
                "x": {
                    "value": "gamma_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ],
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "self._update_cond_threshold_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_254": {
                "input": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "less_477": {
                "x": {
                    "value": "gamma_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ],
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "self._update_cond_threshold_low",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "greater_478": {
                "x": {
                    "value": "gamma_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ],
                        [
                            "loss_change_before_constraint / expected_quadratic_change",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "self._update_cond_threshold_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_594": {
                "input": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "print_571": {
                "*inputs": {
                    "value": "alpha",
                    "type": "Constant",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "linesearch_state.alpha",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow/lma.py": {
        "tensorflow": {
            "group_178": {
                "variable": {
                    "value": "self._reset_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[*reset_ops, self._projected_gradient_linesearch.reset]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cond_363": {
                "variable": {
                    "value": "input_var_update",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "no_projection_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(projection_reduction_ratio > self._proj_min_reduction_ratio) | fconv",
                            "BinOp"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : projected_var",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "_linesearch",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cond_366": {
                "variable": {
                    "value": "dx_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "no_projection_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(projection_reduction_ratio > self._proj_min_reduction_ratio) | fconv",
                            "BinOp"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : lmstate.dx",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : input_var_update - self._input_var",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "case_613": {
                "variable": {
                    "value": "convergence_condition",
                    "type": "Name",
                    "possible_values": []
                },
                "pred_fn_pairs": {
                    "value": "{fconv: lambda : 2, dtol: lambda : 3, itol: lambda : 4}",
                    "type": "Dict",
                    "possible_values": []
                },
                "default": {
                    "value": "lambda : 0",
                    "type": "Lambda",
                    "possible_values": []
                },
                "exclusive": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_135": {
                "variable": {
                    "value": "self._mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "lambda",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_136": {
                "variable": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var, dtype=self._dtype)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "delta",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_138": {
                "variable": {
                    "value": "self._dummy_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.ones_like(self._preds_t)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "dummy",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_140": {
                "variable": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "loss_before_update",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_143": {
                "variable": {
                    "value": "self._iteration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "iteration",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_145": {
                "variable": {
                    "value": "self._total_cg_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "total_cg_iterations",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_149": {
                "variable": {
                    "value": "self._projected_gradient_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "projected_grad_iterations",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_152": {
                "variable": {
                    "value": "self._total_proj_ls_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "total_projection_line_search_iterations",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "uniform_375": {
                "variable": {
                    "value": "rands",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._stochastic_diag_estimator_iters, *self._preds_t.shape.as_list()]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "maxval": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unstack_385": {
                "variable": {
                    "value": "rands_unstacked",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "rands",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._preds_t.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ],
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._input_var.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_390": {
                "variable": {
                    "value": "mean_estimation",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "stochastic_diags",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "warning_414": {
                "msg": {
                    "value": "The ftol, gtol, and xtol conditions are adapted from  + https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.least_squares.html. + This is a test version, and there is no guarantee that these work as intended.",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "assign_426": {
                "variable": {
                    "value": "store_loss_op",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._loss_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "store_loss_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_435": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_436": {
                "variable": {
                    "value": "this_forcing_eta",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "grad_norm ** 0.5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._min_cg_tol",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_539": {
                "variable": {
                    "value": "grad_inf_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ord": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cond_540": {
                "variable": {
                    "value": "grad_converged",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "grad_inf_norm < self._gtol",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : 1",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : 0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "zeros_like_542": {
                "variable": {
                    "value": "x0",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cond_565": {
                "variable": {
                    "value": "dx_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "lmstate.ratio >= self._min_reduction_ratio",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : lmstate.dx",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.zeros_like(self._update_var)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "warning_647": {
                "msg": {
                    "value": "The ftol, gtol, and xtol conditions are adapted from  + https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.least_squares.html. + This is a test version, and there is no guarantee that these work as intended.",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "assign_652": {
                "variable": {
                    "value": "store_loss_op",
                    "type": "Name",
                    "possible_values": []
                },
                "ref": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._loss_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "store_loss_op",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_658": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_659": {
                "variable": {
                    "value": "this_forcing_eta",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "grad_norm ** 0.5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._min_cg_tol",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_742": {
                "variable": {
                    "value": "grad_inf_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ord": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cond_743": {
                "variable": {
                    "value": "grad_converged",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "grad_inf_norm < self._gtol",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : 1",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : 0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_765": {
                "variable": {
                    "value": "dx_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "lmstate.ratio >= self._min_reduction_ratio",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : lmstate.dx",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.zeros_like(self._update_var)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "variable_scope_134": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Variable_166": {
                "variable": {
                    "value": "self._diag_mu_max_values_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var, dtype=self._dtype)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "diag_mu_max_values",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_210": {
                "ys": {
                    "value": "predictions_this",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._predictions_fn(v_constant)",
                            "Call"
                        ]
                    ]
                },
                "xs": {
                    "value": "v_constant",
                    "type": "Name",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "hjvp",
                    "type": "Name",
                    "possible_values": [
                        [
                            "_hessian_vector_product(ys=[loss_this], xs=[predictions_this], v=[jvp_fn(x)])",
                            "Call"
                        ],
                        [
                            "self._diag_hessian_fn(predictions_this) * jvp_fn(x)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "name_scope_214": {
                "name": {
                    "value": "self._name + '_gngvp'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_245": {
                "x": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_247": {
                "x": {
                    "value": "self._loss_before_update",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_264": {
                "variable": {
                    "value": "lhs",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "dx * self._grads_t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_293": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "linesearch_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lhs <= -rhs",
                            "Compare"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "_true_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "_false_fn",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "uniform_394": {
                "variable": {
                    "value": "rands",
                    "type": "Name",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self._stochastic_diag_estimator_iters, *self._input_var.shape.as_list()]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "maxval": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unstack_401": {
                "variable": {
                    "value": "rands_unstacked",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "rands",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._preds_t.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ],
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._input_var.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_405": {
                "variable": {
                    "value": "mean_estimation",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "stochastic_diags",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_417": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_444": {
                "variable": {
                    "value": "diag_mu_scaling_this_iter",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "self._diag_mu_scaling_t > self._diag_mu_max_values_t",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "self._diag_mu_scaling_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self._diag_mu_max_values_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "where_447": {
                "variable": {
                    "value": "diag_mu_scaling_this_iter",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "tf.equal(diag_mu_scaling_this_iter, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.ones_like(diag_mu_scaling_this_iter)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "diag_mu_scaling_this_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.where(self._diag_mu_scaling_t > self._diag_mu_max_values_t, self._diag_mu_scaling_t, self._diag_mu_max_values_t)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling_this_iter, 0), tf.ones_like(diag_mu_scaling_this_iter), diag_mu_scaling_this_iter)",
                            "Call"
                        ]
                    ]
                }
            },
            "identity_478": {
                "variable": {
                    "value": "cg_update",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "cg_solve.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "cg_solved",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cond_486": {
                "variable": {
                    "value": "ratio",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.math.not_equal(pred_reduction, tf.constant(0.0, dtype=self._dtype))",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : actual_reduction / pred_reduction",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.constant(0.0, dtype=self._dtype)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "case_505": {
                "variable": {
                    "value": "mu_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred_fn_pairs": {
                    "value": "{case1: f1, case2: f1, case3: f2}",
                    "type": "Dict",
                    "possible_values": []
                },
                "default": {
                    "value": "f3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : state.mu_new",
                            "Lambda"
                        ],
                        [
                            "lambda : state.mu_new",
                            "Lambda"
                        ]
                    ]
                },
                "exclusive": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cond_562": {
                "variable": {
                    "value": "lmstate",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "grad_converged > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : [lmstate0]",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "while_loop_op",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.while_loop(_damping_linesearch_cond, _damping_linesearch_step, [lmstate0], back_prop=False)",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.while_loop(_damping_linesearch_cond, _damping_linesearch_step, [lmstate0], back_prop=False)",
                            "Lambda"
                        ]
                    ]
                }
            },
            "assert_greater_573": {
                "variable": {
                    "value": "assert_op",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "lmstate.converged",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "summarize": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "message": {
                    "value": "message_str",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'Meets one of the convergence criterions or strict tolerance criterions. ' + 'Check returned code for detailed information.'",
                            "BinOp"
                        ],
                        [
                            "'Meets one of the convergence criterions or strict tolerance criterions. ' + 'Check returned code for detailed information.'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_598": {
                "variable": {
                    "value": "output_op",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "lmstate.converged",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_650": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_min_671": {
                "variable": {
                    "value": "precond_min",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "precond_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 / (self._diag_precond_t + damping)",
                            "BinOp"
                        ],
                        [
                            "1 / (self._diag_precond_t + damping)",
                            "BinOp"
                        ],
                        [
                            "tf.clip_by_value(precond_t, clip_value_min=precond_min, clip_value_max=precond_min * 10 ** 7)",
                            "Call"
                        ]
                    ]
                }
            },
            "clip_by_value_672": {
                "variable": {
                    "value": "precond_t",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "precond_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1 / (self._diag_precond_t + damping)",
                            "BinOp"
                        ],
                        [
                            "1 / (self._diag_precond_t + damping)",
                            "BinOp"
                        ],
                        [
                            "tf.clip_by_value(precond_t, clip_value_min=precond_min, clip_value_max=precond_min * 10 ** 7)",
                            "Call"
                        ]
                    ]
                },
                "clip_value_min": {
                    "value": "precond_min",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reduce_min(precond_t)",
                            "Call"
                        ]
                    ]
                },
                "clip_value_max": {
                    "value": "precond_min * 10 ** 7",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "identity_684": {
                "variable": {
                    "value": "cg_update",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "cg_solve.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "cg_solved",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cond_690": {
                "variable": {
                    "value": "ratio",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.math.not_equal(pred_reduction, 0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : actual_reduction / pred_reduction",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : 0.0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "case_708": {
                "variable": {
                    "value": "mu_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred_fn_pairs": {
                    "value": "{case1: f1, case2: f1, case3: f2}",
                    "type": "Dict",
                    "possible_values": []
                },
                "default": {
                    "value": "f3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : state.mu_new",
                            "Lambda"
                        ],
                        [
                            "lambda : state.mu_new",
                            "Lambda"
                        ]
                    ]
                },
                "exclusive": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cond_762": {
                "variable": {
                    "value": "lmstate",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "grad_converged > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : [lmstate0]",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "while_loop_op",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : tf.while_loop(_damping_linesearch_cond, _damping_linesearch_step, [lmstate0], back_prop=False)",
                            "Lambda"
                        ],
                        [
                            "lambda : tf.while_loop(_damping_linesearch_cond, _damping_linesearch_step, [lmstate0], back_prop=False)",
                            "Lambda"
                        ]
                    ]
                }
            },
            "assert_greater_773": {
                "variable": {
                    "value": "assert_op",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "lmstate.converged",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "summarize": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "message": {
                    "value": "message_str",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'Meets one of the convergence criterions or strict tolerance criterions. ' + 'Check returned code for detailed information.'",
                            "BinOp"
                        ],
                        [
                            "'Meets one of the convergence criterions or strict tolerance criterions. ' + 'Check returned code for detailed information.'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_795": {
                "variable": {
                    "value": "output_op",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "lmstate.converged",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_136": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_like_138": {
                "input": {
                    "value": "self._preds_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gradients_217": {
                "ys": {
                    "value": "self._loss_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._preds_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_304": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "linesearch_state.newx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_557": {
                "cond": {
                    "value": "_damping_linesearch_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_damping_linesearch_step",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lmstate0]",
                    "type": "List",
                    "possible_values": []
                },
                "back_prop": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_561": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_580": {
                "control_inputs": {
                    "value": "assert_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cond_582": {
                "variable": {
                    "value": "(updated_var, dx_new)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "pred": {
                    "value": "no_update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ],
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : (self._input_var, dx_new)",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._applyProjectedGradient(lmstate)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_586": {
                "variable": {
                    "value": "updated_var",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "no_update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ],
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : self._input_var",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._input_var + dx_new",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "assign_589": {
                "ref": {
                    "value": "self._mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "lmstate.mu_new",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "assign_590": {
                "ref": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "dx_new",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cond(no_projection_condition, lambda : lmstate.dx, lambda : input_var_update - self._input_var)",
                            "Call"
                        ],
                        [
                            "tf.cond(lmstate.ratio >= self._min_reduction_ratio, lambda : lmstate.dx, lambda : tf.zeros_like(self._update_var))",
                            "Call"
                        ],
                        [
                            "tf.cond(lmstate.ratio >= self._min_reduction_ratio, lambda : lmstate.dx, lambda : tf.zeros_like(self._update_var))",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_591": {
                "ref": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "updated_var",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cond(no_update_condition, lambda : self._input_var, lambda : self._input_var + dx_new)",
                            "Call"
                        ],
                        [
                            "tf.cond(no_update_condition, lambda : self._input_var, lambda : self._applyProjectedGradient(lmstate))",
                            "Call"
                        ],
                        [
                            "tf.cond(no_update_condition, lambda : self._input_var, lambda : self._input_var + dx_new)",
                            "Call"
                        ]
                    ]
                }
            },
            "control_dependencies_594": {
                "control_inputs": {
                    "value": "[*update_ops]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_597": {
                "control_inputs": {
                    "value": "counter_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ]
                    ]
                }
            },
            "norm_661": {
                "tensor": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_757": {
                "cond": {
                    "value": "_damping_linesearch_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_damping_linesearch_step",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lmstate0]",
                    "type": "List",
                    "possible_values": []
                },
                "back_prop": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "control_dependencies_761": {
                "control_inputs": {
                    "value": "[store_loss_op]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_779": {
                "control_inputs": {
                    "value": "assert_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cond_781": {
                "variable": {
                    "value": "updated_var",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "no_update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ],
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : self._input_var",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._applyProjectedGradient(lmstate)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "cond_785": {
                "variable": {
                    "value": "updated_var",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "no_update_condition",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ],
                        [
                            "(grad_converged > 0) | (lmstate.ratio < self._min_reduction_ratio)",
                            "BinOp"
                        ]
                    ]
                },
                "true_fn": {
                    "value": "lambda : self._input_var",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._input_var + dx_new",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "assign_788": {
                "ref": {
                    "value": "self._mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "lmstate.mu_new",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "assign_789": {
                "ref": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "dx_new",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cond(no_projection_condition, lambda : lmstate.dx, lambda : input_var_update - self._input_var)",
                            "Call"
                        ],
                        [
                            "tf.cond(lmstate.ratio >= self._min_reduction_ratio, lambda : lmstate.dx, lambda : tf.zeros_like(self._update_var))",
                            "Call"
                        ],
                        [
                            "tf.cond(lmstate.ratio >= self._min_reduction_ratio, lambda : lmstate.dx, lambda : tf.zeros_like(self._update_var))",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_790": {
                "ref": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "updated_var",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cond(no_update_condition, lambda : self._input_var, lambda : self._input_var + dx_new)",
                            "Call"
                        ],
                        [
                            "tf.cond(no_update_condition, lambda : self._input_var, lambda : self._applyProjectedGradient(lmstate))",
                            "Call"
                        ],
                        [
                            "tf.cond(no_update_condition, lambda : self._input_var, lambda : self._input_var + dx_new)",
                            "Call"
                        ]
                    ]
                }
            },
            "control_dependencies_791": {
                "control_inputs": {
                    "value": "[*update_ops]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_794": {
                "control_inputs": {
                    "value": "counter_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ]
                    ]
                }
            },
            "zeros_like_166": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gradients_215": {
                "ys": {
                    "value": "self._preds_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "stop_gradients": {
                    "value": "[x]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "vjp",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradients_221": {
                "ys": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._loss_grads_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grad_ys": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "jvpz",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "identity_278": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "linesearch_state.newx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_291": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "linesearch_state.newx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_303": {
                "control_inputs": {
                    "value": "counter_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ]
                    ]
                }
            },
            "cast_378": {
                "x": {
                    "value": "rands",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._preds_t.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ],
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._input_var.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_440": {
                "tensor": {
                    "value": "self._grads_t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_447": {
                "x": {
                    "value": "diag_mu_scaling_this_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.where(self._diag_mu_scaling_t > self._diag_mu_max_values_t, self._diag_mu_scaling_t, self._diag_mu_max_values_t)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling_this_iter, 0), tf.ones_like(diag_mu_scaling_this_iter), diag_mu_scaling_this_iter)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_like_448": {
                "input": {
                    "value": "diag_mu_scaling_this_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.where(self._diag_mu_scaling_t > self._diag_mu_max_values_t, self._diag_mu_scaling_t, self._diag_mu_max_values_t)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling_this_iter, 0), tf.ones_like(diag_mu_scaling_this_iter), diag_mu_scaling_this_iter)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorShape_458": {
                "dims": {
                    "value": "(self._input_var.shape.dims[0], self._input_var.shape.dims[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "tensordot_481": {
                "a": {
                    "value": "cg_update",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.identity(cg_solve.x, name='cg_solved')",
                            "Call"
                        ],
                        [
                            "tf.identity(cg_solve.x, name='cg_solved')",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "damping * cg_update + linear_b",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "not_equal_486": {
                "x": {
                    "value": "pred_reduction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-0.5 * tf.tensordot(cg_update, damping * cg_update + linear_b, 1)",
                            "BinOp"
                        ],
                        [
                            "-0.5 * tf.tensordot(cg_update, damping * cg_update + linear_b, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.constant(0.0, dtype=self._dtype)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "minimum_489": {
                "x": {
                    "value": "state.mu_new * self._mu_expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._mu_thres_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "maximum_490": {
                "x": {
                    "value": "state.mu_new * self._mu_contraction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._mu_thres_low",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_548": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_549": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_550": {
                "value": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_551": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_552": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_555": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_567": {
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "assign_593": {
                "ref": {
                    "value": "self._diag_mu_max_values_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "diag_mu_scaling_this_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.where(self._diag_mu_scaling_t > self._diag_mu_max_values_t, self._diag_mu_scaling_t, self._diag_mu_max_values_t)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling_this_iter, 0), tf.ones_like(diag_mu_scaling_this_iter), diag_mu_scaling_this_iter)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorShape_667": {
                "dims": {
                    "value": "(self._input_var.shape.dims[0], self._input_var.shape.dims[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "TensorShape_675": {
                "dims": {
                    "value": "(self._input_var.shape.dims[0], self._input_var.shape.dims[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "tensordot_686": {
                "a": {
                    "value": "cg_update",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.identity(cg_solve.x, name='cg_solved')",
                            "Call"
                        ],
                        [
                            "tf.identity(cg_solve.x, name='cg_solved')",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "damping * cg_update + linear_b",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "not_equal_690": {
                "x": {
                    "value": "pred_reduction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-0.5 * tf.tensordot(cg_update, damping * cg_update + linear_b, 1)",
                            "BinOp"
                        ],
                        [
                            "-0.5 * tf.tensordot(cg_update, damping * cg_update + linear_b, 1)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "minimum_693": {
                "x": {
                    "value": "state.mu_new * self._mu_expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._mu_thres_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "maximum_694": {
                "x": {
                    "value": "state.mu_new * self._mu_contraction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._mu_thres_low",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_747": {
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_748": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_749": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_750": {
                "value": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_751": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_752": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_755": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_767": {
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_265": {
                "tensor": {
                    "value": "dx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "projected_var - self._input_var",
                            "BinOp"
                        ]
                    ]
                }
            },
            "control_dependencies_277": {
                "control_inputs": {
                    "value": "counter_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ]
                    ]
                }
            },
            "control_dependencies_290": {
                "control_inputs": {
                    "value": "counter_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_proj_ls_iterations.assign_add(linesearch_state.step_count), self._projected_gradient_iterations.assign_add(1)]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ],
                        [
                            "[self._total_cg_iterations.assign_add(lmstate.cgi, name='cg_counter_op'), self._iteration.assign_add(lmstate.i, name='counter_op')]",
                            "List"
                        ]
                    ]
                }
            },
            "cast_397": {
                "x": {
                    "value": "rands",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._preds_t.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ],
                        [
                            "tf.random.uniform(shape=[self._stochastic_diag_estimator_iters, *self._input_var.shape.as_list()], minval=0, maxval=2, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.cast(rands, dtype=tf.float32) * 2 - 1",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorShape_467": {
                "dims": {
                    "value": "(self._input_var.shape.dims[0], self._input_var.shape.dims[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "constant_486": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_488": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_604": {
                "x": {
                    "value": "lmstate.actual_reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_605": {
                "x": {
                    "value": "lmstate.pred_reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow/nlcg.py": {
        "tensorflow": {
            "group_66": {
                "variable": {
                    "value": "self._reset_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[*reset_ops, self._linesearch.reset]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_80": {
                "variable": {
                    "value": "beta_num",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "p * (self._descent_dir_t - self._descent_dir_old_t)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_81": {
                "variable": {
                    "value": "beta_denom",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "p_old * self._descent_dir_old_t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_82": {
                "variable": {
                    "value": "beta",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "self._steps > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : beta_num / beta_denom",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.constant(0.0, dtype=self._dtype)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "maximum_83": {
                "variable": {
                    "value": "beta",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "beta",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cond(self._steps > 0, lambda : beta_num / beta_denom, lambda : tf.constant(0.0, dtype=self._dtype))",
                            "Call"
                        ],
                        [
                            "tf.maximum(beta, tf.constant(0.0, dtype=self._dtype))",
                            "Call"
                        ],
                        [
                            "beta_function()",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.constant(0.0, dtype=self._dtype)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_49": {
                "variable": {
                    "value": "self._descent_dir_old_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "descent_dir_old",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_51": {
                "variable": {
                    "value": "self._s_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "s",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_54": {
                "variable": {
                    "value": "self._steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "steps",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_55": {
                "variable": {
                    "value": "self._linesearch_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "ls_steps",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_97": {
                "variable": {
                    "value": "descent_check",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "s_new * self._grads_t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_98": {
                "variable": {
                    "value": "s_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "descent_check < 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : s_new",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : self._descent_dir_t",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "identity_113": {
                "variable": {
                    "value": "var_update",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "linesearch_out.newx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_48": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "gradients_62": {
                "ys": {
                    "value": "self._loss_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_83": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_92": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "group_116": {
                "variable": {
                    "value": "assign_ops",
                    "type": "Name",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[self._input_var.assign(var_update), self._s_t.assign(s_new), self._descent_dir_old_t.assign(self._descent_dir_t), self._steps.assign_add(1), self._linesearch_steps.assign_add(linesearch_out.step_count)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_like_49": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_51": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_82": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_115": {
                "control_inputs": {
                    "value": "[var_update]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow/projected_gradient.py": {
        "tensorflow": {
            "group_58": {
                "variable": {
                    "value": "self._reset_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[*reset_ops, self._linesearch.reset]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Variable_49": {
                "variable": {
                    "value": "self._iters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "iterations",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_50": {
                "variable": {
                    "value": "self._linesearch_iters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "linesearch_iterations",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "identity_79": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "linesearch_state.newx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_48": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "control_dependencies_78": {
                "control_inputs": {
                    "value": "counter_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self._linesearch_iters.assign_add(linesearch_state.step_count), self._iters.assign_add(1)]",
                            "List"
                        ]
                    ]
                }
            },
            "name_scope_83": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gradients_37": {
                "ys": {
                    "value": "self._loss_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow/utils/linear_conjugate_gradient.py": {
        "tensorflow": {
            "while_loop_161": {
                "variable": {
                    "value": "state",
                    "type": "Name",
                    "possible_values": []
                },
                "cond": {
                    "value": "stopping_criterion",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "cg_step",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[state]",
                    "type": "List",
                    "possible_values": []
                },
                "maximum_iterations": {
                    "value": "max_iter",
                    "type": "Name",
                    "possible_values": []
                },
                "back_prop": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "cg_while",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_143": {
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "tensordot_156": {
                "variable": {
                    "value": "gamma0",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "r0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rhs",
                            "Name"
                        ],
                        [
                            "rhs - operator.matvec(x)",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "p0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "r0",
                            "Name"
                        ],
                        [
                            "preconditioner.matvec(r0)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_158": {
                "variable": {
                    "value": "r_check0",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rhs.dtype.base_dtype.name",
                            "Attribute"
                        ]
                    ]
                }
            },
            "name_scope_106": {
                "name": {
                    "value": "cg_cond",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_114": {
                "name": {
                    "value": "cg_body",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensordot_121": {
                "variable": {
                    "value": "gamma",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "print_123": {
                "variable": {
                    "value": "print_op",
                    "type": "Name",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "i",
                    "type": "Constant",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "state.i",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensordot_132": {
                "variable": {
                    "value": "gamma",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "q",
                    "type": "Name",
                    "possible_values": [
                        [
                            "preconditioner.matvec(r)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_144": {
                "name": {
                    "value": "cg_init",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_146": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rhs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "norm_157": {
                "tensor": {
                    "value": "rhs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "norm_107": {
                "tensor": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensordot_116": {
                "a": {
                    "value": "state.p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "operator.matvec(state.p)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_119": {
                "x": {
                    "value": "tf.tensordot(state.r, r, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "constant_160": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_167": {
                "input": {
                    "value": "state.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_168": {
                "input": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_169": {
                "input": {
                    "value": "state.p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensordot_119": {
                "a": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_119": {
                "tensor": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "norm_125": {
                "tensor": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_127": {
                "tensor": {
                    "value": "r0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rhs",
                            "Name"
                        ],
                        [
                            "rhs - operator.matvec(x)",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/optimizers/tensorflow/utils/linesearch.py": {
        "tensorflow": {
            "group_157": {
                "variable": {
                    "value": "self._reset_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "reset_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[v.assign(v.initial_value) for v in self._variables]",
                            "ListComp"
                        ],
                        [
                            "[v.assign(v.initial_value) for v in self._variables]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "Variable_43": {
                "variable": {
                    "value": "self._oldf0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "-np.inf",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "old_f0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_44": {
                "variable": {
                    "value": "self._alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "alpha",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "group_51": {
                "*inputs": {
                    "value": "reset_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[v.assign(v.initial_value) for v in self._variables]",
                            "ListComp"
                        ],
                        [
                            "[v.assign(v.initial_value) for v in self._variables]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "norm_64": {
                "variable": {
                    "value": "descent_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "descent_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reduce_sum_65": {
                "variable": {
                    "value": "df0",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "descent_dir * gradient",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_81": {
                "variable": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "self._oldf0 >= f0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "_alphafn_true",
                    "type": "Name",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "_alphafn_false",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "while_loop_106": {
                "variable": {
                    "value": "[lsstate_new]",
                    "type": "List",
                    "possible_values": []
                },
                "cond": {
                    "value": "_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_body",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lsstate0]",
                    "type": "List",
                    "possible_values": []
                },
                "back_prop": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_151": {
                "variable": {
                    "value": "self._alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "alpha",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_152": {
                "variable": {
                    "value": "self._alpha_suggested",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "alpha_suggested",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_175": {
                "variable": {
                    "value": "descent_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "descent_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reduce_sum_176": {
                "variable": {
                    "value": "df0",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "descent_dir * gradient",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_185": {
                "variable": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "self._alpha_suggested > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "_alphafn_true",
                    "type": "Name",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "_alphafn_false",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "while_loop_208": {
                "variable": {
                    "value": "[lsstate_new]",
                    "type": "List",
                    "possible_values": []
                },
                "cond": {
                    "value": "_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_body",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lsstate0]",
                    "type": "List",
                    "possible_values": []
                },
                "back_prop": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "switch_case_234": {
                "variable": {
                    "value": "suggested_alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "branch_index": {
                    "value": "lsstate_new.step_count - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "branch_fns": {
                    "value": "{0: case1, 1: case2}",
                    "type": "Dict",
                    "possible_values": []
                },
                "default": {
                    "value": "case3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : self.optimism * lsstate_new.alpha",
                            "Lambda"
                        ]
                    ]
                }
            },
            "variable_scope_42": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'backtracking_linesearch'",
                            "MethodArgument"
                        ],
                        [
                            "'backtracking_linesearch'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "name_scope_59": {
                "name": {
                    "value": "self._name + '_search'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_73": {
                "variable": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "alpha * descent_norm < self._machine_eps",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : self.initial_stepsize / descent_norm",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : alpha",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "group_115": {
                "variable": {
                    "value": "assign_ops",
                    "type": "Name",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[self._oldf0.assign(f0), self._alpha.assign(lsstate_new.alpha)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cond_118": {
                "variable": {
                    "value": "lsstate_updated",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "lsstate_new.newf <= f0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "sanity_check_true",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : lsstate_new",
                            "Lambda"
                        ],
                        [
                            "lambda : lsstate_new",
                            "Lambda"
                        ]
                    ]
                },
                "false_fn": {
                    "value": "sanity_check_false",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : LSState(newf=f0, newx=x0, alpha=0.0, step_count=lsstate_new.step_count)",
                            "Lambda"
                        ],
                        [
                            "lambda : LSState(newf=f0, newx=x0, alpha=tf.constant(0.0, dtype=self._dtype), step_count=lsstate_new.step_count)",
                            "Lambda"
                        ]
                    ]
                }
            },
            "variable_scope_150": {
                "name_or_scope": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'backtracking_linesearch'",
                            "MethodArgument"
                        ],
                        [
                            "'backtracking_linesearch'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "name_scope_170": {
                "name": {
                    "value": "self._name + '_search'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "group_239": {
                "variable": {
                    "value": "assign_ops",
                    "type": "Name",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[self._alpha_suggested.assign(suggested_alpha), self._alpha.assign(lsstate_new.alpha)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cond_242": {
                "variable": {
                    "value": "lsstate_updated",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "lsstate_new.newf <= f0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "sanity_check_true",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : lsstate_new",
                            "Lambda"
                        ],
                        [
                            "lambda : lsstate_new",
                            "Lambda"
                        ]
                    ]
                },
                "false_fn": {
                    "value": "sanity_check_false",
                    "type": "Name",
                    "possible_values": [
                        [
                            "lambda : LSState(newf=f0, newx=x0, alpha=0.0, step_count=lsstate_new.step_count)",
                            "Lambda"
                        ],
                        [
                            "lambda : LSState(newf=f0, newx=x0, alpha=tf.constant(0.0, dtype=self._dtype), step_count=lsstate_new.step_count)",
                            "Lambda"
                        ]
                    ]
                }
            },
            "logical_and_95": {
                "x": {
                    "value": "cond1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ],
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ]
                    ]
                },
                "y": {
                    "value": "cond2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ],
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ]
                    ]
                }
            },
            "control_dependencies_114": {
                "control_inputs": {
                    "value": "[lsstate_new.step_count]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_117": {
                "control_inputs": {
                    "value": "[assign_ops]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "logical_and_197": {
                "x": {
                    "value": "cond1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ],
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ]
                    ]
                },
                "y": {
                    "value": "cond2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ],
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ]
                    ]
                }
            },
            "control_dependencies_238": {
                "control_inputs": {
                    "value": "[lsstate_new.step_count]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "control_dependencies_241": {
                "control_inputs": {
                    "value": "[assign_ops]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_like_61": {
                "input": {
                    "value": "x0",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "constant_105": {
                "value": {
                    "value": "step_count",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_172": {
                "input": {
                    "value": "x0",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "constant_207": {
                "value": {
                    "value": "step_count",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_215": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/curveball.py": {
        "tensorflow": {
            "Variable_49": {
                "variable": {
                    "value": "self._damping_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "damping_factor",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.clip_by_value(self._damping_factor * update_factor, self._damping_threshold_low, self._damping_threshold_high)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_65": {
                "variable": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_67": {
                "variable": {
                    "value": "self._iteration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_68": {
                "variable": {
                    "value": "self._successful_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_69": {
                "variable": {
                    "value": "self._loss_old",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_70": {
                "variable": {
                    "value": "self._loss_new",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_like_117": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._predictions_fn(self._input_var)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_sum_149": {
                "variable": {
                    "value": "a11",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "hjvpdz * jvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_150": {
                "variable": {
                    "value": "a12",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "jvpz * hjvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_151": {
                "variable": {
                    "value": "a22",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "jvpz * hjvpz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_153": {
                "variable": {
                    "value": "b1",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "lossgrad * jvpdz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_154": {
                "variable": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "lossgrad * jvpz",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_160": {
                "variable": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[[a11, a12], [a12, a22]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_161": {
                "variable": {
                    "value": "b",
                    "type": "Name",
                    "possible_values": []
                },
                "values": {
                    "value": "[b1, b2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "pinv_163": {
                "variable": {
                    "value": "A_inv",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.stack([[a11, a12], [a12, a22]])",
                            "Call"
                        ]
                    ]
                },
                "rcond": {
                    "value": "1e-15",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cond_164": {
                "variable": {
                    "value": "m_b",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "tf.equal(b2, 0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : tf.stack([b[0] / A[[0, 0]], 0.0])",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.reshape(A_inv @ b[:, None], [-1])",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "zeros_like_65": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_112": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_140": {
                "name": {
                    "value": "self._name + '_param_updates'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_187": {
                "variable": {
                    "value": "damping_factor",
                    "type": "Name",
                    "possible_values": []
                },
                "t": {
                    "value": "self._damping_factor * update_factor",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "self._damping_threshold_low",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self._damping_threshold_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_195": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GradientTape_113": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_156": {
                "input_tensor": {
                    "value": "deltaz * deltaz * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_157": {
                "input_tensor": {
                    "value": "deltaz * self._z * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_158": {
                "input_tensor": {
                    "value": "self._z * self._z * self._damping_factor",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "equal_164": {
                "x": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reduce_sum(lossgrad * jvpz)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_170": {
                "input_tensor": {
                    "value": "m_b * b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "name_scope_177": {
                "name": {
                    "value": "self._name + '_damping_update'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GradientTape_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_165": {
                "values": {
                    "value": "[b[0] / A[[0, 0]], 0.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_166": {
                "tensor": {
                    "value": "A_inv @ b[:, None]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_like_214": {
                "input": {
                    "value": "self._z",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/lma.py": {
        "tensorflow": {
            "get_logger_9": {
                "variable": {
                    "value": "logger",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_111": {
                "variable": {
                    "value": "self._mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "mu",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_112": {
                "variable": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_114": {
                "variable": {
                    "value": "self._loss_old",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_115": {
                "variable": {
                    "value": "self._loss_new",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_117": {
                "variable": {
                    "value": "self._iteration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_119": {
                "variable": {
                    "value": "self._total_cg_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_121": {
                "variable": {
                    "value": "self._projected_gradient_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_122": {
                "variable": {
                    "value": "self._total_proj_ls_iterations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_132": {
                "variable": {
                    "value": "self._convergence_status",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_130": {
                "variable": {
                    "value": "self._diag_mu_max_values",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_205": {
                "variable": {
                    "value": "lhs",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "dx * objective_grad",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_207": {
                "variable": {
                    "value": "descent_dir",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "lhs <= -rhs",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : dx",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : -objective_grad",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "ones_like_243": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._predictions_fn(self._input_var)",
                            "Call"
                        ],
                        [
                            "self._predictions_fn(self._input_var)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_259": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._predictions_fn(self._input_var)",
                            "Call"
                        ],
                        [
                            "self._predictions_fn(self._input_var)",
                            "Call"
                        ]
                    ]
                }
            },
            "norm_284": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "objective_grad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gt.gradient(loss_old, self._input_var)",
                            "Call"
                        ]
                    ]
                }
            },
            "minimum_285": {
                "variable": {
                    "value": "this_forcing_eta",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "grad_norm ** 0.5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._min_cg_tol",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_369": {
                "variable": {
                    "value": "grad_inf_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "objective_grad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gt.gradient(loss_old, self._input_var)",
                            "Call"
                        ]
                    ]
                },
                "ord": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cond_370": {
                "variable": {
                    "value": "grad_converged",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "grad_inf_norm < self._gtol",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : 1",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : 0",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "zeros_like_372": {
                "variable": {
                    "value": "x0",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cond_397": {
                "variable": {
                    "value": "dx_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "lmstate.ratio >= self._min_reduction_ratio",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : lmstate.dx",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : tf.zeros_like(self._update_var)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "zeros_like_112": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_193": {
                "x": {
                    "value": "loss_old",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._loss_fn(prediction)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_195": {
                "x": {
                    "value": "loss_old",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._loss_fn(prediction)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_231": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_239": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_255": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_269": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "where_293": {
                "variable": {
                    "value": "diag_mu_scaling",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "diag_mu_scaling > self._diag_mu_max_values",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "diag_mu_scaling",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._diag_mu_scaling_fn()",
                            "Call"
                        ],
                        [
                            "tf.where(diag_mu_scaling > self._diag_mu_max_values, diag_mu_scaling, self._diag_mu_max_values)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling, 0), tf.ones_like(diag_mu_scaling), diag_mu_scaling)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "self._diag_mu_max_values",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "where_296": {
                "variable": {
                    "value": "diag_mu_scaling",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "tf.equal(diag_mu_scaling, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.ones_like(diag_mu_scaling)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "diag_mu_scaling",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._diag_mu_scaling_fn()",
                            "Call"
                        ],
                        [
                            "tf.where(diag_mu_scaling > self._diag_mu_max_values, diag_mu_scaling, self._diag_mu_max_values)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling, 0), tf.ones_like(diag_mu_scaling), diag_mu_scaling)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_321": {
                "variable": {
                    "value": "cg_x0",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "map_structure_391": {
                "variable": {
                    "value": "[lmstate]",
                    "type": "List",
                    "possible_values": []
                },
                "func": {
                    "value": "tf.stop_gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*structure": {
                    "value": "tf.while_loop(_damping_linesearch_cond, _damping_linesearch_step, [lmstate0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_130": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_240": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_257": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_340": {
                "variable": {
                    "value": "ratio",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "minimum_344": {
                "variable": {
                    "value": "mu_new",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "state.mu_new * self._mu_expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._mu_thres_high",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "assert_greater_404": {
                "x": {
                    "value": "lmstate.converged",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "summarize": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "message": {
                    "value": "message_str",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'Meets one of the convergence criterions or strict tolerance criterions. ' + 'Check returned code for detailed information.'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "GradientTape_169": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "norm_206": {
                "tensor": {
                    "value": "dx",
                    "type": "Name",
                    "possible_values": [
                        [
                            "projected_var - self._input_var",
                            "BinOp"
                        ]
                    ]
                }
            },
            "equal_296": {
                "x": {
                    "value": "diag_mu_scaling",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._diag_mu_scaling_fn()",
                            "Call"
                        ],
                        [
                            "tf.where(diag_mu_scaling > self._diag_mu_max_values, diag_mu_scaling, self._diag_mu_max_values)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling, 0), tf.ones_like(diag_mu_scaling), diag_mu_scaling)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_like_297": {
                "input": {
                    "value": "diag_mu_scaling",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._diag_mu_scaling_fn()",
                            "Call"
                        ],
                        [
                            "tf.where(diag_mu_scaling > self._diag_mu_max_values, diag_mu_scaling, self._diag_mu_max_values)",
                            "Call"
                        ],
                        [
                            "tf.where(tf.equal(diag_mu_scaling, 0), tf.ones_like(diag_mu_scaling), diag_mu_scaling)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorShape_308": {
                "dims": {
                    "value": "(self._input_var.shape.dims[0], self._input_var.shape.dims[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_333": {
                "input_tensor": {
                    "value": "cg_solve.x * (damping * cg_solve.x + linear_b)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_346": {
                "variable": {
                    "value": "mu_new",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "state.mu_new * self._mu_contraction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "self._mu_thres_low",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_378": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_379": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_380": {
                "value": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_381": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_382": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_385": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "while_loop_392": {
                "cond": {
                    "value": "_damping_linesearch_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_damping_linesearch_step",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lmstate0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_like_399": {
                "input": {
                    "value": "self._update_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorShape_317": {
                "dims": {
                    "value": "(self._input_var.shape.dims[0], self._input_var.shape.dims[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "abs_435": {
                "x": {
                    "value": "lmstate.actual_reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_436": {
                "x": {
                    "value": "lmstate.pred_reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/nlcg.py": {
        "tensorflow": {
            "Variable_44": {
                "variable": {
                    "value": "self._descent_dir_old",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "descent_dir_old",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_47": {
                "variable": {
                    "value": "self._s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.zeros_like(self._input_var)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "s",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_49": {
                "variable": {
                    "value": "self._steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "steps",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_50": {
                "variable": {
                    "value": "self._linesearch_steps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "ls_steps",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_55": {
                "variable": {
                    "value": "self._loss_old",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_56": {
                "variable": {
                    "value": "self._loss_new",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "np.inf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_75": {
                "variable": {
                    "value": "beta_num",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "p * (descent_dir - self._descent_dir_old)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_76": {
                "variable": {
                    "value": "beta_denom",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "p_old * self._descent_dir_old",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "maximum_78": {
                "variable": {
                    "value": "beta",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "beta_num / beta_denom",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.constant(0.0, dtype=self._dtype)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "constant_80": {
                "variable": {
                    "value": "beta",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_114": {
                "variable": {
                    "value": "descent_check",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "s_new * grads",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cond_115": {
                "variable": {
                    "value": "s_new",
                    "type": "Name",
                    "possible_values": []
                },
                "pred": {
                    "value": "descent_check < 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : s_new",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : descent_dir",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "zeros_like_44": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_47": {
                "input": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_105": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "constant_78": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/projected_gradient.py": {
        "tensorflow": {
            "Variable_44": {
                "variable": {
                    "value": "self._iters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "iterations",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_45": {
                "variable": {
                    "value": "self._linesearch_iters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "linesearch_iterations",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "group_53": {
                "variable": {
                    "value": "self._reset_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "[*reset_ops, self._linesearch.reset]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "name_scope_88": {
                "name": {
                    "value": "self._name + '_minimize_step'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gradients_34": {
                "ys": {
                    "value": "self._loss_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self._input_var",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/scipy_interface.py": {
        "tensorflow": {
            "get_logger_7": {
                "variable": {
                    "value": "logger",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "constant_80": {
                "variable": {
                    "value": "x_in",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_84": {
                "variable": {
                    "value": "x_in",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_92": {
                "variable": {
                    "value": "x_in",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_93": {
                "variable": {
                    "value": "v_in",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_100": {
                "variable": {
                    "value": "v_in",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_101": {
                "variable": {
                    "value": "x_in",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_like_133": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self._predictions_fn(x_in)",
                            "Call"
                        ]
                    ]
                }
            },
            "GradientTape_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_127": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_129": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/utils/autodiff_helper.py": {
        "tensorflow": {
            "ones_like_21": {
                "variable": {
                    "value": "dummy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "predict_fn(var)",
                            "Call"
                        ],
                        [
                            "predict_fn(var)",
                            "Call"
                        ]
                    ]
                }
            },
            "ForwardAccumulator_9": {
                "primals": {
                    "value": "var",
                    "type": "Name",
                    "possible_values": []
                },
                "tangents": {
                    "value": "vector",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "GradientTape_18": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ForwardAccumulator_32": {
                "primals": {
                    "value": "objective_input",
                    "type": "Name",
                    "possible_values": []
                },
                "tangents": {
                    "value": "vector",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "GradientTape_44": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_58": {
                "persistent": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientTape_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_46": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_50": {
                "input_tensor": {
                    "value": "grad * v",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ForwardAccumulator_62": {
                "primals": {
                    "value": "objective_input",
                    "type": "Name",
                    "possible_values": []
                },
                "tangents": {
                    "value": "vector",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/utils/linear_conjugate_gradient.py": {
        "tensorflow": {
            "map_structure_155": {
                "variable": {
                    "value": "[state]",
                    "type": "List",
                    "possible_values": []
                },
                "func": {
                    "value": "tf.stop_gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*structure": {
                    "value": "tf.while_loop(cond=stopping_criterion, body=cg_step, loop_vars=[state], maximum_iterations=max_iter, name='cg_while')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "name_scope_137": {
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "tensordot_150": {
                "variable": {
                    "value": "gamma0",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "r0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rhs",
                            "Name"
                        ],
                        [
                            "rhs - operator.matvec(x)",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "p0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "r0",
                            "Name"
                        ],
                        [
                            "preconditioner.matvec(r0)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_152": {
                "variable": {
                    "value": "r_check0",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "Name",
                    "possible_values": [
                        [
                            "rhs.dtype.base_dtype.name",
                            "Attribute"
                        ]
                    ]
                }
            },
            "name_scope_108": {
                "name": {
                    "value": "cg_cond",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_113": {
                "name": {
                    "value": "cg_body",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensordot_120": {
                "variable": {
                    "value": "gamma",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensordot_125": {
                "variable": {
                    "value": "gamma",
                    "type": "Name",
                    "possible_values": []
                },
                "a": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "q",
                    "type": "Name",
                    "possible_values": [
                        [
                            "preconditioner.matvec(r)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_138": {
                "name": {
                    "value": "cg_init",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_140": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "rhs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "norm_151": {
                "tensor": {
                    "value": "rhs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "while_loop_155": {
                "cond": {
                    "value": "stopping_criterion",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "cg_step",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[state]",
                    "type": "List",
                    "possible_values": []
                },
                "maximum_iterations": {
                    "value": "max_iter",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "cg_while",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_109": {
                "tensor": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensordot_115": {
                "a": {
                    "value": "state.p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "operator.matvec(state.p)",
                            "Call"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_118": {
                "x": {
                    "value": "tf.tensordot(state.r, r, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "constant_153": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_160": {
                "input": {
                    "value": "state.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_161": {
                "input": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_162": {
                "input": {
                    "value": "state.p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensordot_118": {
                "a": {
                    "value": "state.r",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                },
                "axes": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_118": {
                "tensor": {
                    "value": "r",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.r - alpha * z",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "sopt/optimizers/tensorflow2/utils/linesearch.py": {
        "tensorflow": {
            "Variable_42": {
                "variable": {
                    "value": "self._oldf0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "-np.inf",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "old_f0",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_43": {
                "variable": {
                    "value": "self._alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "alpha",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_142": {
                "variable": {
                    "value": "self._alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "alpha",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_143": {
                "variable": {
                    "value": "self._alpha_suggested",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "alpha_suggested",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_63": {
                "variable": {
                    "value": "descent_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "descent_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reduce_sum_64": {
                "variable": {
                    "value": "df0",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "descent_dir * gradient",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "map_structure_98": {
                "variable": {
                    "value": "[lsstate_new]",
                    "type": "List",
                    "possible_values": []
                },
                "func": {
                    "value": "tf.stop_gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*structure": {
                    "value": "tf.while_loop(cond=_cond, body=_body, loop_vars=[lsstate0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "norm_164": {
                "variable": {
                    "value": "descent_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "descent_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "reduce_sum_165": {
                "variable": {
                    "value": "df0",
                    "type": "Name",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "descent_dir * gradient",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "constant_174": {
                "variable": {
                    "value": "step_count",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "map_structure_193": {
                "variable": {
                    "value": "[lsstate_new]",
                    "type": "List",
                    "possible_values": []
                },
                "func": {
                    "value": "tf.stop_gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*structure": {
                    "value": "tf.while_loop(cond=_cond, body=_body, loop_vars=[lsstate0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "name_scope_58": {
                "name": {
                    "value": "self._name + '_search'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "name_scope_159": {
                "name": {
                    "value": "self._name + '_search'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "logical_and_87": {
                "x": {
                    "value": "cond1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ],
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ]
                    ]
                },
                "y": {
                    "value": "cond2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ],
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ]
                    ]
                }
            },
            "while_loop_98": {
                "cond": {
                    "value": "_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_body",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lsstate0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "logical_and_182": {
                "x": {
                    "value": "cond1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ],
                        [
                            "state.newf > f0 + self.suff_decr * state.alpha * df0",
                            "Compare"
                        ]
                    ]
                },
                "y": {
                    "value": "cond2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ],
                        [
                            "state.step_count <= self.maxiter",
                            "Compare"
                        ]
                    ]
                }
            },
            "while_loop_194": {
                "cond": {
                    "value": "_cond",
                    "type": "Name",
                    "possible_values": []
                },
                "body": {
                    "value": "_body",
                    "type": "Name",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[lsstate0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_like_60": {
                "input": {
                    "value": "x0",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "constant_97": {
                "value": {
                    "value": "step_count",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "tf.constant(1, dtype='int32')",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_161": {
                "input": {
                    "value": "x0",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "constant_199": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}