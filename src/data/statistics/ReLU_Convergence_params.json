{
    "2_layer_ReLU_net_jupyter.py": {
        "sklearn": {},
        "torch": {
            "device_21": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_31": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([1 if np.random.rand() > 0.5 else -1 for _ in range(h2)])",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(W).float().to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_123": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_128": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0002",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_97": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "28 * 28",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "h2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "100",
                            "Constant"
                        ]
                    ]
                }
            },
            "relu_100": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "28 * 28",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "h1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_110": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "h1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "h2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "100",
                            "Constant"
                        ]
                    ]
                }
            },
            "relu_113": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_114": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "3_layer_ReLU_net_jupyter.py": {
        "torch": {
            "device_13": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_36": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.array([1 if np.random.rand() > 0.5 else -1 for _ in range(h2)])",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(W).float().to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_166": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_173": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0002",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_157": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "h1",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "h2",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_160": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_161": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_131": {
                "variable": {
                    "value": "self.train_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "trainset.train_labels[ind].numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_143": {
                "variable": {
                    "value": "self.train_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array([normalize(np.random.normal(size=d)) for _ in range(n)])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_144": {
                "variable": {
                    "value": "self.train_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "normalize(np.random.normal(size=n))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_154": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "h1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_156": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "28 * 28",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "h1",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "demonstrate_convergence.py": {
        "torch": {}
    }
}