{
    "dataloader.py": {
        "torch": {
            "ConcatDataset_39": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "datasets": {
                    "value": "[MPIIGazeDataset(subject_id, dataset_dir) for subject_id in subject_ids if subject_id != test_subject_id]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "DataLoader_48": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.utils.data.ConcatDataset([MPIIGazeDataset(subject_id, dataset_dir) for subject_id in subject_ids if subject_id != test_subject_id])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Variable",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "use_gpu",
                    "type": "Variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_56": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "MPIIGazeDataset(test_subject_id, dataset_dir)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "use_gpu",
                    "type": "Variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unsqueeze_19": {
                "variable": {
                    "value": "self.images",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.from_numpy(self.images)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_20": {
                "variable": {
                    "value": "self.poses",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.poses",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_21": {
                "variable": {
                    "value": "self.gazes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.gazes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_19": {
                "ndarray": {
                    "value": "self.images",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "edit_dataloader.py": {
        "torch": {
            "ConcatDataset_75": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "datasets": {
                    "value": "[MPIIGazeDataset(subject_id, dataset_dir) for subject_id in subject_ids if subject_id != test_subject_id]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "DataLoader_84": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.utils.data.ConcatDataset([MPIIGazeDataset(subject_id, dataset_dir) for subject_id in subject_ids if subject_id != test_subject_id])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Variable",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "use_gpu",
                    "type": "Variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_92": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "MPIIGazeDataset(test_subject_id, dataset_dir)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "use_gpu",
                    "type": "Variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unsqueeze_55": {
                "variable": {
                    "value": "self.images",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.from_numpy(self.images)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_56": {
                "variable": {
                    "value": "self.poses",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.poses",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_57": {
                "variable": {
                    "value": "self.gazes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.gazes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_55": {
                "ndarray": {
                    "value": "self.images",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "eval_model.py": {
        "torch": {
            "load_18": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(outdir, 'model_state.pth')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "sqrt_110": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_277": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_280": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_287": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_250": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_107": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_108": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_109": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_107": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_121": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_212": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_att.py": {
        "torch": {
            "sqrt_118": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_292": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_295": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_302": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_260": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_115": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_116": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_117": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_115": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_129": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_222": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_att_msk.py": {
        "torch": {
            "sqrt_126": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_301": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_304": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_311": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_268": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_123": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_124": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_125": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_123": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_137": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_230": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_attention.py": {
        "torch": {
            "sqrt_122": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_308": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_311": {
                "variable": {
                    "value": "enc_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "encoder.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_318": {
                "variable": {
                    "value": "enc_scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "enc_optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(encoder.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_322": {
                "variable": {
                    "value": "dec_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "decoder.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_329": {
                "variable": {
                    "value": "dec_scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "dec_optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(decoder.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_274": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_119": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_120": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_121": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "save_362": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "OrderedDict([('args', vars(args)), ('state_dict_enc', encoder.state_dict()), ('state_dict_dec', decoder.state_dict()), ('optimizer', enc_optimizer.state_dict()), ('epoch', epoch), ('angle_error', angle_error)])",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(outdir, 'model_state.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_119": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_133": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_234": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_cyclic.py": {
        "torch": {
            "sqrt_117": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_289": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_292": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CyclicLR_308": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "base_lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "max_lr": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_256": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_114": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_115": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_116": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_114": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_128": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_218": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_ensemble.py": {
        "torch": {
            "sqrt_118": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_289": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_292": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_299": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_257": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_115": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_116": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_117": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_115": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_129": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_219": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_hysts.py": {
        "torch": {
            "sqrt_117": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_271": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_274": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_280": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_249": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_114": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_115": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_116": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "save_307": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "OrderedDict([('args', vars(args)), ('state_dict', model.state_dict()), ('optimizer', optimizer.state_dict()), ('epoch', epoch), ('angle_error', angle_error)])",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(outdir, 'model_state.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_114": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_128": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_211": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_msk.py": {
        "torch": {
            "sqrt_116": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_282": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_285": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_292": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_255": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_113": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_114": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_115": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_113": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_127": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_217": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_rlrop.py": {
        "torch": {
            "sqrt_117": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MSELoss_296": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_299": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_306": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "patience": {
                    "value": "args.patience",
                    "type": "Attribute",
                    "possible_values": []
                },
                "verbose": {
                    "value": "args.verbose",
                    "type": "Attribute",
                    "possible_values": []
                },
                "factor": {
                    "value": "args.factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cooldown": {
                    "value": "args.cooldown",
                    "type": "Attribute",
                    "possible_values": []
                },
                "min_lr": {
                    "value": "args.min_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_256": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_114": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_115": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_116": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_114": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_128": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_218": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/alexnet.py": {
        "torch": {
            "Sequential_16": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1, out_channels=3, kernel_size=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_32": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(6, 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_20": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "192",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_23": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "192",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "384",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_30": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_35": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "in_features": {
                    "value": "4098",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "flatten_60": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "self.classifier[2](self.classifier[1](torch.flatten(x, 1)))",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier[3](x)",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/attention.py": {
        "torch": {
            "device_13": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.first_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.vgg.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_33": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "PReLU_36": {
                "variable": {
                    "value": "self.prelu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTMCell_106": {
                "variable": {
                    "value": "self.lstm_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "embedding_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "hidden_size": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.fc_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.poses_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_112": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.poses_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_126": {
                "variable": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, self.hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_127": {
                "variable": {
                    "value": "cell_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, self.hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "empty_130": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(batch_size, poses.size(-1), self.poses_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "is_available_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/en-vgg-res.py": {
        "torch": {
            "Conv2d_26": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_27": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_28": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_40": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_41": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_62": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.resnet",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_70": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_75": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_76": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_91": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_92": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.resnet(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(F.relu(x))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/enc_msk.py": {
        "torch": {
            "Conv1d_17": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_18": {
                "variable": {
                    "value": "self.upsam",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(60, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_89": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_99": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_107": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_131": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(2048, 512)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_142": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_131": {
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_132": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_133": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_134": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_135": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_136": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_137": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/ens-att.py": {
        "torch": {
            "AvgPool2d_27": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[:17]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_38": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[19:24]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[28:29]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[32:33]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "14336",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "variable": {
                    "value": "self.fc1_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.fc1_l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "variable": {
                    "value": "self.fc1_l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_89": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256 + 512 + 512",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_110": {
                "variable": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(g1, g2, g3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_151": {
                "variable": {
                    "value": "self.first_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_153": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_158": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x.view(x.size(0), -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_159": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_176": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_177": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_178": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3600",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_179": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_189": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_190": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_191": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_192": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_201": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_206": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.u1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.u2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.u3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_122": {
                "variable": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "l * g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "att.sum(1).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ],
                        [
                            "l + g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "u(att)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_40": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_50": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_73": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_74": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "softmax_137": {
                "variable": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "l * g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "att.sum(1).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ],
                        [
                            "l + g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "u(att)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_207": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.first_conv(x)",
                            "Call"
                        ],
                        [
                            "self.VGG_ATT(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x.view(x.size(0), -1), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv1(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv2(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(F.relu(x))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/ensemble-v16.py": {
        "torch": {
            "Conv2d_25": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_26": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_27": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_30": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_38": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_39": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_55": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3600",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_68": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_69": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_80": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_85": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_86": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv1(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv2(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(F.relu(x))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/ensemble.py": {
        "torch": {
            "Conv2d_28": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_29": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_30": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1026",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_48": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_67": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3600",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_70": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_81": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_83": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_92": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_98": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_100": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ],
                        [
                            "self.fc4(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv1(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv2(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(F.relu(x))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/ensembledil16.py": {
        "torch": {
            "Conv2d_28": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_29": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_30": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "self.vgg_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.dialated_conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.vgg_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_2",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.dialated_conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_38": {
                "variable": {
                    "value": "self.vgg_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_3",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_39": {
                "variable": {
                    "value": "self.dialated_conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(6, 6)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.vgg_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_4",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "MaxPool2d_41": {
                "variable": {
                    "value": "self.dilatedpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_43": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_53": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_70": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3600",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_73": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_83": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_84": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_86": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_95": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_100": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_101": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg_1(x)",
                            "Call"
                        ],
                        [
                            "self.vgg_2(x)",
                            "Call"
                        ],
                        [
                            "self.vgg_3(x)",
                            "Call"
                        ],
                        [
                            "self.vgg_4(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv1(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv2(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(F.relu(x))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/ensemblev16.py": {
        "torch": {
            "Conv2d_26": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_27": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_28": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_39": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_40": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3600",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_69": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_70": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_71": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_72": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_81": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_86": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_87": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv1(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(self.conv2(x), kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(F.relu(x))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/inception.py": {
        "torch": {
            "Conv2d_28": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_35": {
                "variable": {
                    "value": "self.inception",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "20480",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_43": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_44": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/izenet.py": {
        "torch": {
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_44": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_49": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_52": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_53": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_55": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_56": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_58": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_59": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv5(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_61": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_62": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/lenet.py": {
        "torch": {
            "Conv2d_19": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3600",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_34": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_37": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_40": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_43": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/levgg.py": {
        "torch": {
            "Conv1d_21": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_22": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_23": {
                "variable": {
                    "value": "self.upsam",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(60, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_53": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "15000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_68": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_69": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 36, 60).bmm(y.view(-1, 60, 256))",
                            "Call"
                        ],
                        [
                            "x.unsqueeze_(0).reshape(-1, 1, 36, 256)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, kernel_size=3, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2(x))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, kernel_size=3, stride=2)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2, x3), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_71": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(-1, 36, 60).bmm(y.view(-1, 60, 256))",
                            "Call"
                        ],
                        [
                            "x.unsqueeze_(0).reshape(-1, 1, 36, 256)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, kernel_size=3, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2(x))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, kernel_size=3, stride=2)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x))",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "self.first_convlayer(x)",
                            "Call"
                        ],
                        [
                            "self.vgg(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.fc1(x.view(x.size(0), -1)), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.fc2(x)",
                            "Call"
                        ],
                        [
                            "torch.cat((x1, x2, x3), dim=1)",
                            "Call"
                        ],
                        [
                            "self.classifier(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_74": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_97": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_104": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_113": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_114": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_130": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3072, 512)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_145": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2, x3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_130": {
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_131": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_132": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_134": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_136": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/msk.py": {
        "torch": {
            "Conv1d_17": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_18": {
                "variable": {
                    "value": "self.upsam",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "(60, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_59": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_79": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "25088",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_89": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_95": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_116": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_117": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_133": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(3072, 512)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_148": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x1, x2, x3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_133": {
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_134": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_136": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_137": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_138": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_139": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/playground.py": {
        "torch": {
            "Embedding_14": {
                "variable": {
                    "value": "embeds",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/resnet50.py": {
        "torch": {
            "Conv2d_27": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_28": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.resnet",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_36": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_41": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_42": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/resnet_preact.py": {
        "torch": {
            "BatchNorm2d_22": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.shortcut",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_52": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_54": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(y)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_channels[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_99": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "n_channels[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_106": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.feature_size + 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_111": {
                "variable": {
                    "value": "stage",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_128": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool2d_129": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.relu(self.bn1(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.stage1(x)",
                            "Call"
                        ],
                        [
                            "self.stage2(x)",
                            "Call"
                        ],
                        [
                            "self.stage3(x)",
                            "Call"
                        ],
                        [
                            "F.relu(self.bn(x), inplace=True)",
                            "Call"
                        ],
                        [
                            "F.adaptive_avg_pool2d(x, output_size=1)",
                            "Call"
                        ],
                        [
                            "self._forward_conv(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_135": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_104": {
                "*size": {
                    "value": "*input_shape",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "models/vgg16.py": {
        "torch": {
            "Conv2d_25": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_26": {
                "variable": {
                    "value": "first_conv.weigth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_27": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_49": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/vgg19.py": {
        "torch": {
            "Conv2d_33": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_34": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_35": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_42": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_48": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/vgg19_edit.py": {
        "torch": {
            "Conv2d_28": {
                "variable": {
                    "value": "first_conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Parameter_29": {
                "variable": {
                    "value": "first_conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w4",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "w1 + w2 + w3",
                            "BinOp"
                        ],
                        [
                            "w4.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_30": {
                "variable": {
                    "value": "first_conv.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vgg_firstlayer.state_dict()['bias']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "self.vgg_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_35": {
                "variable": {
                    "value": "self.dropout_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.vgg_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_2",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_37": {
                "variable": {
                    "value": "self.dropout_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_38": {
                "variable": {
                    "value": "self.vgg_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_3",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "variable": {
                    "value": "self.dropout_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.vgg_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "vgg_4",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_43": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3072",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1002",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_53": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x.view(x.size(0), -1))",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/vgg_att.py": {
        "torch": {
            "Linear_25": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_57": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[:22]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[22:32]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[32:42]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_66": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[42:50]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_69": {
                "variable": {
                    "value": "self.fc1_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_70": {
                "variable": {
                    "value": "self.fc1_l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_71": {
                "variable": {
                    "value": "self.fc1_l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_73": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256 + 512 + 512",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_94": {
                "variable": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(g1, g2, g3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_148": {
                "variable": {
                    "value": "self.first_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_150": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_155": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x.view(x.size(0), -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_156": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_45": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "variable": {
                    "value": "self.u1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.u2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "variable": {
                    "value": "self.u3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_111": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "softmax_120": {
                "variable": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "l * g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "att.sum(1).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ],
                        [
                            "l + g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "u(att)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_44": {
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_110": {
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_135": {
                "variable": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "l * g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "att.sum(1).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ],
                        [
                            "l + g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "u(att)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_38": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "x",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "self.first_conv(x)",
                            "Call"
                        ],
                        [
                            "self.VGG_ATT(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x.view(x.size(0), -1), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "num_features": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "self.first_conv(x)",
                            "Call"
                        ],
                        [
                            "self.VGG_ATT(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x.view(x.size(0), -1), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "ReLU_42": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_104": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_106": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "x",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "self.first_conv(x)",
                            "Call"
                        ],
                        [
                            "self.VGG_ATT(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x.view(x.size(0), -1), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_107": {
                "num_features": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "cfg",
                            "Name"
                        ],
                        [
                            "self.first_conv(x)",
                            "Call"
                        ],
                        [
                            "self.VGG_ATT(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x.view(x.size(0), -1), inplace=True)",
                            "Call"
                        ],
                        [
                            "torch.cat([x, y], dim=1)",
                            "Call"
                        ],
                        [
                            "self.fc3(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "ReLU_108": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "models/vgg_att_prt.py": {
        "torch": {
            "AvgPool2d_28": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[:17]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[19:24]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[28:29]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.conv_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.features)[32:33]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_84": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "14336",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "variable": {
                    "value": "self.fc1_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "variable": {
                    "value": "self.fc1_l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.fc1_l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256 + 512 + 512",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(g1, g2, g3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_152": {
                "variable": {
                    "value": "self.first_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_154": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "502",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_159": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x.view(x.size(0), -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_160": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "variable": {
                    "value": "self.u1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_66": {
                "variable": {
                    "value": "self.u2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_67": {
                "variable": {
                    "value": "self.u3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_123": {
                "variable": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "l * g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "att.sum(1).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ],
                        [
                            "l + g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "u(att)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_75": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "softmax_138": {
                "variable": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "l * g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "att.sum(1).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ],
                        [
                            "l + g.unsqueeze(2).unsqueeze(3)",
                            "BinOp"
                        ],
                        [
                            "u(att)",
                            "Call"
                        ],
                        [
                            "att.view(att.size(0), att.size(1), -1)",
                            "Call"
                        ],
                        [
                            "F.softmax(att, dim=2)",
                            "Call"
                        ],
                        [
                            "att.view(size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "pretrained_main.py": {
        "torch": {
            "sqrt_101": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x ** 2 + y ** 2 + z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_233": {
                "variable": {
                    "value": "model.features[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_234": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(256 * 6 * 6, 500)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MSELoss_241": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_244": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.base_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "args.nesterov",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_250": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.optim.SGD(model.parameters(), lr=args.base_lr, momentum=args.momentum, weight_decay=args.weight_decay, nesterov=args.nesterov)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.milestones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.lr_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_212": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sin_98": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sin_99": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cos_100": {
                "input": {
                    "value": "angles[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_234": {
                "in_features": {
                    "value": "256 * 6 * 6",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_235": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_236": {
                "in_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_270": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "OrderedDict([('args', vars(args)), ('state_dict', model.state_dict()), ('optimizer', optimizer.state_dict()), ('epoch', epoch), ('angle_error', angle_error)])",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(outdir, 'model_state.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_98": {
                "input": {
                    "value": "angles[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "acos_112": {
                "input": {
                    "value": "angles",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "pred_x * label_x + pred_y * label_y + pred_z * label_z",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_186": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}