{
    "model.py": {
        "torch": {
            "Linear_17": {
                "variable": {
                    "value": "self.kqv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "emb_s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "3 * emb_s",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Dropout_18": {
                "variable": {
                    "value": "self.dp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dp1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "float"
                        ]
                    ]
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "LayerNorm_22": {
                "variable": {
                    "value": "self.ln1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "LayerNorm_23": {
                "variable": {
                    "value": "self.ln2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.mlp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(emb, 4 * emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_33": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(self.m, emb_s)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "einsum_43": {
                "variable": {
                    "value": "wtx",
                    "type": "variable",
                    "possible_values": []
                },
                "equation": {
                    "value": "bti,mi->btm",
                    "type": "str",
                    "possible_values": []
                },
                "*operands": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + self.forward_multi_attn(self.ln1(x))",
                            "BinOp"
                        ],
                        [
                            "x + self.mlp(self.ln2(x))",
                            "BinOp"
                        ],
                        [
                            "self.patch_emb(self.uf(x).transpose(1, 2)) + self.pos_emb",
                            "BinOp"
                        ],
                        [
                            "torch.cat([self.cls_token.repeat(b, 1, 1), x], dim=1)",
                            "Call"
                        ],
                        [
                            "self.mains(x)",
                            "Call"
                        ],
                        [
                            "self.head(x[:, 0, :])",
                            "Call"
                        ]
                    ]
                }
            },
            "split_48": {
                "variable": {
                    "value": "(k, q, v)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.kqv(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "self.emb_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "einsum_50": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "equation": {
                    "value": "bti,bi->bt",
                    "type": "str",
                    "possible_values": []
                },
                "*operands": {
                    "value": "qp",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "unsqueeze_50": {
                "variable": {
                    "value": "D",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "einsum_51": {
                "variable": {
                    "value": "kptv",
                    "type": "variable",
                    "possible_values": []
                },
                "equation": {
                    "value": "bin,bim->bnm",
                    "type": "str",
                    "possible_values": []
                },
                "*operands": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "split_60": {
                "variable": {
                    "value": "splits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + self.forward_multi_attn(self.ln1(x))",
                            "BinOp"
                        ],
                        [
                            "x + self.mlp(self.ln2(x))",
                            "BinOp"
                        ],
                        [
                            "self.patch_emb(self.uf(x).transpose(1, 2)) + self.pos_emb",
                            "BinOp"
                        ],
                        [
                            "torch.cat([self.cls_token.repeat(b, 1, 1), x], dim=1)",
                            "Call"
                        ],
                        [
                            "self.mains(x)",
                            "Call"
                        ],
                        [
                            "self.head(x[:, 0, :])",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.emb_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_61": {
                "variable": {
                    "value": "mha",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.forward_single_attn(tnsr) for tnsr in splits]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Unfold_74": {
                "variable": {
                    "value": "self.uf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "[patch_pix, patch_pix]",
                    "type": "List",
                    "possible_values": []
                },
                "stride": {
                    "value": "[patch_pix, patch_pix]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Parameter_75": {
                "variable": {
                    "value": "self.pos_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, tokens_cnt, emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_76": {
                "variable": {
                    "value": "self.dp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dp3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "float"
                        ]
                    ]
                }
            },
            "Linear_77": {
                "variable": {
                    "value": "self.head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "class_cnt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_78": {
                "variable": {
                    "value": "self.patch_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "patch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "patch_pix * patch_pix",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Parameter_79": {
                "variable": {
                    "value": "self.cls_token",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.rand(1, 1, emb)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "variable": {
                    "value": "self.mains",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[performer_attn_block(kernel_ratio=kernel_ratio) for _ in range(layer_cnt)]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.cls_token.repeat(b, 1, 1), x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "4 * emb",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "GELU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_28": {
                "in_features": {
                    "value": "4 * emb",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Dropout_29": {
                "p": {
                    "value": "dp2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.1",
                            "float"
                        ]
                    ]
                }
            },
            "randn_33": {
                "*size": {
                    "value": "self.m",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "emb_s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                }
            },
            "exp_44": {
                "input": {
                    "value": "wtx - xd",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "einsum_53": {
                "equation": {
                    "value": "bti,bni->btn",
                    "type": "str",
                    "possible_values": []
                },
                "*operands": {
                    "value": "qp",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_75": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "tokens_cnt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image_pix // patch_pix * (image_pix // patch_pix)",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "rand_79": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "emb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "emb_s * head_cnt",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "DataLoader_38": {
                "variable": {
                    "value": "data_train",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "mnist_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.MNIST(root='MNIST/', train=True, download=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "128",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_42": {
                "variable": {
                    "value": "data_test",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "mnist_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.MNIST(root='MNIST/', train=True, download=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Adam_46": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2e-05",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_47": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_8": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}