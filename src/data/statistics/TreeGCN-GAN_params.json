{
    "losses.py": {
        "tensorflow": {
            "uniform_9": {
                "variable": {
                    "value": "eps",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[batch_size, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "minval": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_15": {
                "variable": {
                    "value": "grad_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_sum(tf.square(grad), axis=[0, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_16": {
                "variable": {
                    "value": "grad_pen",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "(grad_norm - 1.0) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_mean_4": {
                "input_tensor": {
                    "value": "D_fake",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "reduce_mean_7": {
                "input_tensor": {
                    "value": "D_real",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "GradientTape_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_15": {
                "input_tensor": {
                    "value": "tf.square(grad)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "square_15": {
                "x": {
                    "value": "grad",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "gptape.gradient(out, x_cap)[0]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "main.py": {
        "tensorflow": {
            "Adam_27": {
                "variable": {
                    "value": "gen_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_28": {
                "variable": {
                    "value": "critic_opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "beta_1": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "beta_2": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Checkpoint_29": {
                "variable": {
                    "value": "ckpt",
                    "type": "Variable",
                    "possible_values": []
                },
                "step": {
                    "value": "tf.Variable(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "model": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TreeGAN(K, latent_dim, batch_size)",
                            "Call"
                        ]
                    ]
                },
                "gopt": {
                    "value": "gen_opt",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.keras.optimizers.Adam(lr=0.0001, beta_1=0.5, beta_2=0.9)",
                            "Call"
                        ]
                    ]
                },
                "copt": {
                    "value": "critic_opt",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.keras.optimizers.Adam(lr=0.0001, beta_1=0.5, beta_2=0.9)",
                            "Call"
                        ]
                    ]
                }
            },
            "CheckpointManager_30": {
                "variable": {
                    "value": "manager",
                    "type": "Variable",
                    "possible_values": []
                },
                "checkpoint": {
                    "value": "ckpt",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.train.Checkpoint(step=tf.Variable(1), model=model, gopt=gen_opt, copt=critic_opt)",
                            "Call"
                        ]
                    ]
                },
                "directory": {
                    "value": "treegan_ckpt",
                    "type": "str",
                    "possible_values": []
                },
                "max_to_keep": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Mean_41": {
                "variable": {
                    "value": "train_gloss",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Mean_42": {
                "variable": {
                    "value": "train_closs",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Mean_43": {
                "variable": {
                    "value": "val_gloss",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_29": {
                "initial_value": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "tensorflow": {
            "Variable_18": {
                "variable": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.initializers.GlorotUniform()(shape=[1, self.degree, self.out_feat])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "Bias",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Variable_19": {
                "variable": {
                    "value": "self.W_upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.initializers.GlorotUniform()(shape=[child_node, self.input_feat, self.degree * self.input_feat])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "WeightMat",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LeakyReLU_20": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Flatten_81": {
                "variable": {
                    "value": "self.flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_84": {
                "variable": {
                    "value": "self.fc_final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_37": {
                "variable": {
                    "value": "next_level",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "next_level",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "tf.expand_dims(tree[-1], axis=2) @ self.W_upsample",
                            "BinOp"
                        ],
                        [
                            "self.act(next_level)",
                            "Call"
                        ],
                        [
                            "tf.reshape(next_level, [self.batch_size, self.child_node * self.degree, self.input_feat])",
                            "Call"
                        ],
                        [
                            "self.F_K[1](self.F_K[0](next_level))",
                            "Call"
                        ],
                        [
                            "next_level + tf.reshape(tf.tile(Gath, [1, 1, self.degree]), [self.batch_size, -1, self.out_feat])",
                            "BinOp"
                        ],
                        [
                            "self.F_K[1](self.F_K[0](tree[-1]))",
                            "Call"
                        ],
                        [
                            "next_level + Gath",
                            "BinOp"
                        ],
                        [
                            "self.act(next_level + tf.tile(self.b, [1, self.child_node, 1]))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[self.batch_size, self.child_node * self.degree, self.input_feat]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "GradientTape_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "uniform_127": {
                "shape": {
                    "value": "[batch_size, 1, latent_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Dense_16": {
                "units": {
                    "value": "self.out_feat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_17": {
                "units": {
                    "value": "self.out_feat",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv1D_78": {
                "filters": {
                    "value": "filters[i]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[latent_dim, 256, 256, 256, 128, 128, 128, 3]",
                            "List"
                        ],
                        [
                            "[3, 64, 128, 256, 512, 1024]",
                            "List"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "LeakyReLU_79": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_82": {
                "units": {
                    "value": "units[i]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "[128, 64]",
                            "List"
                        ]
                    ]
                }
            },
            "LeakyReLU_83": {
                "alpha": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "GradientTape_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "uniform_116": {
                "shape": {
                    "value": "[batch_size, 1, latent_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "GlorotUniform_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GlorotUniform_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_30": {
                "tensor": {
                    "value": "tf.tile(Q, [1, 1, repeat_num])",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, -1, self.out_feat]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "expand_dims_35": {
                "input": {
                    "value": "tree[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_39": {
                "tensor": {
                    "value": "tf.tile(Gath, [1, 1, self.degree])",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, -1, self.out_feat]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "uniform_106": {
                "shape": {
                    "value": "[batch_size, 1, latent_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_30": {
                "input": {
                    "value": "Q",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.W_A[layer_no](tree[layer_no])",
                            "Call"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, 1, repeat_num]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_39": {
                "input": {
                    "value": "Gath",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "Gath + tf.reshape(tf.tile(Q, [1, 1, repeat_num]), [self.batch_size, -1, self.out_feat])",
                            "BinOp"
                        ]
                    ]
                },
                "multiples": {
                    "value": "[1, 1, self.degree]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tile_45": {
                "input": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[1, self.child_node, 1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "tensorflow": {
            "convert_to_tensor_23": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.load(path)",
                            "Call"
                        ],
                        [
                            "tf.convert_to_tensor(X, dtype='float32')",
                            "Call"
                        ],
                        [
                            "model.gen(tree, training=False)[idx]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_24": {
                "variable": {
                    "value": "Y",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "Y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cat_dict[path.split(os.path.sep)[1]]",
                            "Subscript"
                        ],
                        [
                            "tf.convert_to_tensor(Y, dtype='int32')",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "shuffle_19": {
                "value": {
                    "value": "len(path)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "batch_19": {
                "tensors": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "16",
                            "Constant"
                        ],
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "drop_remainder": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "uniform_44": {
                "shape": {
                    "value": "[batch_size, 1, latent_dim]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}