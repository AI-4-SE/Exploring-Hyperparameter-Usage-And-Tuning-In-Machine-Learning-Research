{
    "training/base.py": {
        "torch": {
            "load_77": {
                "variable": {
                    "value": "items_to_load",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "save_74": {
                "obj": {
                    "value": "items_to_save",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self._get_items_to_store()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "model_path",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "training/dvib.py": {
        "torch": {
            "Parameter_44": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(self.z_dim)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_45": {
                "variable": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(self.z_dim)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Normal_46": {
                "variable": {
                    "value": "self.prior",
                    "type": "Attribute",
                    "possible_values": []
                },
                "loc": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Independent_47": {
                "variable": {
                    "value": "self.prior",
                    "type": "Attribute",
                    "possible_values": []
                },
                "base_distribution": {
                    "value": "self.prior",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reinterpreted_batch_ndims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_52": {
                "variable": {
                    "value": "self.mu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.full((self.z_dim,), 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_53": {
                "variable": {
                    "value": "self.mu3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.full((self.z_dim,), 2.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Normal_54": {
                "variable": {
                    "value": "self.prior2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "loc": {
                    "value": "self.mu2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Independent_55": {
                "variable": {
                    "value": "self.prior2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "base_distribution": {
                    "value": "self.prior2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reinterpreted_batch_ndims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Normal_56": {
                "variable": {
                    "value": "self.prior3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "loc": {
                    "value": "self.mu3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Independent_57": {
                "variable": {
                    "value": "self.prior3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "base_distribution": {
                    "value": "self.prior3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reinterpreted_batch_ndims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_44": {
                "*size": {
                    "value": "self.z_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_45": {
                "*size": {
                    "value": "self.z_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_52": {
                "size": {
                    "value": "(self.z_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "full_53": {
                "size": {
                    "value": "(self.z_dim,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "2.0",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "utils/modules.py": {
        "torch": {
            "Sequential_22": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.pretrained._modules",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.pretrained.features.children())",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.pretrained.avgpool.modules())",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.pretrained.classifier.children())[:output_layer]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "flatten_46": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.net(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.classifier(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.net(z)",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.pretrained.features.children())",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_56": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.pretrained.avgpool.modules())",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "flatten_63": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.net(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.classifier(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.net(z)",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(self.pretrained.features.children())[:output_layer]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_85": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_116": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_138": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(size1 + size2, 1024)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Independent_105": {
                "base_distribution": {
                    "value": "Normal(loc=mu, scale=sigma)",
                    "type": "Call",
                    "possible_values": []
                },
                "reinterpreted_batch_ndims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Independent_130": {
                "base_distribution": {
                    "value": "Normal(loc=x, scale=self.scale)",
                    "type": "Call",
                    "possible_values": []
                },
                "reinterpreted_batch_ndims": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_86": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_89": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_90": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_91": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_92": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_93": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softplus_103": {
                "input": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "softplus(sigma) + 1e-07",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Normal_105": {
                "loc": {
                    "value": "mu",
                    "type": "Variable",
                    "possible_values": []
                },
                "scale": {
                    "value": "sigma",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "softplus(sigma) + 1e-07",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Dropout_117": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_118": {
                "in_features": {
                    "value": "z_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_119": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_120": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_121": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_123": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_125": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Normal_130": {
                "loc": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.net(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.classifier(x)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.features(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.net(z)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "self.scale",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_139": {
                "in_features": {
                    "value": "size1 + size2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_140": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_141": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_142": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_143": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_148": {
                "tensors": {
                    "value": "[x1, x2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_149": {
                "tensors": {
                    "value": "[torch.roll(x1, 1, 0), x2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_150": {
                "input": {
                    "value": "-pos",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "mean_150": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "roll_149": {
                "input": {
                    "value": "x1",
                    "type": "Variable",
                    "possible_values": []
                },
                "shifts": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}