{
    "batch_gen.py": {
        "torch": {
            "zeros_50": {
                "variable": {
                    "value": "batch_input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(batch_input)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "np.shape(batch_input[0])[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_52": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(batch_input)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_54": {
                "variable": {
                    "value": "batch_input_tensor[i, :, :np.shape(batch_input[i])[1]]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "batch_input[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_55": {
                "variable": {
                    "value": "batch_target_tensor[i, :np.shape(batch_target[i])[0]]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "batch_target[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_56": {
                "variable": {
                    "value": "mask[i, :, :np.shape(batch_target[i])[0]]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "np.shape(batch_target[i])[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ones_51": {
                "*size": {
                    "value": "len(batch_input)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(length_of_sequences)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "device_11": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1538574472",
                            "Constant"
                        ]
                    ]
                }
            },
            "manual_seed_all_15": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1538574472",
                            "Constant"
                        ]
                    ]
                }
            },
            "is_available_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {}
    }
}