{
    "examples/python-guide/advanced_example.py": {},
    "examples/python-guide/simple_example.py": {},
    "examples/python-guide/sklearn_example.py": {
        "GridSearchCV_68": {
            "variable": {
                "value": "gbm",
                "possible_values": []
            },
            "estimator": {
                "value": "estimator",
                "possible_values": [
                    "lgb.LGBMRegressor(num_leaves=31)"
                ]
            },
            "param_grid": {
                "value": "param_grid",
                "possible_values": [
                    "{'learning_rate': [0.01, 0.1, 1], 'n_estimators': [20, 40]}"
                ]
            },
            "cv": {
                "value": "3",
                "possible_values": []
            }
        }
    },
    "python-package/lightgbm/compat.py": {
        "LGBMDeprecationWarning_157": {},
        "Series_69": {},
        "DataFrame_74": {},
        "DataTable_104": {}
    },
    "tests/python_package_test/test_basic.py": {
        "TestBasic_13": {}
    },
    "tests/python_package_test/test_consistency.py": {
        "FileLoader_11": {},
        "TestEngine_66": {}
    },
    "tests/python_package_test/test_engine.py": {
        "TestEngine_28": {},
        "TimeSeriesSplit_468": {
            "variable": {
                "value": "tss",
                "possible_values": []
            },
            "n_splits": {
                "value": "3",
                "possible_values": []
            }
        },
        "GroupKFold_494": {
            "n_splits": {
                "value": "3",
                "possible_values": []
            }
        }
    },
    "tests/python_package_test/test_plotting.py": {
        "TestBasic_17": {}
    },
    "tests/python_package_test/test_sklearn.py": {
        "TestSklearn_29": {},
        "GridSearchCV_120": {
            "variable": {
                "value": "gbm",
                "possible_values": []
            },
            "estimator": {
                "value": "lgb.LGBMRegressor()",
                "possible_values": []
            },
            "param_grid": {
                "value": "params",
                "possible_values": []
            },
            "cv": {
                "value": "3",
                "possible_values": []
            }
        }
    }
}