{
    "branching_dqn.py": {
        "torch": {
            "Adam_90": {
                "variable": {
                    "value": "adam",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "agent.q.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_42": {
                "variable": {
                    "value": "states",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "b_states",
                    "type": "variable",
                    "possible_values": [
                        [
                            "memory.sample(params.batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_43": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "b_actions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "memory.sample(params.batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_43": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "states.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_44": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "b_rewards",
                    "type": "variable",
                    "possible_values": [
                        [
                            "memory.sample(params.batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_44": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_45": {
                "variable": {
                    "value": "next_states",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "b_next_states",
                    "type": "variable",
                    "possible_values": [
                        [
                            "memory.sample(params.batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_46": {
                "variable": {
                    "value": "masks",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "b_masks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "memory.sample(params.batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_46": {
                "variable": {
                    "value": "masks",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mse_loss_63": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "expected_q_vals",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rewards + max_next_q_vals * 0.99 * masks",
                            "BinOp"
                        ]
                    ]
                },
                "target": {
                    "value": "current_q_values",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.q(states).gather(2, actions).squeeze(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_35": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.q(x).squeeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_56": {
                "variable": {
                    "value": "argmax",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.q(next_states)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "enjoy.py": {
        "torch": {
            "load_23": {
                "f": {
                    "value": "'./runs/{}/model_state_dict'.format(args.env)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "argmax_35": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "agent(s).squeeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_35": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "no_grad_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Sequential_14": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(obs, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.value_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.adv_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "ac",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ac",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(obs, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.value_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleList_48": {
                "variable": {
                    "value": "self.adv_heads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Linear(128, n) for i in range(ac_dim)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_54": {
                "variable": {
                    "value": "advs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[l(out) for l in self.adv_heads]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_14": {
                "in_features": {
                    "value": "obs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "obs",
                            "Method Argument"
                        ],
                        [
                            "obs",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_16": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_42": {
                "in_features": {
                    "value": "obs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "obs",
                            "Method Argument"
                        ],
                        [
                            "obs",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_44": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "save_30": {
                "obj": {
                    "value": "agent.q.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(path, 'model_state_dict')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_117": {
                "data": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "reshape_117": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shape": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    }
}