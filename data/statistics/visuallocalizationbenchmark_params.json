{
    "local_feature_evaluation/matchers.py": {
        "torch": {
            "arange_10": {
                "variable": {
                    "value": "ids1",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "sim.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1.device",
                            "Attribute"
                        ],
                        [
                            "descriptors1.device",
                            "Attribute"
                        ],
                        [
                            "descriptors1.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "stack_12": {
                "variable": {
                    "value": "matches",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ids1[mask], nn12[mask]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "t_12": {
                "variable": {
                    "value": "matches",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "topk_22": {
                "variable": {
                    "value": "(nns_sim, nns)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "sim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ]
                    ]
                },
                "k": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_23": {
                "variable": {
                    "value": "nns_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2 - 2 * nns_sim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "topk_30": {
                "variable": {
                    "value": "(nns_sim, nns)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "sim.t()",
                    "type": "Call",
                    "possible_values": []
                },
                "k": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_31": {
                "variable": {
                    "value": "nns_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2 - 2 * nns_sim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_38": {
                "variable": {
                    "value": "ids1",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "sim.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1.device",
                            "Attribute"
                        ],
                        [
                            "descriptors1.device",
                            "Attribute"
                        ],
                        [
                            "descriptors1.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "min_39": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ratios12 <= ratio",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "stack_42": {
                "variable": {
                    "value": "matches",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ids1[mask], nn12[mask]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "topk_53": {
                "variable": {
                    "value": "(nns_sim, nns)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "sim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ]
                    ]
                },
                "k": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_54": {
                "variable": {
                    "value": "nns_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2 - 2 * nns_sim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "topk_61": {
                "variable": {
                    "value": "(nns_sim, nns)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "sim.t()",
                    "type": "Call",
                    "possible_values": []
                },
                "k": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sqrt_62": {
                "variable": {
                    "value": "nns_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2 - 2 * nns_sim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_69": {
                "variable": {
                    "value": "ids1",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "sim.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1.device",
                            "Attribute"
                        ],
                        [
                            "descriptors1.device",
                            "Attribute"
                        ],
                        [
                            "descriptors1.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "min_70": {
                "input": {
                    "value": "ratios12 <= ratio",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "stack_73": {
                "variable": {
                    "value": "matches",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ids1[mask], nn12[mask]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "max_8": {
                "input": {
                    "value": "sim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_9": {
                "input": {
                    "value": "sim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ],
                        [
                            "descriptors1 @ descriptors2.t()",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "local_feature_evaluation/modify_database_with_custom_features_and_matches.py": {
        "torch": {
            "is_available_167": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_168": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if use_cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "from_numpy_122": {
                "variable": {
                    "value": "descriptors1",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "D1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.load(features_path1)['descriptors']",
                            "Subscript"
                        ],
                        [
                            "D1[:min(D1.shape[0], 25000), :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_123": {
                "variable": {
                    "value": "descriptors2",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "D2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.load(features_path2)['descriptors']",
                            "Subscript"
                        ],
                        [
                            "D2[:min(D2.shape[0], 25000), :]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "local_feature_evaluation/reconstruction_pipeline.py": {
        "torch": {
            "is_available_309": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_310": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if use_cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "from_numpy_198": {
                "variable": {
                    "value": "descriptors1",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.load(features_path1)['descriptors']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_199": {
                "variable": {
                    "value": "descriptors2",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.load(features_path2)['descriptors']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "local_feature_evaluation/reconstruction_pipeline_aachen_v1_1.py": {
        "torch": {
            "is_available_309": {
                "variable": {
                    "value": "use_cuda",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_310": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if use_cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "from_numpy_198": {
                "variable": {
                    "value": "descriptors1",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.load(features_path1)['descriptors']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_199": {
                "variable": {
                    "value": "descriptors2",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.load(features_path2)['descriptors']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}