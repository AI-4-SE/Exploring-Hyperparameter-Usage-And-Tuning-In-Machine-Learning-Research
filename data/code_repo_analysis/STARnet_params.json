{
    "autoencoder_v4.py": {
        "torch": {
            "Sequential_40": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_ch, out_ch, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.mpconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.MaxPool2d(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pad_97": {
                "variable": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.inc(x)",
                            "Call"
                        ],
                        [
                            "self.up(x1)",
                            "Call"
                        ],
                        [
                            "F.pad(x1, (diffX // 2, diffX - diffX // 2, diffY // 2, diffY - diffY // 2))",
                            "Call"
                        ],
                        [
                            "x1",
                            "Method Argument"
                        ]
                    ]
                },
                "pad": {
                    "value": "(diffX // 2, diffX - diffX // 2, diffY // 2, diffY - diffY // 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_104": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x2, x1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_112": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_34": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.up1(x6, x5)",
                            "Call"
                        ],
                        [
                            "self.up2(x, x4)",
                            "Call"
                        ],
                        [
                            "self.up3(x, x3)",
                            "Call"
                        ],
                        [
                            "self.up4(x, x2)",
                            "Call"
                        ],
                        [
                            "self.up5(x, x1)",
                            "Call"
                        ],
                        [
                            "self.outc(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.mpconv(x)",
                            "Call"
                        ],
                        [
                            "torch.cat([x2, x1], dim=1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Upsample_84": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2.0",
                    "type": "float",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_86": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_ch // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_ch // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ],
                        [
                            "in_ch",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_42": {
                "num_features": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_43": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "in_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "num_features": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ],
                        [
                            "out_ch",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_46": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_68": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "base_networks.py": {
        "torch": {
            "Linear_9": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv3d_78": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ConvTranspose2d_112": {
                "variable": {
                    "value": "self.deconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_147": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_148": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "add_184": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn(self.fc(x))",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv(x))",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv(x))",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.deconv(x))",
                            "Call"
                        ],
                        [
                            "self.deconv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "torch.add(out, residual)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "torch.add(out, residual)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.ps(self.conv(x)))",
                            "Call"
                        ],
                        [
                            "self.ps(self.conv(x))",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.up(x)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.upsample(x)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "residual",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "variable"
                        ],
                        [
                            "x",
                            "variable"
                        ]
                    ]
                }
            },
            "Conv3d_194": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv3d_195": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "add_231": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn(self.fc(x))",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv(x))",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv(x))",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.deconv(x))",
                            "Call"
                        ],
                        [
                            "self.deconv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "torch.add(out, residual)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv1(x))",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.conv2(out))",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "torch.add(out, residual)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.bn(self.ps(self.conv(x)))",
                            "Call"
                        ],
                        [
                            "self.ps(self.conv(x))",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.up(x)",
                            "Call"
                        ],
                        [
                            "self.act(out)",
                            "Call"
                        ],
                        [
                            "self.upsample(x)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "residual",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "variable"
                        ],
                        [
                            "x",
                            "variable"
                        ]
                    ]
                }
            },
            "Conv2d_353": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ],
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "output_size * scale_factor ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PixelShuffle_354": {
                "variable": {
                    "value": "self.ps",
                    "type": "Attribute",
                    "possible_values": []
                },
                "upscale_factor": {
                    "value": "scale_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "scale_factor",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_394": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "BatchNorm1d_13": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_19": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_48": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_54": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_88": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_116": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_122": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_152": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_158": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_199": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_205": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_358": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_364": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_398": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "InstanceNorm1d_15": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_21": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_50": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_56": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_84": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_90": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_118": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_124": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_154": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_160": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_201": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filter",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ],
                        [
                            "num_filter",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_207": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "InstanceNorm2d_360": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "PReLU_366": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PReLU_400": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_23": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_58": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_92": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_126": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_162": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_209": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_368": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "PixelShuffle_391": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_402": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_432": {
                "variable": {
                    "value": "self.upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=scale_factor, mode='nearest')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Tanh_25": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_60": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_94": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_128": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_164": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_211": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_370": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_392": {
                "num_features": {
                    "value": "n_feat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_feat",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Tanh_404": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_27": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_62": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_96": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_130": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_166": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_213": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_372": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_406": {
                "variable": {
                    "value": "self.act",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Upsample_433": {
                "scale_factor": {
                    "value": "scale_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "scale_factor",
                            "Method Argument"
                        ]
                    ]
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "dataset.py": {
        "torch": {
            "from_numpy_173": {
                "variable": {
                    "value": "flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_174": {
                "variable": {
                    "value": "flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_210": {
                "variable": {
                    "value": "flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_211": {
                "variable": {
                    "value": "flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_212": {
                "variable": {
                    "value": "gt_flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "gt_flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_213": {
                "variable": {
                    "value": "gt_flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "gt_flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_247": {
                "variable": {
                    "value": "flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_248": {
                "variable": {
                    "value": "flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_249": {
                "variable": {
                    "value": "gt_flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "gt_flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_250": {
                "variable": {
                    "value": "gt_flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "gt_flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_274": {
                "variable": {
                    "value": "flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_275": {
                "variable": {
                    "value": "flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_297": {
                "variable": {
                    "value": "flow_f",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_f.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_298": {
                "variable": {
                    "value": "flow_b",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "flow_b.transpose(2, 0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "dbpns_rbpn.py": {
        "torch": {}
    },
    "eval.py": {
        "torch": {
            "DataLoader_58": {
                "variable": {
                    "value": "testing_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_test_set(opt.data_dir, opt.upscale_factor, opt.file_list)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.testBatchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "manual_seed_52": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_79": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FBPNSR_RBPN_V1_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model.cuda(gpus_list[0])",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V1(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model",
                            "Method Argument"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_54": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_92": {
                "f": {
                    "value": "opt.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "is_available_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_186": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_171": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "eval_star_t_hr.py": {
        "torch": {
            "DataLoader_58": {
                "variable": {
                    "value": "testing_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_test_set_interp(opt.data_dir, opt.file_list)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.testBatchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "manual_seed_52": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_80": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FBPNSR_RBPN_V1_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model.cuda(gpus_list[0])",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V1(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model",
                            "Method Argument"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_54": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_93": {
                "f": {
                    "value": "opt.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "is_available_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_186": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_171": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v1.py": {
        "torch": {
            "Sequential_37": {
                "variable": {
                    "value": "self.warp1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*warping1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_43": {
                "variable": {
                    "value": "self.warp2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*warping2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.motion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*motion_net",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_55": {
                "variable": {
                    "value": "self.interp_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*interp_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "self.motion_up_f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_f",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.motion_up_b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_77": {
                "variable": {
                    "value": "self.motion_down",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_down",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_183": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v1_ref.py": {
        "torch": {
            "Sequential_66": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v2.py": {
        "torch": {
            "Sequential_37": {
                "variable": {
                    "value": "self.motion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*motion_net",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.t_net_hr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*t_net2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Upsample_44": {
                "variable": {
                    "value": "self.upsample_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "scale_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "scale_factor",
                            "Method Argument"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_50": {
                "variable": {
                    "value": "self.interp_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*interp_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.motion_up_f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_f",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "variable": {
                    "value": "self.motion_up_b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.motion_down",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_down",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_179": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v2_ref.py": {
        "torch": {
            "Sequential_66": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v3.py": {
        "torch": {
            "Sequential_37": {
                "variable": {
                    "value": "self.motion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*motion_net",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_43": {
                "variable": {
                    "value": "self.t_net_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*t_net1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.interp_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*interp_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_57": {
                "variable": {
                    "value": "self.motion_up_f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_f",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_64": {
                "variable": {
                    "value": "self.motion_up_b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "self.motion_down",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_down",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_178": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v3_ref.py": {
        "torch": {
            "Sequential_66": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v4.py": {
        "torch": {
            "Sequential_37": {
                "variable": {
                    "value": "self.motion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*motion_net",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_44": {
                "variable": {
                    "value": "self.t_net_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*t_net1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_50": {
                "variable": {
                    "value": "self.t_net_hr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*t_net2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Upsample_52": {
                "variable": {
                    "value": "self.upsample_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "scale_factor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "scale_factor",
                            "Method Argument"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.interp_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*interp_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.motion_up_f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_f",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_74": {
                "variable": {
                    "value": "self.motion_up_b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_up_b",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "variable": {
                    "value": "self.motion_down",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_down",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_189": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "fbpn_sr_rbpn_v4_ref.py": {
        "torch": {
            "Sequential_59": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(cnn.features.children())[:feature_layer + 1]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "DataLoader_155": {
                "variable": {
                    "value": "training_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_training_set(opt.data_dir, opt.upscale_factor, opt.data_augmentation, opt.file_list, opt.patch_size)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataParallel_168": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FBPNSR_RBPN_V1(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model.cuda(gpus_list[0])",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "L1Loss_169": {
                "variable": {
                    "value": "criterion_l1",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_170": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_174": {
                "variable": {
                    "value": "feature_extractor",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "feature_extractor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FeatureExtractor(models.vgg19(pretrained=True), feature_layer=35)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(feature_extractor, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "feature_extractor.cuda(gpus_list[0])",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adamax_192": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_149": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_142": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "model_out_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "opt.save_folder + str(opt.upscale_factor) + 'x_' + hostname + opt.model_type + opt.prefix + '_epoch_{}.pth'.format(epoch)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "manual_seed_151": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_183": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.save_folder + opt.pretrained_sr)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "main_refinement_flow.py": {
        "torch": {
            "DataLoader_202": {
                "variable": {
                    "value": "training_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_training_set_flow(opt.data_dir, opt.upscale_factor, opt.data_augmentation, opt.file_list, opt.patch_size)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataParallel_214": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FBPNSR_RBPN_V1_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model.cuda(gpus_list[0])",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "L1Loss_215": {
                "variable": {
                    "value": "criterion_l1",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_216": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_220": {
                "variable": {
                    "value": "feature_extractor",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "feature_extractor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FeatureExtractor(models.vgg19(pretrained=True), feature_layer=35)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(feature_extractor, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "feature_extractor.cuda(gpus_list[0])",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adamax_239": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_196": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_189": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "model_out_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "opt.save_folder + str(opt.upscale_factor) + 'x_' + hostname + opt.model_type + opt.prefix + '_epoch_{}.pth'.format(epoch)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "manual_seed_198": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_193": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_230": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.save_folder + opt.pretrained_sr)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "main_refinement_t_sr_hr.py": {
        "torch": {
            "DataLoader_150": {
                "variable": {
                    "value": "training_data_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_training_set_flow_lr(opt.data_dir, opt.upscale_factor, opt.data_augmentation, opt.file_list, opt.patch_size)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataParallel_163": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FBPNSR_RBPN_V1_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V2_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V3_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ],
                        [
                            "model.cuda(gpus_list[0])",
                            "Call"
                        ],
                        [
                            "FBPNSR_RBPN_V4_REF(base_filter=256, feat=64, num_stages=3, n_resblock=5, scale_factor=opt.upscale_factor)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "L1Loss_164": {
                "variable": {
                    "value": "criterion_l1",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_165": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_169": {
                "variable": {
                    "value": "feature_extractor",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "feature_extractor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "FeatureExtractor(models.vgg19(pretrained=True), feature_layer=35)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(feature_extractor, device_ids=gpus_list)",
                            "Call"
                        ],
                        [
                            "feature_extractor.cuda(gpus_list[0])",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "gpus_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gpus_list in range(opt.gpus)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adamax_188": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-08",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_144": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_137": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "model_out_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "opt.save_folder + str(opt.upscale_factor) + 'x_' + hostname + opt.model_type + opt.prefix + '_epoch_{}.pth'.format(epoch)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "manual_seed_146": {
                "seed": {
                    "value": "opt.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_141": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_179": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.save_folder + opt.pretrained_sr)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "rbpn.py": {
        "torch": {
            "Sequential_41": {
                "variable": {
                    "value": "self.res_feat1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.res_feat2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_55": {
                "variable": {
                    "value": "self.res_feat3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*modules_body3",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "mm_25": {
                "variable": {
                    "value": "G",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input.view(a * b, c * d)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "features.t()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}