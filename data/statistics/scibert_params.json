{
    "scibert/models/bert_crf_tagger.py": {
        "torch": {
            "Dropout_82": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_84": {
                "in_features": {
                    "value": "self.text_field_embedder.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.num_tags",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "scibert/models/bert_text_classifier.py": {
        "torch": {
            "Dropout_35": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.classifier_feedforward",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.text_field_embedder.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_46": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_78": {
                "variable": {
                    "value": "class_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier_feedforward(pooled)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "scibert/models/dummy_seq2seq.py": {
        "torch": {}
    },
    "scibert/models/pico_crf_tagger.py": {
        "torch": {
            "Dropout_46": {
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "output_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.encoder.get_output_dim()",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "self.num_tags",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "scibert/models/text_classifier.py": {
        "torch": {
            "Linear_39": {
                "variable": {
                    "value": "self.prediction_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.classifier_feedforward.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_48": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_86": {
                "variable": {
                    "value": "class_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prediction_layer(ff_hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_102": {
                "variable": {
                    "value": "class_probabilities",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_dict['logits']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    }
}