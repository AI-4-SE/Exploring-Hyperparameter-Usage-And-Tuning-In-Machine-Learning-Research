{
    "Semantic-AGG/CIFAR-10/lib/utils.py": {
        "sklearn": {
            "PCA_37": {
                "variable": {
                    "value": "pca_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TSNE_55": {
                "variable": {
                    "value": "X_embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "Semantic-AGG/F-MNIST/lib/utils.py": {
        "sklearn": {
            "PCA_34": {
                "variable": {
                    "value": "pca_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TSNE_54": {
                "variable": {
                    "value": "X_embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "Semantic-FC/CIFAR-10/lib/utils.py": {
        "sklearn": {
            "PCA_34": {
                "variable": {
                    "value": "pca_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TSNE_51": {
                "variable": {
                    "value": "X_embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "Semantic-FC/F-MNIST/lib/utils.py": {
        "sklearn": {
            "PCA_33": {
                "variable": {
                    "value": "pca_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TSNE_50": {
                "variable": {
                    "value": "X_embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "Semantic-MTAE/CIFAR-10/lib/utils.py": {
        "sklearn": {
            "PCA_33": {
                "variable": {
                    "value": "pca_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TSNE_51": {
                "variable": {
                    "value": "X_embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "Semantic-MTAE/F-MNIST/lib/utils.py": {
        "sklearn": {
            "PCA_32": {
                "variable": {
                    "value": "pca_model",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TSNE_51": {
                "variable": {
                    "value": "X_embedded",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {}
    },
    "Semantic-AGG/CIFAR-10/lib/config.py": {
        "torch": {
            "load_11": {
                "variable": {
                    "value": "vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "vectors.txt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_19": {
                "variable": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(w2v).to(device).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-AGG/CIFAR-10/main.py": {
        "torch": {
            "manual_seed_all_13": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_104": {
                "variable": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_x)",
                            "Call"
                        ],
                        [
                            "zs_x.view(10000, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_105": {
                "variable": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_y)",
                            "Call"
                        ],
                        [
                            "zs_y.view(10000).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_107": {
                "variable": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_x)",
                            "Call"
                        ],
                        [
                            "train_x.view(6, length_of_domain - 800, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_108": {
                "variable": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_y)",
                            "Call"
                        ],
                        [
                            "train_y.view(6, length_of_domain - 800).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_36": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "cifar_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data/', download=False, train=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "50000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_x).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_64": {
                "variable": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_y).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_138": {
                "variable": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_train).to(device)",
                            "Call"
                        ],
                        [
                            "x_train.view(6, length_of_domain, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "x_train.view(6 * length_of_domain, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_141": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(6, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(6 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_160": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_172": {
                "variable": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_173": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_train, y_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_185": {
                "variable": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_186": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(6, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(6 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_187": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_207": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_218": {
                "variable": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_219": {
                "variable": {
                    "value": "zs_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(zs_x, zs_y)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_231": {
                "variable": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_232": {
                "variable": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_zs).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_233": {
                "variable": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_277": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_291": {
                "variable": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_292": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_test, y_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_303": {
                "variable": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(test_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_304": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_y.view(40000).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_test).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_305": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_307": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_all_355": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "manual_seed_356": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_168": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_214": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_286": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/CIFAR-10/models/AGG.py": {
        "torch": {
            "Adamax_33": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5e-05",
                            "float"
                        ]
                    ]
                }
            },
            "MSELoss_35": {
                "variable": {
                    "value": "self.criterion_mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_36": {
                "variable": {
                    "value": "self.criterion_ce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/CIFAR-10/models/classifier.py": {
        "torch": {
            "Sequential_8": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(300, 10)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/CIFAR-10/models/featureExtractor.py": {
        "torch": {
            "Sequential_12": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 32, 3, padding=1, padding_mode='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(4096, 300, bias=True).to(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_21": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_31": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_39": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_41": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_49": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/F-MNIST/lib/config.py": {
        "torch": {
            "load_11": {
                "variable": {
                    "value": "vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "fmnist_vectors.txt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_18": {
                "variable": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(w2v).to(device).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-AGG/F-MNIST/main.py": {
        "torch": {
            "manual_seed_all_13": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_x)",
                            "Call"
                        ],
                        [
                            "zs_x.view(12000, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_104": {
                "variable": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_y)",
                            "Call"
                        ],
                        [
                            "zs_y.view(12000).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_106": {
                "variable": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_x)",
                            "Call"
                        ],
                        [
                            "train_x.view(6, length_of_domain - 800, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_107": {
                "variable": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_y)",
                            "Call"
                        ],
                        [
                            "train_y.view(6, length_of_domain - 800).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_33": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "fmnist_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.FashionMNIST(root='../../data/', download=False, train=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "60000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_61": {
                "variable": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_x).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_62": {
                "variable": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_y).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_134": {
                "variable": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_train).to(device)",
                            "Call"
                        ],
                        [
                            "x_train.view(6, length_of_domain, 1, 28, 28)",
                            "Call"
                        ],
                        [
                            "x_train.view(6 * length_of_domain, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_137": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(6, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(6 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_156": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_168": {
                "variable": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_169": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_train, y_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_181": {
                "variable": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_182": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(6, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(6 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_183": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_203": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_214": {
                "variable": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_215": {
                "variable": {
                    "value": "zs_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(zs_x, zs_y)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_227": {
                "variable": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_228": {
                "variable": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_zs).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_229": {
                "variable": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_271": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_285": {
                "variable": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_286": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_test, y_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_297": {
                "variable": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(test_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_298": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_y.view(48000).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_test).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_299": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_301": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_all_352": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "manual_seed_353": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_210": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_280": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/F-MNIST/models/AGG.py": {
        "torch": {
            "Adamax_34": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5e-05",
                            "float"
                        ]
                    ]
                }
            },
            "MSELoss_37": {
                "variable": {
                    "value": "self.criterion_mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_38": {
                "variable": {
                    "value": "self.criterion_ce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/F-MNIST/models/classifier.py": {
        "torch": {
            "Sequential_8": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(300, 10)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-AGG/F-MNIST/models/featureExtractor.py": {
        "torch": {
            "Sequential_11": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1, padding_mode='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_50": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_15": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_21": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_31": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_39": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "256 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-FC/CIFAR-10/lib/config.py": {
        "torch": {
            "load_10": {
                "variable": {
                    "value": "vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "cifar_vectors.txt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_17": {
                "variable": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(w2v).to(device).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-FC/CIFAR-10/main.py": {
        "torch": {
            "manual_seed_all_14": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_15": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_102": {
                "variable": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_x)",
                            "Call"
                        ],
                        [
                            "zs_x.view(10000, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_103": {
                "variable": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_y)",
                            "Call"
                        ],
                        [
                            "zs_y.view(10000).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_34": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "cifar_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data/', download=False, train=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "50000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_61": {
                "variable": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_x).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_62": {
                "variable": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_y).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_144": {
                "variable": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_train).to(device)",
                            "Call"
                        ],
                        [
                            "x_train.view(5, length_of_domain, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "x_train.view(5 * length_of_domain, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_147": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_153": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_165": {
                "variable": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_166": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_train, y_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_178": {
                "variable": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_179": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_180": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_201": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_213": {
                "variable": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_214": {
                "variable": {
                    "value": "zs_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(zs_x, zs_y)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_226": {
                "variable": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_227": {
                "variable": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_zs).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_228": {
                "variable": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_271": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_283": {
                "variable": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_284": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_test, y_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_295": {
                "variable": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(test_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_296": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_y.view(40000).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_test).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_297": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_299": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_all_345": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "manual_seed_346": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_160": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_209": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_278": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-FC/CIFAR-10/models/FC.py": {
        "torch": {
            "Adamax_40": {
                "variable": {
                    "value": "self.optimizer_interim_feature_extractor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adamax_41": {
                "variable": {
                    "value": "self.optimizer_final_feature_extractor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adamax_44": {
                "variable": {
                    "value": "self.optimizer_interim_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adamax_45": {
                "variable": {
                    "value": "self.optimizer_final_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adamax_48": {
                "variable": {
                    "value": "self.optimizer_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                }
            },
            "MSELoss_50": {
                "variable": {
                    "value": "self.criterion_mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_51": {
                "variable": {
                    "value": "self.criterion_ce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tanh_121": {
                "variable": {
                    "value": "utility",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loss_new_val[i] - loss_old_val[i]",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-FC/CIFAR-10/models/classifier.py": {
        "torch": {
            "Sequential_8": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(300, 10)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_23": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-FC/CIFAR-10/models/featureExtractor.py": {
        "torch": {
            "Sequential_9": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 32, 3, padding=1, padding_mode='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_49": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_13": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_17": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_18": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_28": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_32": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_36": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_38": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_42": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_46": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_51": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-FC/F-MNIST/lib/config.py": {
        "torch": {
            "load_11": {
                "variable": {
                    "value": "vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "fmnist_vectors.txt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_18": {
                "variable": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(w2v).to(device).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-FC/F-MNIST/main.py": {
        "torch": {
            "manual_seed_all_11": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_12": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_104": {
                "variable": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_x)",
                            "Call"
                        ],
                        [
                            "zs_x.view(12000, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_105": {
                "variable": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_y)",
                            "Call"
                        ],
                        [
                            "zs_y.view(12000).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_35": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "fmnist_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.FashionMNIST(root='../../data/', download=False, train=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "60000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "random.seed(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_x).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_64": {
                "variable": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_y).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_147": {
                "variable": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_train).to(device)",
                            "Call"
                        ],
                        [
                            "x_train.view(5, length_of_domain, 1, 28, 28)",
                            "Call"
                        ],
                        [
                            "x_train.view(5 * length_of_domain, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_150": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_156": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_169": {
                "variable": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_170": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_train, y_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "random.seed(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_182": {
                "variable": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_183": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_184": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_205": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_217": {
                "variable": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_218": {
                "variable": {
                    "value": "zs_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(zs_x, zs_y)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "random.seed(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_230": {
                "variable": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_231": {
                "variable": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_zs).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_232": {
                "variable": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_274": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "zs_classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "TensorDataset_287": {
                "variable": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_288": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_test, y_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "worker_init_fn": {
                    "value": "random.seed(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_299": {
                "variable": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(test_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_300": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_y.view(48000).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_test).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_301": {
                "variable": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_303": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "classifier_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(classifier_out).to(device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_all_355": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "manual_seed_356": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_213": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_282": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-FC/F-MNIST/models/FC.py": {
        "torch": {
            "Adamax_36": {
                "variable": {
                    "value": "self.optimizer_interim_feature_extractor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adamax_37": {
                "variable": {
                    "value": "self.optimizer_final_feature_extractor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adamax_40": {
                "variable": {
                    "value": "self.optimizer_interim_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adamax_41": {
                "variable": {
                    "value": "self.optimizer_final_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adamax_44": {
                "variable": {
                    "value": "self.optimizer_regularizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                }
            },
            "MSELoss_46": {
                "variable": {
                    "value": "self.criterion_mse",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_47": {
                "variable": {
                    "value": "self.criterion_ce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tanh_115": {
                "variable": {
                    "value": "utility",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "reward",
                    "type": "variable",
                    "possible_values": [
                        [
                            "loss_new_val[i] - loss_old_val[i]",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-FC/F-MNIST/models/classifier.py": {
        "torch": {
            "Sequential_8": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(300, 10)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_24": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-FC/F-MNIST/models/featureExtractor.py": {
        "torch": {
            "Sequential_11": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1, padding_mode='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_50": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_15": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_19": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_21": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_31": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_39": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "256 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/CIFAR-10/lib/config.py": {
        "torch": {
            "load_10": {
                "variable": {
                    "value": "vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "vectors.txt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_17": {
                "variable": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(w2v).to(device).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-MTAE/CIFAR-10/main.py": {
        "torch": {
            "manual_seed_all_13": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_14": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_102": {
                "variable": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_x)",
                            "Call"
                        ],
                        [
                            "zs_x.view(10000, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_103": {
                "variable": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_y)",
                            "Call"
                        ],
                        [
                            "zs_y.view(10000).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_105": {
                "variable": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_x)",
                            "Call"
                        ],
                        [
                            "train_x.view(5, length_of_domain - 800, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_106": {
                "variable": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_y)",
                            "Call"
                        ],
                        [
                            "train_y.view(5, length_of_domain - 800).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_33": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "cifar_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.CIFAR10(root='../../data/', download=False, train=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "50000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_x).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_61": {
                "variable": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_y).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_132": {
                "variable": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_train).to(device)",
                            "Call"
                        ],
                        [
                            "x_train.view(5, length_of_domain, 3, 32, 32)",
                            "Call"
                        ],
                        [
                            "x_train.view(5 * length_of_domain, 3, 32, 32)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_135": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_154": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_162": {
                "variable": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_163": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_train, y_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_173": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorDataset_198": {
                "variable": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_199": {
                "variable": {
                    "value": "zs_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(zs_x, zs_y)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_209": {
                "variable": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_210": {
                "variable": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_zs).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorDataset_258": {
                "variable": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_259": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_test, y_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_268": {
                "variable": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(test_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_269": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_y.view(40000).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_test).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_all_310": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "manual_seed_311": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_158": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_194": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_253": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/CIFAR-10/models/decoder.py": {
        "torch": {
            "Sequential_8": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(300, 4096, bias=True).to(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_14": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_18": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_22": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_24": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_28": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_32": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_34": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_36": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_38": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_42": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_44": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/CIFAR-10/models/encoder.py": {
        "torch": {
            "Sequential_9": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 32, 3, padding=1, padding_mode='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_10": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_12": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_17": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_21": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_37": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_39": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_45": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "in_features": {
                    "value": "4096",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/CIFAR-10/models/mtae.py": {
        "torch": {
            "MSELoss_38": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adamax_36": {
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5e-06",
                            "float"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-MTAE/F-MNIST/lib/config.py": {
        "torch": {
            "load_11": {
                "variable": {
                    "value": "vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "fmnist_vectors.txt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_19": {
                "variable": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "w2v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(w2v).to(device).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Semantic-MTAE/F-MNIST/main.py": {
        "torch": {
            "manual_seed_all_12": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "manual_seed_13": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_x)",
                            "Call"
                        ],
                        [
                            "zs_x.view(12000, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_100": {
                "variable": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_y)",
                            "Call"
                        ],
                        [
                            "zs_y.view(12000).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_102": {
                "variable": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_x)",
                            "Call"
                        ],
                        [
                            "train_x.view(5, length_of_domain - 800, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_103": {
                "variable": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_y)",
                            "Call"
                        ],
                        [
                            "train_y.view(5, length_of_domain - 800).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_32": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "fmnist_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.FashionMNIST(root='../../data/', download=False, train=True, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "60000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_59": {
                "variable": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_x).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_60": {
                "variable": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(data_y).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_129": {
                "variable": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(x_train).to(device)",
                            "Call"
                        ],
                        [
                            "x_train.view(5, length_of_domain, 1, 28, 28)",
                            "Call"
                        ],
                        [
                            "x_train.view(5 * length_of_domain, 1, 28, 28)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_132": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "MSELoss_153": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TensorDataset_161": {
                "variable": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_train",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_162": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_train, y_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "train_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(train_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_172": {
                "variable": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ],
                        [
                            "y_train.view(5, length_of_domain)",
                            "Call"
                        ],
                        [
                            "y_train.view(5 * length_of_domain).long()",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_train).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorDataset_196": {
                "variable": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "zs_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_197": {
                "variable": {
                    "value": "zs_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "zs_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(zs_x, zs_y)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_207": {
                "variable": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "zs_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(zs_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_208": {
                "variable": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_zs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_zs).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "TensorDataset_265": {
                "variable": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "x_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_266": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.utils.data.TensorDataset(x_test, y_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "3000",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_275": {
                "variable": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "test_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(test_out).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_276": {
                "variable": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_y.view(48000).to(device)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(y_test).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_all_319": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "manual_seed_320": {
                "seed": {
                    "value": "seeds[repeat]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_192": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_256": {
                "tensors": {
                    "value": "(y_train, y_zs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/F-MNIST/models/decoder.py": {
        "torch": {
            "Sequential_8": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(300, 12544, bias=True).to(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12544",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_14": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_18": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_22": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_24": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_28": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_30": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_32": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_34": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_36": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_38": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_42": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/F-MNIST/models/encoder.py": {
        "torch": {
            "Sequential_9": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1, padding_mode='same')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_10": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_12": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_18": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_28": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_32": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_36": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding_mode": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_44": {
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "12544",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "Semantic-MTAE/F-MNIST/models/mtae.py": {
        "torch": {
            "MSELoss_35": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adamax_32": {
                "params": {
                    "value": "self.params",
                    "type": "Attribute",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "float"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5e-06",
                            "float"
                        ]
                    ]
                }
            }
        }
    }
}