{
    "lexenlem/models/common/beam.py": {
        "torch": {
            "sort_98": {
                "input": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "lexenlem/models/common/data.py": {
        "torch": {}
    },
    "lexenlem/models/common/loss.py": {
        "torch": {
            "ones_11": {
                "variable": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "NLLLoss_13": {
                "variable": {
                    "value": "crit",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(vocab_size)",
                            "Call"
                        ],
                        [
                            "torch.ones(vocab_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "CrossEntropyLoss_24": {
                "variable": {
                    "value": "self.ce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_43": {
                "variable": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "NLLLoss_45": {
                "variable": {
                    "value": "self.nll",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(vocab_size)",
                            "Call"
                        ],
                        [
                            "torch.ones(vocab_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "exp_58": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "masked_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.clone().masked_fill_(mask, 0.0)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "lexenlem/models/common/seq2seq_model.py": {
        "torch": {
            "Dropout_57": {
                "variable": {
                    "value": "self.emb_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.emb_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_58": {
                "variable": {
                    "value": "self.drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_59": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "self.pad_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_60": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dropout": {
                    "value": "self.dropout if self.nlayers > 1 else 0",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.dec2vocab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.dec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_128": {
                "variable": {
                    "value": "h0",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.encoder.num_layers * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.size(0)",
                            "Call"
                        ],
                        [
                            "enc_inputs.size(0)",
                            "Call"
                        ],
                        [
                            "enc_inputs.size(0)",
                            "Call"
                        ],
                        [
                            "enc_inputs.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.enc_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_129": {
                "variable": {
                    "value": "c0",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.encoder.num_layers * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.size(0)",
                            "Call"
                        ],
                        [
                            "enc_inputs.size(0)",
                            "Call"
                        ],
                        [
                            "enc_inputs.size(0)",
                            "Call"
                        ],
                        [
                            "enc_inputs.size(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.enc_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_140": {
                "variable": {
                    "value": "packed_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.emb_drop(self.embedding(src))",
                            "Call"
                        ],
                        [
                            "torch.cat([pos_inputs.unsqueeze(1), enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, pos_inputs.unsqueeze(1)], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([feats_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, feats_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([vabamorf_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, vabamorf_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "self.embedding(src)",
                            "Call"
                        ],
                        [
                            "torch.cat([pos_inputs.unsqueeze(1), enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, pos_inputs.unsqueeze(1)], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([feats_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, feats_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([vabamorf_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, vabamorf_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "self.emb_drop(self.embedding(src))",
                            "Call"
                        ],
                        [
                            "self.embedding(src)",
                            "Call"
                        ],
                        [
                            "self.embedding(src)",
                            "Call"
                        ]
                    ]
                },
                "lengths": {
                    "value": "lens",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_142": {
                "variable": {
                    "value": "(h_in, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "packed_h_in",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_145": {
                "variable": {
                    "value": "hn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hn[-1], hn[-2])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_146": {
                "variable": {
                    "value": "cn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cn[-1], cn[-2])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_203": {
                "variable": {
                    "value": "log_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits_reshape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logits.view(-1, self.vocab_size)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_329": {
                "variable": {
                    "value": "self.emb_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.emb_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_330": {
                "variable": {
                    "value": "self.drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_331": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "self.pad_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_332": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dropout": {
                    "value": "self.dropout if self.nlayers > 1 else 0",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "LSTM_334": {
                "variable": {
                    "value": "self.lexicon_encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dropout": {
                    "value": "self.dropout if self.nlayers > 1 else 0",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Linear_338": {
                "variable": {
                    "value": "self.hn_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.enc_hidden_dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.enc_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_339": {
                "variable": {
                    "value": "self.cn_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.enc_hidden_dim * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.enc_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_340": {
                "variable": {
                    "value": "self.h_in_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.enc_hidden_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.enc_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_341": {
                "variable": {
                    "value": "self.dec2vocab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.dec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_378": {
                "variable": {
                    "value": "packed_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.emb_drop(self.embedding(src))",
                            "Call"
                        ],
                        [
                            "torch.cat([pos_inputs.unsqueeze(1), enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, pos_inputs.unsqueeze(1)], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([feats_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, feats_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([vabamorf_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, vabamorf_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "self.embedding(src)",
                            "Call"
                        ],
                        [
                            "torch.cat([pos_inputs.unsqueeze(1), enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, pos_inputs.unsqueeze(1)], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([feats_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, feats_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([vabamorf_inputs, enc_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([enc_inputs, vabamorf_inputs], dim=1)",
                            "Call"
                        ],
                        [
                            "self.emb_drop(self.embedding(src))",
                            "Call"
                        ],
                        [
                            "self.embedding(src)",
                            "Call"
                        ],
                        [
                            "self.embedding(src)",
                            "Call"
                        ]
                    ]
                },
                "lengths": {
                    "value": "lens",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "enforce_sorted": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_380": {
                "variable": {
                    "value": "(h_in, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "packed_h_in",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_381": {
                "variable": {
                    "value": "hn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hn[-1], hn[-2])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_382": {
                "variable": {
                    "value": "cn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cn[-1], cn[-2])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_430": {
                "variable": {
                    "value": "hn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hn, hn1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_431": {
                "variable": {
                    "value": "cn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cn, cn1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_458": {
                "variable": {
                    "value": "hn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hn, hn1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_459": {
                "variable": {
                    "value": "cn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cn, cn1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_523": {
                "variable": {
                    "value": "hn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(hn, hn1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_524": {
                "variable": {
                    "value": "cn",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cn, cn1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_69": {
                "variable": {
                    "value": "self.pos_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.pos_vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.pos_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "self.pad_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_70": {
                "variable": {
                    "value": "self.pos_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.pos_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_73": {
                "variable": {
                    "value": "self.feats_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_76": {
                "variable": {
                    "value": "self.feats_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.pos_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "variable": {
                    "value": "self.edit_clf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.hidden_dim, edit_hidden)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_264": {
                "variable": {
                    "value": "dec_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[b.get_current_state() for b in beam]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "t_264": {
                "variable": {
                    "value": "dec_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_344": {
                "variable": {
                    "value": "self.edit_clf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.dec_hidden_dim, edit_hidden)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_406": {
                "variable": {
                    "value": "lem_stump",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[constant.SOS_ID, constant.EOS_ID] + [constant.PAD_ID] * (lem.size(1) - 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_410": {
                "variable": {
                    "value": "lem_mask_stump",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0] * 3 + [1] * (lem.size(1) - 3)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "lem_mask.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_555": {
                "variable": {
                    "value": "dec_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[b.get_current_state() for b in beam]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "t_555": {
                "variable": {
                    "value": "dec_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_96": {
                "variable": {
                    "value": "self.emb_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.emb_matrix",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_170": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pos_inputs.unsqueeze(1), enc_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_inputs, pos_inputs.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_179": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[feats_inputs, enc_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_181": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_inputs, feats_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vabamorf_inputs, enc_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_189": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_inputs, vabamorf_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_217": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[pos_inputs.unsqueeze(1), enc_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_219": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_inputs, pos_inputs.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_226": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[feats_inputs, enc_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_228": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_inputs, feats_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_234": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vabamorf_inputs, enc_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_236": {
                "variable": {
                    "value": "enc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[enc_inputs, vabamorf_inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_247": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_359": {
                "variable": {
                    "value": "self.emb_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.emb_matrix",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_535": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_82": {
                "in_features": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "edit_hidden",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_dim // 2",
                            "BinOp"
                        ],
                        [
                            "self.dec_hidden_dim // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ReLU_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_84": {
                "in_features": {
                    "value": "edit_hidden",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_dim // 2",
                            "BinOp"
                        ],
                        [
                            "self.dec_hidden_dim // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "self.num_edit",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_345": {
                "in_features": {
                    "value": "self.dec_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "edit_hidden",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_dim // 2",
                            "BinOp"
                        ],
                        [
                            "self.dec_hidden_dim // 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ReLU_346": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_347": {
                "in_features": {
                    "value": "edit_hidden",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_dim // 2",
                            "BinOp"
                        ],
                        [
                            "self.dec_hidden_dim // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "self.num_edit",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_75": {
                "num_embeddings": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.vocab['feats'].lens()",
                            "Call"
                        ]
                    ]
                },
                "embedding_dim": {
                    "value": "self.pos_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "self.pad_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "lexenlem/models/common/seq2seq_modules.py": {
        "torch": {
            "Linear_18": {
                "variable": {
                    "value": "self.linear_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.linear_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.linear_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.linear_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_22": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax_23": {
                "variable": {
                    "value": "self.sm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_46": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "squeeze_46": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_47": {
                "variable": {
                    "value": "h_tilde",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(weighted_context, input)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "variable": {
                    "value": "self.linear_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softmax_63": {
                "variable": {
                    "value": "self.sm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.linear_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Tanh_65": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "bmm_77": {
                "variable": {
                    "value": "attn",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.linear_in(input)",
                            "Call"
                        ],
                        [
                            "self.linear_in(input).unsqueeze(2)",
                            "Call"
                        ],
                        [
                            "self.linear(input)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_77": {
                "variable": {
                    "value": "attn",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_90": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "attn.view(attn.size(0), 1, attn.size(1))",
                            "Call"
                        ],
                        [
                            "attn.view(batch_size, 1, source_len)",
                            "Call"
                        ],
                        [
                            "attn.view(batch_size, 1, source_len)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "squeeze_90": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_91": {
                "variable": {
                    "value": "h_tilde",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(weighted_context, input)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.wq",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.wk",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_113": {
                "variable": {
                    "value": "self.wv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_115": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_128": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.linear_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softmax_130": {
                "variable": {
                    "value": "self.sm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_131": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_144": {
                "variable": {
                    "value": "attn_in",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(u, v, u.mul(v))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_158": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "attn.view(attn.size(0), 1, attn.size(1))",
                            "Call"
                        ],
                        [
                            "attn.view(batch_size, 1, source_len)",
                            "Call"
                        ],
                        [
                            "attn.view(batch_size, 1, source_len)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "squeeze_158": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_159": {
                "variable": {
                    "value": "h_tilde",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(weighted_context, input)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_172": {
                "variable": {
                    "value": "self.linear_in",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_173": {
                "variable": {
                    "value": "self.linear_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_174": {
                "variable": {
                    "value": "self.linear_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ],
                        [
                            "context.size(2)",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_175": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax_176": {
                "variable": {
                    "value": "self.sm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_177": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "bmm_204": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "attn.view(attn.size(0), 1, attn.size(1))",
                            "Call"
                        ],
                        [
                            "attn.view(batch_size, 1, source_len)",
                            "Call"
                        ],
                        [
                            "attn.view(batch_size, 1, source_len)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "squeeze_204": {
                "variable": {
                    "value": "weighted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_205": {
                "variable": {
                    "value": "h_tilde",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(weighted_context, input)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTMCell_219": {
                "variable": {
                    "value": "self.lstm_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_248": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(output, 0).view(input.size(0), *output[0].size())",
                            "Call"
                        ],
                        [
                            "output.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(output, 0).view(input.size(0), *output[0].size())",
                            "Call"
                        ],
                        [
                            "output.transpose(0, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_262": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_283": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(output, 0).view(input.size(0), *output[0].size())",
                            "Call"
                        ],
                        [
                            "output.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(output, 0).view(input.size(0), *output[0].size())",
                            "Call"
                        ],
                        [
                            "output.transpose(0, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_280": {
                "variable": {
                    "value": "h_tilde",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(h_tilde0, h_tilde1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "lexenlem/models/common/utils.py": {
        "torch": {
            "SGD_59": {
                "params": {
                    "value": "parameters",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Adagrad_61": {
                "params": {
                    "value": "parameters",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Adam_63": {
                "params": {
                    "value": "parameters",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                },
                "betas": {
                    "value": "betas",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(0.9",
                            "Method Argument"
                        ]
                    ]
                },
                "eps": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1e-08",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Adamax_65": {
                "params": {
                    "value": "parameters",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "lexenlem/models/lemma/data.py": {
        "torch": {
            "eq_168": {
                "variable": {
                    "value": "src_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "src",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(d[0])",
                            "Call"
                        ],
                        [
                            "[constant.SOS] + src",
                            "BinOp"
                        ],
                        [
                            "[constant.SOS] + src + [constant.EOS]",
                            "BinOp"
                        ],
                        [
                            "batch[0]",
                            "Subscript"
                        ],
                        [
                            "get_long_tensor(src, batch_size)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "constant.PAD_ID",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eq_171": {
                "variable": {
                    "value": "lem_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "lem",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[constant.SOS, constant.EOS]",
                            "List"
                        ],
                        [
                            "combined_vocab.map(lem)",
                            "Call"
                        ],
                        [
                            "self.lemmatizer.lemmatize(d[0], d[1])",
                            "Call"
                        ],
                        [
                            "[constant.SOS] + lem + [constant.EOS]",
                            "BinOp"
                        ],
                        [
                            "self.lemmatizer.lemmatize(d[0], args['lang'].split('_')[0])",
                            "Call"
                        ],
                        [
                            "self.lemmatizer.lemmatize(d[0])",
                            "Call"
                        ],
                        [
                            "batch[1]",
                            "Subscript"
                        ],
                        [
                            "get_long_tensor(lem, batch_size)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "constant.PAD_ID",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "lexenlem/models/lemma/trainer.py": {
        "torch": {
            "clip_grad_norm__87": {
                "parameters": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.args['max_grad_norm']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "load_207": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "clip_grad_norm__273": {
                "parameters": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.args['max_grad_norm']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_200": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'model': self.model.state_dict() if self.model is not None else None, 'dicts': (self.word_dict, self.composite_dict), 'vocab': self.vocab.state_dict(), 'config': self.args}",
                            "Dict"
                        ],
                        [
                            "{'model': self.model.state_dict() if self.model is not None else None, 'dicts': (self.word_dict, self.composite_dict), 'vocab': self.vocab.state_dict(), 'config': self.args, 'lexicon': self.lexicon}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "save_305": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'model': self.model.state_dict() if self.model is not None else None, 'dicts': (self.word_dict, self.composite_dict), 'vocab': self.vocab.state_dict(), 'config': self.args}",
                            "Dict"
                        ],
                        [
                            "{'model': self.model.state_dict() if self.model is not None else None, 'dicts': (self.word_dict, self.composite_dict), 'vocab': self.vocab.state_dict(), 'config': self.args, 'lexicon': self.lexicon}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "lexenlem/models/lemmatizer_cmb.py": {
        "torch": {
            "manual_seed_87": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_93": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}