{
    "utils/network.py": {
        "torch": {
            "DatasetWrapper_13": {
                "base_class_0": {
                    "value": "torch.utils.data.Dataset",
                    "possible_values": []
                },
                "self.dataset": {
                    "value": "dataset",
                    "possible_values": []
                }
            },
            "Net_37": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "self.n_classes": {
                    "value": "n_classes",
                    "possible_values": []
                },
                "Linear_42": {
                    "variable": {
                        "value": "self.fc",
                        "possible_values": []
                    },
                    "in_features": {
                        "value": "input_dim",
                        "possible_values": []
                    },
                    "out_features": {
                        "value": "256",
                        "possible_values": []
                    }
                },
                "Sequential_46": {
                    "variable": {
                        "value": "self.out_fc",
                        "possible_values": []
                    },
                    "*args": {
                        "value": "*self.out_fc",
                        "possible_values": []
                    }
                }
            },
            "from_numpy_29": {
                "variable": {
                    "value": "features",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.dataset.features[video][:, frame]",
                    "possible_values": []
                }
            },
            "relu_49": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc(x)",
                    "possible_values": []
                }
            },
            "DataLoader_67": {
                "variable": {
                    "value": "dataloader",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.dataset_wrapper",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "NLLLoss_68": {
                "variable": {
                    "value": "criterion",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "SGD_69": {
                "variable": {
                    "value": "optimizer",
                    "possible_values": []
                },
                "params": {
                    "value": "self.net.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "possible_values": [
                        [
                            "0.1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "DataLoader_101": {
                "variable": {
                    "value": "dataloader",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_wrapper",
                    "possible_values": [
                        [
                            "DatasetWrapper(dataset)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "512",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "log_softmax_53": {
                "variable": {
                    "value": "tmp",
                    "possible_values": []
                },
                "input": {
                    "value": "tmp",
                    "possible_values": [
                        [
                            "self.out_fc[c](x)",
                            "Call"
                        ],
                        [
                            "nn.functional.log_softmax(tmp, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "save_88": {
                "obj": {
                    "value": "self.net.state_dict()",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "in_features": {
                    "value": "256",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "load_105": {
                "f": {
                    "value": "self.model_file",
                    "possible_values": []
                }
            }
        }
    }
}