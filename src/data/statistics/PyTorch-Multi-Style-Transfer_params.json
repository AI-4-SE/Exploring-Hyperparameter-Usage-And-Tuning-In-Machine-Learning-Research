{
    "experiments/camera_demo.py": {
        "torch": {
            "load_14": {
                "variable": {
                    "value": "model_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_54": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cv2.flip(img, 1)",
                            "Call"
                        ],
                        [
                            "np.array(img).transpose(2, 0, 1)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img).unsqueeze(0).float()",
                            "Call"
                        ],
                        [
                            "img.cuda()",
                            "Call"
                        ],
                        [
                            "Variable(img)",
                            "Call"
                        ],
                        [
                            "style_model(img)",
                            "Call"
                        ],
                        [
                            "img.cpu().clamp(0, 255).data[0].numpy()",
                            "Call"
                        ],
                        [
                            "img.clamp(0, 255).data[0].numpy()",
                            "Call"
                        ],
                        [
                            "img.transpose(1, 2, 0).astype('uint8')",
                            "Call"
                        ],
                        [
                            "np.concatenate((cimg, img), axis=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_54": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "experiments/main.py": {
        "torch": {
            "Adam_83": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[output]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_84": {
                "variable": {
                    "value": "mse_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_124": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(args.dataset, transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_131": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "style_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_132": {
                "variable": {
                    "value": "mse_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_245": {
                "variable": {
                    "value": "model_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_111": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_221": {
                "obj": {
                    "value": "style_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "save_model_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.save_model_dir, save_model_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(args.save_model_dir, save_model_filename)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_72": {
                "f": {
                    "value": "os.path.join(args.vgg_model_dir, 'vgg16.weight')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "manual_seed_114": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_136": {
                "f": {
                    "value": "os.path.join(args.vgg_model_dir, 'vgg16.weight')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_270": {
                "f": {
                    "value": "args.model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_129": {
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_209": {
                "obj": {
                    "value": "style_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "save_model_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.save_model_dir, save_model_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(args.save_model_dir, save_model_filename)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "experiments/net.py": {
        "torch": {
            "Sequential_54": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_108": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_138": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "ReflectionPad2d_148": {
                "variable": {
                    "value": "self.reflection_pad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "reflection_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(np.floor(kernel_size / 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_149": {
                "variable": {
                    "value": "self.conv2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_171": {
                "variable": {
                    "value": "self.conv2d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Parameter_190": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(1, C, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "bmm_204": {
                "variable": {
                    "value": "self.P",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.weight.expand_as(self.G)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "self.G",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_215": {
                "variable": {
                    "value": "self.conv1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_216": {
                "variable": {
                    "value": "self.conv1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_218": {
                "variable": {
                    "value": "self.conv2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_219": {
                "variable": {
                    "value": "self.conv2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_221": {
                "variable": {
                    "value": "self.conv3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_222": {
                "variable": {
                    "value": "self.conv3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_223": {
                "variable": {
                    "value": "self.conv3_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_225": {
                "variable": {
                    "value": "self.conv4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_226": {
                "variable": {
                    "value": "self.conv4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_227": {
                "variable": {
                    "value": "self.conv4_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_229": {
                "variable": {
                    "value": "self.conv5_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_230": {
                "variable": {
                    "value": "self.conv5_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_231": {
                "variable": {
                    "value": "self.conv5_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_234": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_1(X)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_235": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_237": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(X))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_239": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_240": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_242": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(X))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_244": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_245": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_246": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_3(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool2d_248": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.relu(self.conv1_1(X))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv1_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv2_2(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv3_3(h))",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(h, kernel_size=2, stride=2)",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_1(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_2(h))",
                            "Call"
                        ],
                        [
                            "F.relu(self.conv4_3(h))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_250": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_251": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_252": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_3(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_274": {
                "variable": {
                    "value": "self.model1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_290": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "variable": {
                    "value": "self.residual_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_96": {
                "variable": {
                    "value": "self.residual_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Upsample_167": {
                "variable": {
                    "value": "self.upsample_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "upsample",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReflectionPad2d_170": {
                "variable": {
                    "value": "self.reflection_pad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.reflection_padding",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bmm_205": {
                "input": {
                    "value": "self.P.transpose(1, 2).expand(X.size(0), self.C, self.C)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "X.view(X.size(0), X.size(1), -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_75": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_101": {
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_106": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_130": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_131": {
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_133": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_136": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_137": {
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_271": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_287": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "experiments/utils.py": {
        "torch": {
            "from_numpy_33": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(filename).convert('RGB')",
                            "Call"
                        ],
                        [
                            "img.resize((size, size2), Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "img.resize((size, size), Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "img.resize((int(img.size[0] / scale), int(img.size[1] / scale)), Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "np.array(img).transpose(2, 0, 1)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img).float()",
                            "Call"
                        ],
                        [
                            "tensor.clone().cpu().clamp(0, 255).numpy()",
                            "Call"
                        ],
                        [
                            "tensor.clone().clamp(0, 255).numpy()",
                            "Call"
                        ],
                        [
                            "img.transpose(1, 2, 0).astype('uint8')",
                            "Call"
                        ],
                        [
                            "Image.fromarray(img)",
                            "Call"
                        ]
                    ]
                }
            },
            "chunk_48": {
                "variable": {
                    "value": "(b, g, r)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((r, g, b))",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_49": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(r, g, b)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "chunk_88": {
                "variable": {
                    "value": "(r, g, b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "torch.cat((b, g, r))",
                            "Call"
                        ],
                        [
                            "batch.transpose(0, 1)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(b, g, r)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "save_104": {
                "obj": {
                    "value": "vgg.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(model_folder, 'vgg16.weight')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}