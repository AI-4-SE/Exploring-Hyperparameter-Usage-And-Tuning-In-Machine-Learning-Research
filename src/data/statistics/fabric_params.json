{
    "models/bidate_model.py": {
        "torch": {
            "sigmoid_42": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.up1(torch.relu(x5_d2 * x5_d1), torch.relu(x4_d2 * x4_d1))",
                            "Call"
                        ],
                        [
                            "self.up2(x, torch.relu(x3_d2 * x3_d1))",
                            "Call"
                        ],
                        [
                            "self.up3(x, torch.relu(x2_d2 * x2_d1))",
                            "Call"
                        ],
                        [
                            "self.up4(x, torch.relu(x1_d2 * x1_d1))",
                            "Call"
                        ],
                        [
                            "self.outc(x)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(x).squeeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_42": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_37": {
                "input": {
                    "value": "x4_d2 * x4_d1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_38": {
                "input": {
                    "value": "x3_d2 * x3_d1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_39": {
                "input": {
                    "value": "x2_d2 * x2_d1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_40": {
                "input": {
                    "value": "x1_d2 * x1_d1",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/unet_multidate.py": {
        "torch": {
            "Sequential_11": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(ch_in, ch_out, kernel_size=3, stride=1, padding=1, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_29": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.in_gate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size + hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.forget_gate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size + hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.out_gate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size + hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "variable": {
                    "value": "self.cell_gate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size + hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "conc_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input, h_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_60": {
                "variable": {
                    "value": "in_gate",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "in_gate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.in_gate(conc_inputs)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(in_gate)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_61": {
                "variable": {
                    "value": "forget_gate",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "forget_gate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.forget_gate(conc_inputs)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(forget_gate)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_62": {
                "variable": {
                    "value": "out_gate",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out_gate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.out_gate(conc_inputs)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(out_gate)",
                            "Call"
                        ]
                    ]
                }
            },
            "tanh_63": {
                "variable": {
                    "value": "cell_gate",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cell_gate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.cell_gate(conc_inputs)",
                            "Call"
                        ],
                        [
                            "torch.tanh(cell_gate)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_77": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MaxPool2d_111": {
                "variable": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_140": {
                "variable": {
                    "value": "self.Conv_1x1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_164": {
                "variable": {
                    "value": "d5",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(d5, x4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_168": {
                "variable": {
                    "value": "d4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(d4, x3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "d3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(d3, x2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_176": {
                "variable": {
                    "value": "d2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(d2, x1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_180": {
                "variable": {
                    "value": "d1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "d1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.Conv_1x1(d2)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(d1).squeeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_180": {
                "variable": {
                    "value": "d1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_12": {
                "in_channels": {
                    "value": "ch_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_13": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "in_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_17": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_30": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "in_channels": {
                    "value": "ch_in",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_32": {
                "num_features": {
                    "value": "ch_out",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_33": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "tanh_66": {
                "input": {
                    "value": "c_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "forget_gate * c_state + in_gate * cell_gate",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Sequential_147": {
                "*args": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_149": {
                "*args": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_151": {
                "*args": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_153": {
                "*args": {
                    "value": "self.Maxpool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_83": {
                "*size": {
                    "value": "int(xinp.size()[0])",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "int(xinp.size()[1])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "*size": {
                    "value": "int(xinp[0].shape[0])",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_93": {
                "*size": {
                    "value": "int(xinp[0].shape[0])",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.height",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/unet_parts.py": {
        "torch": {
            "Sequential_12": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_ch, out_ch, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.mpconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.MaxPool2d(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pad_71": {
                "variable": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.up(x1)",
                            "Call"
                        ],
                        [
                            "F.pad(x1, (diffX // 2, diffX - diffX // 2, diffY // 2, diffY - diffY // 2))",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(diffX // 2, diffX - diffX // 2, diffY // 2, diffY - diffY // 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_78": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x2, x1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_86": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_56": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_60": {
                "variable": {
                    "value": "self.up",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_ch // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_ch // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "in_channels": {
                    "value": "in_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_14": {
                "num_features": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_16": {
                "in_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_17": {
                "num_features": {
                    "value": "out_ch",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_40": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "models/xdxd_sn4_bidate.py": {
        "torch": {
            "MaxPool2d_12": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_15": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.encoder[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_17": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.encoder[5]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_19": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.encoder[10]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.encoder[17]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.encoder[24]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_73": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_85": {
                "variable": {
                    "value": "self.block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Upsample(scale_factor=2, mode='bilinear')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_66": {
                "input": {
                    "value": "x_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.final(dec1)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_66": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "tensors": {
                    "value": "[center_d1 * center_d2, conv5_d1 * conv5_d2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_61": {
                "tensors": {
                    "value": "[dec5, conv4_d1 * conv4_d2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_62": {
                "tensors": {
                    "value": "[dec4, conv3_d1 * conv3_d2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_63": {
                "tensors": {
                    "value": "[dec3, conv2_d1 * conv2_d2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_64": {
                "tensors": {
                    "value": "[dec2, conv1_d1 * conv1_d2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Upsample_86": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "load_107": {
                "variable": {
                    "value": "pretrained",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.pretrained_checkpoint",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_119": {
                "variable": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume_checkpoint",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_113": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "grain_exp.load_model(BiDateNet, n_channels=len(args.band_ids), n_classes=n_classes)",
                            "Call"
                        ],
                        [
                            "grain_exp.load_model(UNetMultiDate, n_channels=len(args.band_ids), n_classes=n_classes, patch_size=args.input_shape[2], device='cuda:0')",
                            "Call"
                        ],
                        [
                            "grain_exp.load_model(XDXD_SpaceNet4_UNetVGG16, n_channels=len(args.band_ids), n_classes=1)",
                            "Call"
                        ],
                        [
                            "model.to(args.gpu)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, device_ids=list(range(args.num_gpus)))",
                            "Call"
                        ],
                        [
                            "Distributor(model)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "list(range(args.num_gpus))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_initialized_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_171": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "cpt_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(args.weight_dir, 'checkpoint_epoch_' + str(epoch) + '.pt')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "utils/dataloader.py": {
        "torch": {
            "DataLoader_425": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "OneraPreloader(train_samples, full_load, True, args)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_430": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "OneraPreloader(val_samples, full_load, False, args)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}