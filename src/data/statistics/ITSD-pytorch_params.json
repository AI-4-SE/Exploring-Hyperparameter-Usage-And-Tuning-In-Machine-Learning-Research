{
    "models/baseU.py": {
        "torch": {
            "sum_29": {
                "input": {
                    "value": "score * x",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_30": {
                "input": {
                    "value": "score",
                    "type": "Name",
                    "possible_values": [
                        [
                            "scores.sigmoid_()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cosine_similarity_37": {
                "variable": {
                    "value": "cos_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "x1": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.bn1(self.pw_conv(x))",
                            "Call"
                        ],
                        [
                            "self.relu(self.bn2(self.dw_conv(x)))",
                            "Call"
                        ],
                        [
                            "self.final(X)",
                            "Call"
                        ],
                        [
                            "torch.cat(feats, 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(x, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.max(x, dim=1)[0] * scale",
                            "BinOp"
                        ]
                    ]
                },
                "x2": {
                    "value": "centers",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.sum(torch.sum(score * x, dim=-1, keepdim=True), dim=-2, keepdim=True)",
                            "Call"
                        ],
                        [
                            "centers / weights",
                            "BinOp"
                        ],
                        [
                            "get_centers(x, heat, 1)",
                            "Call"
                        ],
                        [
                            "centers.view(centers.size(0), centers.size(1), 1, 1).expand_as(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_15": {
                "variable": {
                    "value": "self.pw_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_16": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.dw_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "variable": {
                    "value": "self.final_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_92": {
                "variable": {
                    "value": "self.pr_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_96": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.final_conv(X)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_110": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_convs(cat, cat, NUM[layer]))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_111": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_fuse(cat, cat // 2))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_113": {
                "variable": {
                    "value": "self.final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_final(cat, cat))",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_127": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a, b]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_142": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_convs(cat, cat, NUM[layer]))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_143": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_fuse(cat, cat))",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_144": {
                "variable": {
                    "value": "self.final",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_final(cat, cat))",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_164": {
                "variable": {
                    "value": "self.slc_decode",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(*list(decode_conv(i, channel))) for i in range(5)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Conv2d_165": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "40",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_170": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "feats",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[self.slc_decode[i](xs[i]) for i in range(5)]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_186": {
                "variable": {
                    "value": "self.slc_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[res_block(channel, i) for i in range(self.layer)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_187": {
                "variable": {
                    "value": "self.slc_preds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[pred_block(channel, channel // 2) for i in range(self.layer)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_189": {
                "variable": {
                    "value": "self.ctr_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[ctr_block(channel, i) for i in range(self.layer)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_190": {
                "variable": {
                    "value": "self.ctr_preds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[pred_block(channel, channel // 2, up=True) for i in range(self.layer)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_192": {
                "variable": {
                    "value": "self.slc_decode",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.Sequential(*list(decode_conv(i, channel))) for i in range(5)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GroupNorm_48": {
                "num_groups": {
                    "value": "Out // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_54": {
                "input": {
                    "value": "xn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x.view(batch, cat // n, n, w, h)",
                            "Call"
                        ],
                        [
                            "torch.max(xn, dim=2)[0]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "Out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_59": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cp(X)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_84": {
                "in_channels": {
                    "value": "nc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "c",
                            "Name"
                        ],
                        [
                            "temp // 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_85": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_100": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "a",
                    "type": "Call",
                    "possible_values": [
                        [
                            "nn.functional.relu(self.final_conv(X))",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(a, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "cp(X)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_108": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*list(gen_fuse(cat, cat // 2))",
                    "type": null,
                    "possible_values": []
                }
            },
            "interpolate_119": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "nn.functional.interpolate(X, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.cat([c, d], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(X)",
                            "Call"
                        ],
                        [
                            "self.conv1(X)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(X, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "self.conv2(X)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[c, d]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_151": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "X",
                    "type": "Call",
                    "possible_values": [
                        [
                            "nn.functional.interpolate(X, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.cat([c, d], 1)",
                            "Call"
                        ],
                        [
                            "self.convs(X)",
                            "Call"
                        ],
                        [
                            "self.conv1(X)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(X, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "self.conv2(X)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_174": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.bn1(self.pw_conv(x))",
                            "Call"
                        ],
                        [
                            "self.relu(self.bn2(self.dw_conv(x)))",
                            "Call"
                        ],
                        [
                            "self.final(X)",
                            "Call"
                        ],
                        [
                            "torch.cat(feats, 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(x, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.max(x, dim=1)[0] * scale",
                            "BinOp"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_209": {
                "variable": {
                    "value": "ctr",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[cp(ctr), stc]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "In",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "in_channels": {
                    "value": "c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cp(X)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cp(X)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_65": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Upsample_67": {
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear if i == 2 else nearest",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "in_channels": {
                    "value": "oc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "min(temp, nc)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "c",
                            "Name"
                        ],
                        [
                            "temp // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_81": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Upsample_82": {
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_98": {
                "input": {
                    "value": "a1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.pr_conv(a)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_203": {
                "variable": {
                    "value": "slc",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[cp(slc), cts]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_164": {
                "*args": {
                    "value": "*list(decode_conv(i, channel))",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_177": {
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.bn1(self.pw_conv(x))",
                            "Call"
                        ],
                        [
                            "self.relu(self.bn2(self.dw_conv(x)))",
                            "Call"
                        ],
                        [
                            "self.final(X)",
                            "Call"
                        ],
                        [
                            "torch.cat(feats, 1)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(x, scale_factor=2, mode='bilinear')",
                            "Call"
                        ],
                        [
                            "torch.max(x, dim=1)[0] * scale",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_192": {
                "*args": {
                    "value": "*list(decode_conv(i, channel))",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/baseline.py": {
        "torch": {
            "Conv2d_34": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in1 // 4 if self.reduce else in1",
                    "type": "IfExp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in1",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_63": {
                "variable": {
                    "value": "self.adapters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[resnet_adapter(in1, c) for in1 in res_inc]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "max_27": {
                "input": {
                    "value": "x.view(batch, self.channel, -1, height, width)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_68": {
                "variable": {
                    "value": "self.adapters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[mobile_adapter(in1, c) for in1 in mobile_inc]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ModuleList_72": {
                "variable": {
                    "value": "self.adapters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[vgg_adapter(in1, c) for in1 in vgg_inc]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "max_40": {
                "input": {
                    "value": "X.view(batch, -1, 4, height, width)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/encoder/mobile.py": {
        "torch": {
            "randn_215": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_220": {
                "variable": {
                    "value": "x2",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "model4_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32 * 10",
                            "BinOp"
                        ]
                    ]
                },
                "layout": {
                    "value": "model4_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32 * 10",
                            "BinOp"
                        ]
                    ]
                }
            },
            "randn_223": {
                "variable": {
                    "value": "x3",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "196",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "196",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_33": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "groups": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_36": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes * t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "outplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_38": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "outplanes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "self.c[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.s[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_97": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.c[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_142": {
                "*args": {
                    "value": "modules",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_162": {
                "*args": {
                    "value": "modules",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_195": {
                "f": {
                    "value": "../PretrainModel/mobilev2.pth.tar",
                    "type": "Constant",
                    "possible_values": []
                },
                "map_location": {
                    "value": "{'cuda:1': 'cuda:0'}",
                    "type": "Dict",
                    "possible_values": []
                }
            }
        }
    },
    "models/encoder/resnet.py": {
        "torch": {
            "Conv2d_29": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_148": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_151": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_152": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_231": {
                "variable": {
                    "value": "state_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "../PretrainModel/ + arch + .pth",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_188": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_202": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/encoder/vgg.py": {
        "torch": {
            "Sequential_86": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "variable": {
                    "value": "conv2d",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_106": {
                "f": {
                    "value": "../PretrainModel/vgg16.pth",
                    "type": "Constant",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_78": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "num_features": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_82": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/Eval.py": {
        "torch": {
            "save_30": {
                "obj": {
                    "value": "utils.makeDict(Model.state_dict())",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "utils.genPath(self.Loader.spath, 'present.pkl')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_34": {
                "obj": {
                    "value": "utils.makeDict(Model.state_dict())",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "utils.genPath(self.Loader.spath, val + '_' + ['F', 'M'][idx] + '.pkl')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "src/Experiment.py": {
        "torch": {
            "DataParallel_16": {
                "variable": {
                    "value": "self.Model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.Model.cuda(L.ids[0])",
                    "type": "Call",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "L.ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_22": {
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "Constant",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "StepLR_31": {
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "step_size": {
                    "value": "20",
                    "type": "Constant",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_12": {
                "f": {
                    "value": "L.mpath",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_26": {
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_34": {
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/Loader.py": {
        "torch": {}
    },
    "src/Loss.py": {
        "torch": {
            "BCEWithLogitsLoss_34": {
                "variable": {
                    "value": "bce",
                    "type": "Variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_35": {
                "variable": {
                    "value": "slc_gt",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "batchs['Y']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_36": {
                "variable": {
                    "value": "ctr_gt",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "batchs['C']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "interpolate_59": {
                "variable": {
                    "value": "pc",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pc.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "ctr_gt.size()[-2:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_59": {
                "variable": {
                    "value": "pc",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_60": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "pc > ctr_gt",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "pc",
                    "type": "Call",
                    "possible_values": [
                        [
                            "ctr_pred.sigmoid_()",
                            "Call"
                        ],
                        [
                            "F.interpolate(pc.unsqueeze(1), size=ctr_gt.size()[-2:], mode='bilinear').squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "ctr_gt",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(batchs['C']).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "avg_pool2d_41": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "slc_gt",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(batchs['Y']).cuda()",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "scale",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(slc_gt.size(-1) / slc_pred.size(-1))",
                            "Call"
                        ],
                        [
                            "int(Y.size(2) / x.size(2))",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "scale",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(slc_gt.size(-1) / slc_pred.size(-1))",
                            "Call"
                        ],
                        [
                            "int(Y.size(2) / x.size(2))",
                            "Call"
                        ]
                    ]
                }
            },
            "gt_41": {
                "variable": {
                    "value": "ys",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_42": {
                "variable": {
                    "value": "yc",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ctr_gt",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(batchs['C']).cuda()",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "scale",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(slc_gt.size(-1) / slc_pred.size(-1))",
                            "Call"
                        ],
                        [
                            "int(Y.size(2) / x.size(2))",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "scale",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(slc_gt.size(-1) / slc_pred.size(-1))",
                            "Call"
                        ],
                        [
                            "int(Y.size(2) / x.size(2))",
                            "Call"
                        ]
                    ]
                }
            },
            "where_51": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "pc > yc",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "pc",
                    "type": "Call",
                    "possible_values": [
                        [
                            "ctr_pred.sigmoid_()",
                            "Call"
                        ],
                        [
                            "F.interpolate(pc.unsqueeze(1), size=ctr_gt.size()[-2:], mode='bilinear').squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "yc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.max_pool2d(ctr_gt, kernel_size=scale, stride=scale)",
                            "Call"
                        ]
                    ]
                }
            },
            "avg_pool2d_20": {
                "variable": {
                    "value": "pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Y",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "scale",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(slc_gt.size(-1) / slc_pred.size(-1))",
                            "Call"
                        ],
                        [
                            "int(Y.size(2) / x.size(2))",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "scale",
                    "type": "Call",
                    "possible_values": [
                        [
                            "int(slc_gt.size(-1) / slc_pred.size(-1))",
                            "Call"
                        ],
                        [
                            "int(Y.size(2) / x.size(2))",
                            "Call"
                        ]
                    ]
                }
            },
            "gt_20": {
                "variable": {
                    "value": "pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/Metrics.py": {
        "torch": {
            "tensor_68": {
                "variable": {
                    "value": "preds",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "preds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(preds).cuda(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_69": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tensor(labels, dtype=torch.uint8).cuda(device)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_12": {
                "variable": {
                    "value": "self.thresholds",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "end",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "steps": {
                    "value": "steps",
                    "type": "Name",
                    "possible_values": [
                        [
                            "255",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "tensor_35": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "DX[idx:ind]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "empty_cache_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_75": {
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_16": {
                "input": {
                    "value": "(_Y >= threshold) & self.Y",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_17": {
                "input": {
                    "value": "_Y >= threshold",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_18": {
                "input": {
                    "value": "self.Y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sigmoid_38": {
                "input": {
                    "value": "Outs['final']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "interpolate_43": {
                "input": {
                    "value": "pred.unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(height, width)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_44": {
                "input": {
                    "value": "pre",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.interpolate(pred.unsqueeze(0), (height, width), mode='bilinear')[0]",
                            "Subscript"
                        ],
                        [
                            "torch.sigmoid(pre).cpu().data.numpy()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/Tester.py": {
        "torch": {}
    },
    "src/Trainer.py": {
        "torch": {
            "DataParallel_26": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device_ids": {
                    "value": "L.ids",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_41": {
                "variable": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "batchs['X']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/utils.py": {
        "torch": {}
    }
}