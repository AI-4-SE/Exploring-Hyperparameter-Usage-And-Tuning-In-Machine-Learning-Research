{
    "multi-task-learning/data/cv_splits.py": {
        "sklearn": {
            "KFold_18": {
                "variable": {
                    "value": "kf",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "folds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "relation-classification/data_helpers.py": {
        "sklearn": {
            "load_files_78": {
                "variable": {
                    "value": "datasets",
                    "type": "Variable",
                    "possible_values": []
                },
                "container_path": {
                    "value": "container_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "categories": {
                    "value": "categories",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "load_content": {
                    "value": "load_content",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "encoding": {
                    "value": "encoding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'utf-8'",
                            "Constant"
                        ],
                        [
                            "'utf-8'",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {}
    },
    "relation-classification/data_science_helpers.py": {
        "sklearn": {
            "KFold_15": {
                "variable": {
                    "value": "k_fold",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "cfg['train_test_split']['kfold']['number_of_folds']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "random_state": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "relation-classification/feature_engineering/pca.py": {
        "sklearn": {
            "PCA_11": {
                "variable": {
                    "value": "pca",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "n_dimensions",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "relation-classification/output.py": {
        "sklearn": {
            "accuracy_score_38": {
                "variable": {
                    "value": "fold_results[accuracy]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "classification_report_131": {
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "labels": {
                    "value": "labels",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.arange(len(target_names))",
                            "Call"
                        ],
                        [
                            "np.arange(len(target_names))",
                            "Call"
                        ]
                    ]
                },
                "target_names": {
                    "value": "target_names",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "confusion_matrix_132": {
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "precision_score_46": {
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "micro",
                    "type": "Constant",
                    "possible_values": []
                },
                "labels": {
                    "value": "[label]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "recall_score_47": {
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "micro",
                    "type": "Constant",
                    "possible_values": []
                },
                "labels": {
                    "value": "[label]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "f1_score_48": {
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "micro",
                    "type": "Constant",
                    "possible_values": []
                },
                "labels": {
                    "value": "[label]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "sentiment-analysis/data_loading_helpers.py": {
        "sklearn": {
            "load_files_148": {
                "variable": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "container_path": {
                    "value": "dataset_path + '/' + subfolder_name",
                    "type": "BinOp",
                    "possible_values": []
                },
                "categories": {
                    "value": "categories",
                    "type": "Name",
                    "possible_values": [
                        [
                            "['NEGATIVE', 'POSITIVE'] if binary else None",
                            "IfExp"
                        ]
                    ]
                },
                "load_content": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "encoding": {
                    "value": "utf-8",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "sentiment-analysis/data_science_helpers.py": {
        "sklearn": {
            "KFold_6": {
                "variable": {
                    "value": "k_fold",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "cv_splits",
                    "type": "Variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "accuracy_score_43": {
                "variable": {
                    "value": "fold_results[accuracy]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions_y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "f1_score_47": {
                "variable": {
                    "value": "fold_results[str(category) + _f1score]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_category",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list(map(lambda x: x == category, true_y))",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions_category",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list(map(lambda x: x == category, predictions_y))",
                            "Call"
                        ]
                    ]
                }
            },
            "precision_score_48": {
                "variable": {
                    "value": "fold_results[str(category) + _precision]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_category",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list(map(lambda x: x == category, true_y))",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions_category",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list(map(lambda x: x == category, predictions_y))",
                            "Call"
                        ]
                    ]
                }
            },
            "recall_score_49": {
                "variable": {
                    "value": "fold_results[str(category) + _recall]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "true_category",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list(map(lambda x: x == category, true_y))",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions_category",
                    "type": "Name",
                    "possible_values": [
                        [
                            "list(map(lambda x: x == category, predictions_y))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sentiment-analysis/preprocessing/data_creation_utils.py": {
        "sklearn": {}
    },
    "sentiment-analysis/run_features_model.py": {
        "sklearn": {}
    },
    "sentiment-analysis/run_stts_embedding_experiment.py": {
        "sklearn": {
            "ParameterGrid_131": {
                "param_grid": {
                    "value": "par_lists",
                    "type": "Call",
                    "possible_values": [
                        [
                            "extract_configs(sys.argv)",
                            "Call"
                        ],
                        [
                            "optimal_parametrization(par_lists, sys.argv)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sentiment-analysis/run_stts_embedding_experiment2.py": {
        "sklearn": {
            "ParameterGrid_148": {
                "param_grid": {
                    "value": "par_lists",
                    "type": "Call",
                    "possible_values": [
                        [
                            "extract_configs(sys.argv)",
                            "Call"
                        ],
                        [
                            "add_hyperpars_to_optimize(par_lists)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sentiment-analysis/summary_funcs.py": {
        "sklearn": {}
    },
    "relation-classification/text_cnn.py": {
        "tensorflow": {
            "placeholder_15": {
                "variable": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_16": {
                "variable": {
                    "value": "self.input_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_rel_pos_first",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_17": {
                "variable": {
                    "value": "self.input_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_rel_pos_second",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_18": {
                "variable": {
                    "value": "self.input_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_pos_tags",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_23": {
                "variable": {
                    "value": "self.input_eeg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length, eeg_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_eeg",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_24": {
                "variable": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_25": {
                "variable": {
                    "value": "self.input_dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "input_dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_26": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_27": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_30": {
                "variable": {
                    "value": "l2_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_133": {
                "variable": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "pooled_outputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_134": {
                "variable": {
                    "value": "self.h_pool_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, num_filters_total]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dropout_137": {
                "variable": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_pool_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "self.input_dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                },
                "name": {
                    "value": "dropout",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_20": {
                "variable": {
                    "value": "self.input_et",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length, et_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_et",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_22": {
                "variable": {
                    "value": "self.input_et",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length, et_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_et",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_random_seed_32": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Variable_39": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_41": {
                "variable": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_42": {
                "variable": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Variable_45": {
                "variable": {
                    "value": "self.rel_pos_first_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([rel_pos_cardinality[0], rel_pos_embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "rel_pos_first_embedding_dict",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_48": {
                "variable": {
                    "value": "self.embedded_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.rel_pos_first_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_49": {
                "variable": {
                    "value": "self.embedded_rel_pos_first_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Variable_52": {
                "variable": {
                    "value": "self.rel_pos_second_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([rel_pos_cardinality[1], rel_pos_embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "rel_pos_second_embedding_dict",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_55": {
                "variable": {
                    "value": "self.embedded_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.rel_pos_second_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_56": {
                "variable": {
                    "value": "self.embedded_rel_pos_second_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Variable_59": {
                "variable": {
                    "value": "self.pos_tags_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([pos_tags_cardinality, pos_tags_embedding_size], -1.0, 1.0, seed=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "pos_tags_embedding_dict",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_62": {
                "variable": {
                    "value": "self.embedded_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.pos_tags_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_63": {
                "variable": {
                    "value": "self.embedded_pos_tags_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_86": {
                "variable": {
                    "value": "self.embedded_all",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "feature_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_variable_141": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_filters_total, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.contrib.layers.xavier_initializer(seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_145": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.1, shape=[num_classes])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "xw_plus_b_148": {
                "variable": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weights": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.get_variable('W', shape=[num_filters_total, num_classes], initializer=tf.contrib.layers.xavier_initializer(seed=seed_value))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1, seed=seed_value), name='W')",
                            "Call"
                        ]
                    ]
                },
                "biases": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_classes]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_filters]), name='b')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "scores",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_149": {
                "variable": {
                    "value": "self.probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "probabilities",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_150": {
                "variable": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "predictions",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_v2_154": {
                "variable": {
                    "value": "losses",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_159": {
                "variable": {
                    "value": "correct_predictions",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.argmax(self.input_y, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_160": {
                "variable": {
                    "value": "self.accuracy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.cast(correct_predictions, 'float')",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "accuracy",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_35": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_35": {
                "name": {
                    "value": "embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_random_seed_36": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "expand_dims_83": {
                "variable": {
                    "value": "self.embedded_eeg_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.input_eeg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Variable_111": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal(filter_shape, stddev=0.1, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_112": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.1, shape=[num_filters])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv2d_113": {
                "variable": {
                    "value": "conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_all",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.get_variable('W', shape=[num_filters_total, num_classes], initializer=tf.contrib.layers.xavier_initializer(seed=seed_value))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1, seed=seed_value), name='W')",
                            "Call"
                        ]
                    ]
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "conv",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_121": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv, b)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool_123": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv, b), name='relu')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, sequence_length - filter_size + 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "pool",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_140": {
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l2_loss_146": {
                "t": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.get_variable('W', shape=[num_filters_total, num_classes], initializer=tf.contrib.layers.xavier_initializer(seed=seed_value))",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1, seed=seed_value), name='W')",
                            "Call"
                        ]
                    ]
                }
            },
            "l2_loss_147": {
                "t": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_classes]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_filters]), name='b')",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_153": {
                "name": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_158": {
                "name": {
                    "value": "accuracy",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "expand_dims_68": {
                "variable": {
                    "value": "self.embedded_et_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.input_et",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "name_scope_91": {
                "name": {
                    "value": "'conv-maxpool-%s' % filter_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "constant_145": {
                "value": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_classes]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_155": {
                "input_tensor": {
                    "value": "losses",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.softmax_cross_entropy_with_logits_v2(logits=self.scores, labels=self.input_y)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_159": {
                "input": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_160": {
                "x": {
                    "value": "correct_predictions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.equal(self.predictions, tf.argmax(self.input_y, 1))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "truncated_normal_111": {
                "shape": {
                    "value": "filter_shape",
                    "type": "List",
                    "possible_values": [
                        [
                            "[filter_size, embedding_size + 2 * rel_pos_embedding_size + pos_tags_embedding_size + et_features_size, 1, num_filters]",
                            "List"
                        ],
                        [
                            "[filter_size, embedding_size + 2 * rel_pos_embedding_size + pos_tags_embedding_size + et_embedding_dimension * et_features_size, 1, num_filters]",
                            "List"
                        ],
                        [
                            "[filter_size, embedding_size + 2 * rel_pos_embedding_size + pos_tags_embedding_size + eeg_features_size, 1, num_filters]",
                            "List"
                        ],
                        [
                            "[filter_size, embedding_size + 2 * rel_pos_embedding_size + pos_tags_embedding_size + et_features_size + eeg_features_size, 1, num_filters]",
                            "List"
                        ],
                        [
                            "[filter_size, embedding_size + 2 * rel_pos_embedding_size + pos_tags_embedding_size, 1, num_filters]",
                            "List"
                        ]
                    ]
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "constant_112": {
                "value": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_filters]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "bias_add_121": {
                "value": {
                    "value": "conv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(self.embedded_all, W, strides=[1, 1, 1, 1], padding='VALID', name='conv')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_classes]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_filters]), name='b')",
                            "Call"
                        ]
                    ]
                }
            },
            "Variable_75": {
                "variable": {
                    "value": "self.et_embedding_dicts[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([et_number_of_bins, et_embedding_dimension], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "'et_embedding_dict_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "embedding_lookup_78": {
                "variable": {
                    "value": "self.embedded_et[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "params": {
                    "value": "self.et_embedding_dicts[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_et[:, :, i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "expand_dims_79": {
                "variable": {
                    "value": "self.embedded_et_expanded[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_et[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "relation-classification/text_rnn.py": {
        "tensorflow": {
            "placeholder_13": {
                "variable": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_14": {
                "variable": {
                    "value": "self.input_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_rel_pos_first",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_15": {
                "variable": {
                    "value": "self.input_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_rel_pos_second",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_16": {
                "variable": {
                    "value": "self.input_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_pos_tags",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_21": {
                "variable": {
                    "value": "self.input_eeg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length, eeg_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_eeg",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_22": {
                "variable": {
                    "value": "self.sequence_lengths",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "sequence_lengths",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_23": {
                "variable": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_24": {
                "variable": {
                    "value": "self.input_dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "input_dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_25": {
                "variable": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_26": {
                "variable": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_29": {
                "variable": {
                    "value": "l2_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BasicLSTMCell_84": {
                "variable": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_units": {
                    "value": "lstm_units",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "BasicLSTMCell_85": {
                "variable": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_units": {
                    "value": "lstm_units",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DropoutWrapper_86": {
                "variable": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cell": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_keep_prob": {
                    "value": "self.input_dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "DropoutWrapper_87": {
                "variable": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cell": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_keep_prob": {
                    "value": "self.input_dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "bidirectional_dynamic_rnn_88": {
                "variable": {
                    "value": "(self.value, self.output_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell_fw": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cell_bw": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.embedded_all",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sequence_length": {
                    "value": "self.sequence_lengths",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dense_91": {
                "variable": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "tf.concat([self.output_state[0][0], self.output_state[0][1], self.output_state[1][0], self.output_state[1][1]], 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "units": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_95": {
                "variable": {
                    "value": "self.probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "probabilities",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_96": {
                "variable": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "predictions",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_18": {
                "variable": {
                    "value": "self.input_et",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length, et_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_et",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_20": {
                "variable": {
                    "value": "self.input_et",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length, et_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_et",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_random_seed_32": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Variable_39": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_42": {
                "variable": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_45": {
                "variable": {
                    "value": "self.rel_pos_first_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([rel_pos_cardinality[0], rel_pos_embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "rel_pos_first_embedding_dict",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_48": {
                "variable": {
                    "value": "self.embedded_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.rel_pos_first_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_rel_pos_first",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_51": {
                "variable": {
                    "value": "self.rel_pos_second_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([rel_pos_cardinality[1], rel_pos_embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "rel_pos_second_embedding_dict",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_54": {
                "variable": {
                    "value": "self.embedded_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.rel_pos_second_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_rel_pos_second",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_57": {
                "variable": {
                    "value": "self.pos_tags_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([pos_tags_cardinality, pos_tags_embedding_size], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "pos_tags_embedding_dict",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_60": {
                "variable": {
                    "value": "self.embedded_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.pos_tags_embedding_dict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_pos_tags",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_79": {
                "variable": {
                    "value": "self.embedded_all",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "feature_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_v2_100": {
                "variable": {
                    "value": "losses",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_104": {
                "variable": {
                    "value": "correct_predictions",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.argmax(self.input_y, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_105": {
                "variable": {
                    "value": "self.accuracy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.cast(correct_predictions, 'float')",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "accuracy",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_35": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_35": {
                "name": {
                    "value": "embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_random_seed_36": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "concat_91": {
                "values": {
                    "value": "[self.output_state[0][0], self.output_state[0][1], self.output_state[1][0], self.output_state[1][1]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_99": {
                "name": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_103": {
                "name": {
                    "value": "accuracy",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_101": {
                "input_tensor": {
                    "value": "losses",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.softmax_cross_entropy_with_logits_v2(logits=self.scores, labels=self.input_y)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_104": {
                "input": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_105": {
                "x": {
                    "value": "correct_predictions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.equal(self.predictions, tf.argmax(self.input_y, 1))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_70": {
                "variable": {
                    "value": "self.et_embedding_dicts[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([et_number_of_bins, et_embedding_dimension], -1.0, 1.0, seed=seed_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "'et_embedding_dict_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "embedding_lookup_73": {
                "variable": {
                    "value": "self.embedded_et[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "params": {
                    "value": "self.et_embedding_dicts[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_et[:, :, i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "relation-classification/train_relext.py": {
        "tensorflow": {
            "set_random_seed_24": {
                "seed": {
                    "value": "seed_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "DEFINE_integer_31": {
                "name": {
                    "value": "embedding_dim",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Dimensionality of character embedding (default: 128)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_string_32": {
                "name": {
                    "value": "filter_sizes",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "2,3,4,5,6,7",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "\"Comma-separated filter sizes (default: '2,3,4,5,6')\"",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_33": {
                "name": {
                    "value": "num_filters",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "192",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Number of filters per filter size (default: 192)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_float_34": {
                "name": {
                    "value": "dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Dropout keep probability (default: 0.6)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_float_35": {
                "name": {
                    "value": "learning_rate",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Learning rate (default: 0.001)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_float_36": {
                "name": {
                    "value": "l2_reg_lambda",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "L2 regularization lambda (default: 0.5)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_37": {
                "name": {
                    "value": "lstm_units",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "600",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Dimensionality of the LSTM (default: 600)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_38": {
                "name": {
                    "value": "ensemble_size",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "20",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Size of the ensemble (default: 20)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_39": {
                "name": {
                    "value": "rel_pos_embedding_size",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "20",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Dimensionality of relative positions embedding (default: 20)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_40": {
                "name": {
                    "value": "pos_tags_embedding_size",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "30",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Dimensionality of POS tags embedding (default: 30)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_41": {
                "name": {
                    "value": "et_embedding_dimension",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "20",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Dimensionality of binned eye-tracking feature embeddings (default: 20)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_44": {
                "name": {
                    "value": "batch_size",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Batch Size (default: 64)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_45": {
                "name": {
                    "value": "num_epochs_rnn",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "200",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Number of training epochs for the RNN (default: 200)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_46": {
                "name": {
                    "value": "num_epochs_cnn",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Number of training epochs for the CNN (default: 10)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_integer_47": {
                "name": {
                    "value": "evaluate_every",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Evaluate model on dev set after this many steps (default: 100)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DEFINE_float_52": {
                "name": {
                    "value": "decay_coefficient",
                    "type": "Constant",
                    "possible_values": []
                },
                "default": {
                    "value": "2.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "help": {
                    "value": "Decay coefficient (default: 2.5)",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_random_seed_190": {
                "seed": {
                    "value": "6789 + number_of_network",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ConfigProto_197": {
                "variable": {
                    "value": "session_conf",
                    "type": "Variable",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "FLAGS.allow_soft_placement",
                    "type": "Attribute",
                    "possible_values": []
                },
                "log_device_placement": {
                    "value": "FLAGS.log_device_placement",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_200": {
                "variable": {
                    "value": "sess1",
                    "type": "Variable",
                    "possible_values": []
                },
                "config": {
                    "value": "session_conf",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=FLAGS.allow_soft_placement, log_device_placement=FLAGS.log_device_placement)",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_201": {
                "variable": {
                    "value": "sess2",
                    "type": "Variable",
                    "possible_values": []
                },
                "config": {
                    "value": "session_conf",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=FLAGS.allow_soft_placement, log_device_placement=FLAGS.log_device_placement)",
                            "Call"
                        ]
                    ]
                }
            },
            "Graph_193": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_random_seed_195": {
                "seed": {
                    "value": "seed_value + number_of_network",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "set_random_seed_205": {
                "seed": {
                    "value": "seed_value + number_of_network",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "global_step_279": {
                "variable": {
                    "value": "current_step_rnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "sess": {
                    "value": "sess1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.Session(config=session_conf)",
                            "Call"
                        ]
                    ]
                },
                "global_step_tensor": {
                    "value": "global_steps[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "global_step_280": {
                "variable": {
                    "value": "current_step_cnn",
                    "type": "Variable",
                    "possible_values": []
                },
                "sess": {
                    "value": "sess2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.Session(config=session_conf)",
                            "Call"
                        ]
                    ]
                },
                "global_step_tensor": {
                    "value": "global_steps[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Variable_232": {
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step_1",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_233": {
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step_2",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_234": {
                "learning_rate": {
                    "value": "cnn.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_initializer_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_241": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "sentiment-analysis/tf_modeling.py": {
        "tensorflow": {
            "argmax_43": {
                "variable": {
                    "value": "actual_values",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "model.data_placeholders['TARGETS']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "true_values",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_45": {
                "variable": {
                    "value": "target_hits",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(model.predictions, actual_values)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_46": {
                "variable": {
                    "value": "model.accuracy",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "target_hits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(model.predictions, actual_values), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "scalar_48": {
                "variable": {
                    "value": "accuracy_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "exact_current_accuracy",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.accuracy",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_82": {
                "variable": {
                    "value": "all_summaries",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[recall_neg_summary, precision_neg_summary, recall_pos_summary, precision_pos_summary, f1_neg_summary, f1_pos_summary, accuracy_summary]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "GPUOptions_265": {
                "variable": {
                    "value": "gpu_options",
                    "type": "Variable",
                    "possible_values": []
                },
                "per_process_gpu_memory_fraction": {
                    "value": "input_config['PER_PROCESS_GPU_FRACTION']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{}",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ConfigProto_266": {
                "variable": {
                    "value": "session_conf",
                    "type": "Variable",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "log_device_placement": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "gpu_options": {
                    "value": "gpu_options",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.GPUOptions(per_process_gpu_memory_fraction=input_config['PER_PROCESS_GPU_FRACTION'])",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_267": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "config": {
                    "value": "session_conf",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ConfigProto(allow_soft_placement=True, log_device_placement=False, gpu_options=gpu_options)",
                            "Call"
                        ]
                    ]
                }
            },
            "Variable_298": {
                "variable": {
                    "value": "global_step",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "Constant",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_299": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "model.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_59": {
                "variable": {
                    "value": "mask_recall_neg",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(model.predictions, neg_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_62": {
                "variable": {
                    "value": "mask_precision_neg",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(actual_values, neg_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_67": {
                "variable": {
                    "value": "mask_recall_pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(model.predictions, pos_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "mask_precision_pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(actual_values, pos_value)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_75": {
                "variable": {
                    "value": "recall_neg_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "recall_neg",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.recall_neg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_76": {
                "variable": {
                    "value": "precision_neg_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "precision_neg",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.precision_neg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_77": {
                "variable": {
                    "value": "f1_neg_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "F1_Score_neg",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.f1_neg",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_78": {
                "variable": {
                    "value": "recall_pos_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "recall_pos",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.recall_pos",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_79": {
                "variable": {
                    "value": "precision_pos_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "precision_pos",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.precision_pos",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_80": {
                "variable": {
                    "value": "f1_pos_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "F1_Score_pos",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "model.f1_pos",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_142": {
                "variable": {
                    "value": "self.data_placeholders[WORD_IDXS]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.max_sentence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_143": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([self.vocab_size, self.we_dim], -1.0, 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_144": {
                "variable": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.data_placeholders['WORD_IDXS']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "placeholder_148": {
                "variable": {
                    "value": "self.data_placeholders[ET]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.max_sentence_length, self.et_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_et",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_163": {
                "variable": {
                    "value": "self.data_placeholders[SEQUENCE_LENGTHS]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "sequence_lengths",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_164": {
                "variable": {
                    "value": "self.data_placeholders[TARGETS]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_166": {
                "variable": {
                    "value": "self.DROPOUT_KEEP_PROB",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_167": {
                "variable": {
                    "value": "self.L2_REG_LAMBDA",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_168": {
                "variable": {
                    "value": "self.L1_REG_LAMBDA",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_169": {
                "variable": {
                    "value": "self.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BasicLSTMCell_191": {
                "variable": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_units": {
                    "value": "self.lstm_units",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BasicLSTMCell_192": {
                "variable": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_units": {
                    "value": "self.lstm_units",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DropoutWrapper_193": {
                "variable": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cell": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_keep_prob": {
                    "value": "self.DROPOUT_KEEP_PROB",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "1234",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DropoutWrapper_194": {
                "variable": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cell": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_keep_prob": {
                    "value": "self.DROPOUT_KEEP_PROB",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "2345",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bidirectional_dynamic_rnn_195": {
                "variable": {
                    "value": "((self.output_fw, self.output_bw), self.output_states)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell_fw": {
                    "value": "self.lstm_fw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "cell_bw": {
                    "value": "self.lstm_bw_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.sentence_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sequence_length": {
                    "value": "self.data_placeholders['SEQUENCE_LENGTHS']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_201": {
                "variable": {
                    "value": "self.lstm_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.output_fw, self.output_bw]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_239": {
                "variable": {
                    "value": "self.probabilities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "probabilities",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_240": {
                "variable": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "predictions",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_242": {
                "variable": {
                    "value": "self.actual_values",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.data_placeholders['TARGETS']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "true_values",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "scalar_253": {
                "variable": {
                    "value": "loss_summary",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                },
                "data": {
                    "value": "self.classification_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_257": {
                "variable": {
                    "value": "self.summary",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[classification_summaries, loss_summary]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "trainable_variables_307": {
                "variable": {
                    "value": "vars_to_optimize",
                    "type": "Variable",
                    "possible_values": []
                },
                "scope": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "set_random_seed_311": {
                "seed": {
                    "value": "111",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "FileWriter_324": {
                "variable": {
                    "value": "train_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "tensorboard_dir + 'train'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "FileWriter_325": {
                "variable": {
                    "value": "test_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "tensorboard_dir + 'test'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "global_step_348": {
                "variable": {
                    "value": "current_step",
                    "type": "Variable",
                    "possible_values": []
                },
                "sess": {
                    "value": "sess",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Session(config=session_conf)",
                            "Call"
                        ],
                        [
                            "prepare_session(input_config)",
                            "Call"
                        ]
                    ]
                },
                "global_step_tensor": {
                    "value": "global_step",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.Variable(0, name='global_step', trainable=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_20": {
                "name": {
                    "value": "Precision_and_Recall",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cast_22": {
                "variable": {
                    "value": "mask_recall",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(predicted, i)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_23": {
                "variable": {
                    "value": "mask_precision",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.equal(actual, i)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_45": {
                "x": {
                    "value": "model.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "actual_values",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.argmax(model.data_placeholders['TARGETS'], 1, name='true_values')",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_58": {
                "name": {
                    "value": "Classification_Metrics",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_153": {
                "variable": {
                    "value": "self.data_placeholders[EEG]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.max_sentence_length, self.eeg_features_size, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_eeg",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_157": {
                "variable": {
                    "value": "self.data_placeholders[EEG]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.max_sentence_length, self.eeg_features_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_eeg",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_183": {
                "variable": {
                    "value": "self.sentence_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "self.sentence_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_206": {
                "variable": {
                    "value": "H_reshape",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.lstm_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, 2 * self.lstm_units]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_228": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.output_states[0][0], self.output_states[0][1], self.output_states[1][0], self.output_states[1][1]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "dense_233": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.input_config['HIDDEN_LAYER_UNITS']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "dense_234": {
                "variable": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dense_237": {
                "variable": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_246": {
                "variable": {
                    "value": "losses",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.data_placeholders['TARGETS']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "trainable_variables_247": {
                "variable": {
                    "value": "vars",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "add_n_248": {
                "variable": {
                    "value": "l2_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[tf.nn.l2_loss(v) for v in vars]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "add_n_249": {
                "variable": {
                    "value": "l1_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[tf.norm(v, ord=1) for v in vars]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "reset_default_graph_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variables_initializer_315": {
                "variable": {
                    "value": "init_new_vars_op",
                    "type": "Variable",
                    "possible_values": []
                },
                "var_list": {
                    "value": "vars_to_optimize + optimizer.variables() + [global_step]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "equal_59": {
                "x": {
                    "value": "model.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "neg_value",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "0",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_mean_60": {
                "input_tensor": {
                    "value": "mask_recall_neg",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(model.predictions, neg_value), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_62": {
                "x": {
                    "value": "actual_values",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.argmax(model.data_placeholders['TARGETS'], 1, name='true_values')",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "neg_value",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "0",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_mean_63": {
                "input_tensor": {
                    "value": "mask_precision_neg",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(actual_values, neg_value), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_67": {
                "x": {
                    "value": "model.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "pos_value",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_mean_68": {
                "input_tensor": {
                    "value": "mask_recall_pos",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(model.predictions, pos_value), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_70": {
                "x": {
                    "value": "actual_values",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.argmax(model.data_placeholders['TARGETS'], 1, name='true_values')",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "pos_value",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "2",
                            "Constant"
                        ]
                    ]
                }
            },
            "reduce_mean_71": {
                "input_tensor": {
                    "value": "mask_precision_pos",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(actual_values, pos_value), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_173": {
                "device_name": {
                    "value": "self.input_config['TF_DEVICE']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "name_scope_173": {
                "name": {
                    "value": "embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "get_variable_213": {
                "variable": {
                    "value": "self.W_s1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "W_s1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[2 * self.lstm_units, d_a_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "initializer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.contrib.layers.xavier_initializer()",
                            "Call"
                        ]
                    ]
                }
            },
            "tanh_214": {
                "variable": {
                    "value": "_H_s1",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(H_reshape, self.W_s1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_215": {
                "variable": {
                    "value": "self.W_s2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "W_s2",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[d_a_size, r_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "initializer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.contrib.layers.xavier_initializer()",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_216": {
                "variable": {
                    "value": "_H_s2",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "_H_s1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.tanh(tf.matmul(H_reshape, self.W_s1))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.W_s2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_217": {
                "variable": {
                    "value": "_H_s2_reshape",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.reshape(_H_s2, [-1, self.max_sentence_length, r_size])",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "softmax_218": {
                "variable": {
                    "value": "self.attention_weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "_H_s2_reshape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.transpose(tf.reshape(_H_s2, [-1, self.max_sentence_length, r_size]), [0, 2, 1])",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "attention",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_222": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.attention_weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.lstm_outputs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_224": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, self.embedding_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "name_scope_245": {
                "name": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "equal_22": {
                "x": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "i",
                    "type": "Name",
                    "possible_values": [
                        [
                            "range(n_classes)",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_23": {
                "x": {
                    "value": "actual",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "i",
                    "type": "Name",
                    "possible_values": [
                        [
                            "range(n_classes)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_24": {
                "input_tensor": {
                    "value": "mask_recall",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(predicted, i), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_25": {
                "input_tensor": {
                    "value": "mask_precision",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.equal(actual, i), tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_207": {
                "name": {
                    "value": "self-attention",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_221": {
                "name": {
                    "value": "sentence-embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "global_variables_initializer_318": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "local_variables_initializer_319": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_214": {
                "a": {
                    "value": "H_reshape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(self.lstm_outputs, [-1, 2 * self.lstm_units])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.W_s1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_217": {
                "tensor": {
                    "value": "_H_s2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.matmul(_H_s1, self.W_s2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, self.max_sentence_length, r_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "l2_loss_248": {
                "t": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "norm_249": {
                "tensor": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": []
                },
                "ord": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_250": {
                "input_tensor": {
                    "value": "losses",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.softmax_cross_entropy_with_logits(logits=self.scores, labels=self.data_placeholders['TARGETS'])",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_24": {
                "x": {
                    "value": "tf.equal(predicted, actual)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_25": {
                "x": {
                    "value": "tf.equal(predicted, actual)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "equal_24": {
                "x": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "actual",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "equal_25": {
                "x": {
                    "value": "predicted",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "actual",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}