{
    "app.py": {
        "tensorflow": {
            "enable_eager_execution_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Input_51": {
                "variable": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(512, 512, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_64": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(512, 512, 3))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(24, (3, 3), strides=(1, 1), activation='tanh', padding='same')(int_con3)",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_98": {
                "variable": {
                    "value": "enhance_image",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "enhance_image[0, :, :, :] * 255",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2D_52": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_53": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_54": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_55": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_57": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_58": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_59": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_60": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_61": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_62": {
                "filters": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "pow_90": {
                "x": {
                    "value": "original_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(data_lowlight_path)",
                            "Call"
                        ],
                        [
                            "original_img.resize(required_size, Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "np.asarray(original_img) / 255.0",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_91": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_92": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_93": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_94": {
                "x": {
                    "value": "enhanced_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_95": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_96": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_97": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/loss.py": {
        "tensorflow": {
            "reduce_mean_11": {
                "variable": {
                    "value": "mean_rgb",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pow_13": {
                "variable": {
                    "value": "Drg",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "mr - mg",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_14": {
                "variable": {
                    "value": "Drb",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "mr - mb",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_15": {
                "variable": {
                    "value": "Dgb",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "mb - mg",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_16": {
                "x": {
                    "value": "Drb",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.pow(mr - mb, 2)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_22": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "reduce_mean_25": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.pow(mean - mean_val, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_34": {
                "variable": {
                    "value": "h_tv",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.pow(x[:, 1:, :, :] - x[:, :h_x - 1, :, :], 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_35": {
                "variable": {
                    "value": "w_tv",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.pow(x[:, :, 1:, :] - x[:, :, :w_x - 1, :], 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_64": {
                "variable": {
                    "value": "org_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "org",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "reduce_mean_65": {
                "variable": {
                    "value": "enhance_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "enhance",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pow_80": {
                "variable": {
                    "value": "D_left",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "D_org_left - D_enhance_letf",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_81": {
                "variable": {
                    "value": "D_right",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "D_org_right - D_enhance_right",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_82": {
                "variable": {
                    "value": "D_up",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "D_org_up - D_enhance_up",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_83": {
                "variable": {
                    "value": "D_down",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "D_org_down - D_enhance_down",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AveragePooling2D_23": {
                "pool_size": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_25": {
                "x": {
                    "value": "mean - mean_val",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_34": {
                "x": {
                    "value": "x[:, 1:, :, :] - x[:, :h_x - 1, :, :]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_35": {
                "x": {
                    "value": "x[:, :, 1:, :] - x[:, :, :w_x - 1, :]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AveragePooling2D_67": {
                "pool_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AveragePooling2D_68": {
                "pool_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_70": {
                "kernel_initializer": {
                    "value": "init_f_l",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_71": {
                "kernel_initializer": {
                    "value": "init_f_r",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_72": {
                "kernel_initializer": {
                    "value": "init_f_u",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_73": {
                "kernel_initializer": {
                    "value": "init_f_r",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_75": {
                "kernel_initializer": {
                    "value": "init_f_l",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_76": {
                "kernel_initializer": {
                    "value": "init_f_r",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_77": {
                "kernel_initializer": {
                    "value": "init_f_u",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2D_78": {
                "kernel_initializer": {
                    "value": "init_f_d",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "shape_29": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_30": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_31": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_32": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_33": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(x, 3, keepdims=True)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/model.py": {
        "tensorflow": {
            "Input_10": {
                "variable": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Model_34": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "[enhanced_image_1, enhance_image, x_r]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv2D_41": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_42": {
                "variable": {
                    "value": "self.conv_32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_43": {
                "variable": {
                    "value": "self.conv_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_44": {
                "variable": {
                    "value": "self.cat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_45": {
                "variable": {
                    "value": "self.conv_last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_11": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_12": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_13": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_14": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_16": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_17": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_18": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_19": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_20": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_21": {
                "filters": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "pow_25": {
                "x": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_26": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_27": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_28": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_29": {
                "x": {
                    "value": "enhanced_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_30": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_31": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_32": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_62": {
                "x": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_63": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_64": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_65": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_66": {
                "x": {
                    "value": "enhanced_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_67": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_68": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_69": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "input_img + r1 * (K.pow(input_img, 2) - input_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "tensorflow": {
            "enable_eager_execution_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Input_25": {
                "variable": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(512, 512, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_38": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(512, 512, 3))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(24, (3, 3), strides=(1, 1), activation='tanh', padding='same')(int_con3)",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_69": {
                "variable": {
                    "value": "enhance_image",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "enhance_image[0, :, :, :] * 255",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2D_26": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_27": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_28": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_29": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_31": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_32": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_33": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_34": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_35": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_36": {
                "filters": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "pow_61": {
                "x": {
                    "value": "original_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(data_lowlight_path)",
                            "Call"
                        ],
                        [
                            "original_img.resize((512, 512), Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "np.asarray(original_img) / 255.0",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_62": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_63": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_64": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_65": {
                "x": {
                    "value": "enhanced_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_66": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_67": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_68": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "tensorflow": {
            "Adam_63": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Input_65": {
                "variable": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(512, 512, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Model_78": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=(512, 512, 3))",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_r",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Conv2D(24, (3, 3), strides=(1, 1), activation='tanh', padding='same')(int_con3)",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_53": {
                "variable": {
                    "value": "enhance_image",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "enhance_image[0, :, :, :] * 255",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "np.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2D_66": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_67": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_68": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2D_69": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_71": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_72": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_73": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_74": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_75": {
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv2D_76": {
                "filters": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strides": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "tanh",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_97": {
                "variable": {
                    "value": "loss_spa",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "L_spa(enhance_image, img_lowlight)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "pow_45": {
                "x": {
                    "value": "original_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(data_lowlight_path)",
                            "Call"
                        ],
                        [
                            "original_img.resize((512, 512), Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "np.asarray(original_img) / 255.0",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_46": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_47": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_48": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_49": {
                "x": {
                    "value": "enhanced_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r4 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_50": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_51": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_52": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_98": {
                "input_tensor": {
                    "value": "L_color(enhance_image)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_99": {
                "input_tensor": {
                    "value": "L_exp(enhance_image, mean_val=0.6)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pow_87": {
                "x": {
                    "value": "img_lowlight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Image.open(data_lowlight_path)",
                            "Call"
                        ],
                        [
                            "img_lowlight.resize((512, 512), Image.ANTIALIAS)",
                            "Call"
                        ],
                        [
                            "np.asarray(img_lowlight) / 255.0",
                            "BinOp"
                        ],
                        [
                            "np.expand_dims(img_lowlight, 0)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_88": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_89": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_90": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_91": {
                "x": {
                    "value": "enhanced_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + r4 * (K.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r4 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_92": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_93": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pow_94": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "original_img + r1 * (K.pow(original_img, 2) - original_img)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (K.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "img_lowlight + r1 * (tf.pow(img_lowlight, 2) - img_lowlight)",
                            "BinOp"
                        ],
                        [
                            "x + r2 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r3 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "enhanced_image_1 + r5 * (tf.pow(enhanced_image_1, 2) - enhanced_image_1)",
                            "BinOp"
                        ],
                        [
                            "x + r6 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ],
                        [
                            "x + r7 * (tf.pow(x, 2) - x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}