{
    "source/loader.py": {
        "torch": {
            "DataLoader_62": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "pin_memory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ]
                    ]
                }
            },
            "Tensor_69": {
                "variable": {
                    "value": "mn",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_70": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sqrt_87": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "st / count",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_132": {
                "variable": {
                    "value": "train_sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "train_idx",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_133": {
                "variable": {
                    "value": "valid_sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "valid_idx",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_136": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(train_idx)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "pin_memory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ]
                    ]
                }
            },
            "DataLoader_143": {
                "variable": {
                    "value": "valid_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(train_dir, valid_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(valid_dir, valid_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "sampler": {
                    "value": "valid_sampler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(valid_idx)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "pin_memory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ]
                    ]
                }
            },
            "DataLoader_180": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(train_dir, train_transform)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "pin_memory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ]
                    ]
                }
            },
            "DataLoader_188": {
                "variable": {
                    "value": "valid_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(train_dir, valid_transform)",
                            "Call"
                        ],
                        [
                            "datasets.ImageFolder(valid_dir, valid_transform)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "pin_memory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ]
                    ]
                }
            },
            "DataLoader_219": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "datasets.ImageFolder(test_dir, valid_transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ],
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "pin_memory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ],
                        [
                            "True if torch.cuda.is_available() else False",
                            "IfExp"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ],
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "load_233": {
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda:0' if torch.cuda.is_available() else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "is_available_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_114": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_177": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_212": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_232": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_82": {
                "input": {
                    "value": "ch0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input[0][0] - mn[0]",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "ch0",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input[0][0] - mn[0]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_83": {
                "input": {
                    "value": "ch1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input[0][1] - mn[1]",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "ch1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input[0][1] - mn[1]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_84": {
                "input": {
                    "value": "ch2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input[0][2] - mn[2]",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "ch2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input[0][2] - mn[2]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "source/models.py": {
        "torch": {
            "Sequential_40": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "*args": {
                    "value": "nn.Linear(512 * 7 * 7, 512)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "conv2d",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "v",
                            "variable"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config",
                            "variable"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "in_features": {
                    "value": "512 * 7 * 7",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_53": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_available_81": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_22": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config",
                            "variable"
                        ]
                    ]
                }
            },
            "ReLU_32": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "source/worker.py": {
        "torch": {
            "is_available_45": {
                "variable": {
                    "value": "cuda_exists",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_109": {
                "variable": {
                    "value": "cuda_exists",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_235": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_236": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ]
                    ]
                },
                "momentum": {
                    "value": "momentum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.9",
                            "Method Argument"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0001",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_296": {
                "variable": {
                    "value": "conf_matrix",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "ncls",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.num_classes",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "ncls",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.num_classes",
                            "Attribute"
                        ]
                    ]
                }
            },
            "is_available_224": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_225": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_228": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_170": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_282": {
                "obj": {
                    "value": "save_dict",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'epoch': epoch + 1, 'arch': model.name, 'best_acc1': best_acc1, 'state_dict': model.state_dict(), 'optimizer': optimizer.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "checkpoint.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_292": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_302": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_311": {
                "variable": {
                    "value": "(_, preds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(input)",
                            "Call"
                        ],
                        [
                            "model(input)",
                            "Call"
                        ],
                        [
                            "model(input)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}