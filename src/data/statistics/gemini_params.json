{
    "src/gemini/datasets/dataset_freesolv/get_features.py": {
        "sklearn": {
            "train_test_split_108": {
                "variable": {
                    "value": "(train_index, test_index)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "np.arange(features.shape[0])",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KFold_115": {
                "variable": {
                    "value": "kf",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientBoostingRegressor_120": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "r2_score_123": {
                "y_true": {
                    "value": "test_targets",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "pred_targets",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model.predict(test_features)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/gemini/metrics/metrics.py": {
        "sklearn": {
            "r2_score_16": {
                "y_true": {
                    "value": "true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mean_absolute_error_24": {
                "y_true": {
                    "value": "true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mean_squared_error_20": {
                "y_true": {
                    "value": "true",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/base.py": {
        "tensorflow": {
            "Graph_56": {
                "variable": {
                    "value": "self.full_graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_218": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/emulators/emulator.py": {
        "tensorflow": {
            "Graph_36": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_48": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/models/bnn.py": {
        "tensorflow": {
            "Session_147": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_148": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_42": {
                "variable": {
                    "value": "self.tf_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.features_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_43": {
                "variable": {
                    "value": "self.tf_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.targets_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.neural_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softplus_50": {
                "variable": {
                    "value": "self.scale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.Variable(tf.ones(self.loc.get_shape()))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdamOptimizer_58": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "group_60": {
                "variable": {
                    "value": "self.init_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "tf.global_variables_initializer()",
                    "type": "Call",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "tf.local_variables_initializer()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_61": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_90": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_50": {
                "initial_value": {
                    "value": "tf.ones(self.loc.get_shape())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_56": {
                "input_tensor": {
                    "value": "self.y_pred.log_prob(self.tf_y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "global_variables_initializer_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "local_variables_initializer_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_50": {
                "shape": {
                    "value": "self.loc.get_shape()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_57": {
                "input_tensor": {
                    "value": "self.neural_net.losses",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/models/gemini.py": {
        "tensorflow": {
            "placeholder_49": {
                "variable": {
                    "value": "self.tf_x_fast",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.features_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_50": {
                "variable": {
                    "value": "self.tf_x_slow",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.features_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_51": {
                "variable": {
                    "value": "self.tf_y_fast",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.targets_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_52": {
                "variable": {
                    "value": "self.tf_y_slow",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.targets_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "split_102": {
                "variable": {
                    "value": "(self.loc_fast, self.scale_fast)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "pred_fast",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.nn_latent(self.tf_x_fast)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_113": {
                "variable": {
                    "value": "(self.loc_slow, self.scale_slow)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "pred_slow",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.nn_latent(self.tf_x_slow)",
                            "Call"
                        ],
                        [
                            "self.nn_latent(features_slow_perturbed) + self.nn_targets_slow(self.nn_latent(features_slow_perturbed))",
                            "BinOp"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_mean_124": {
                "variable": {
                    "value": "self.reg_latent",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.nn_latent.losses",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_131": {
                "variable": {
                    "value": "self.optim_both",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "group_134": {
                "variable": {
                    "value": "self.init_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "tf.global_variables_initializer()",
                    "type": "Call",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "tf.local_variables_initializer()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_135": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "self.nn_feature_slow",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "layers",
                    "type": "List",
                    "possible_values": [
                        [
                            "[LAYERS['lambda'](lambda y: y)]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ],
                        [
                            "[LAYERS['lambda'](lambda y: y)]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ]
                    ]
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.nn_latent",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "layers",
                    "type": "List",
                    "possible_values": [
                        [
                            "[LAYERS['lambda'](lambda y: y)]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ],
                        [
                            "[LAYERS['lambda'](lambda y: y)]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ]
                    ]
                }
            },
            "Sequential_98": {
                "variable": {
                    "value": "self.nn_targets_slow",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "layers",
                    "type": "List",
                    "possible_values": [
                        [
                            "[LAYERS['lambda'](lambda y: y)]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ],
                        [
                            "[LAYERS['lambda'](lambda y: y)]",
                            "List"
                        ],
                        [
                            "[tf.keras.layers.BatchNormalization()]",
                            "List"
                        ]
                    ]
                }
            },
            "Saver_199": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_collection_332": {
                "variable": {
                    "value": "vars",
                    "type": "Variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_54": {
                "name": {
                    "value": "feature_slow",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_73": {
                "name": {
                    "value": "latent",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_81": {
                "name": {
                    "value": "target_slow",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_103": {
                "x": {
                    "value": "self.scale_fast",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sigmoid_114": {
                "x": {
                    "value": "self.scale_slow",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_121": {
                "input_tensor": {
                    "value": "self.y_pred_fast.log_prob(self.tf_y_fast)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_122": {
                "input_tensor": {
                    "value": "self.y_pred_slow.log_prob(self.tf_y_slow)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_125": {
                "input_tensor": {
                    "value": "self.nn_targets_slow.losses",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "global_variables_initializer_134": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "local_variables_initializer_134": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_65": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNormalization_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomNormal_67": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_69": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_94": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_96": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_61": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_63": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_88": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "RandomNormal_90": {
                "stddev": {
                    "value": "1e-05",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/models/network_model.py": {
        "tensorflow": {
            "Session_78": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_79": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_built_with_cuda_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "list_physical_devices_55": {
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "list_physical_devices_54": {
                "device_type": {
                    "value": "GPU",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/models/nn.py": {
        "tensorflow": {
            "placeholder_41": {
                "variable": {
                    "value": "self.tf_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.features_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_42": {
                "variable": {
                    "value": "self.tf_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.targets_shape]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Sequential_47": {
                "variable": {
                    "value": "self.neural_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "split_49": {
                "variable": {
                    "value": "(self.loc, self.scale)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.neural_net(self.tf_x)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_58": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "group_60": {
                "variable": {
                    "value": "self.init_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "tf.global_variables_initializer()",
                    "type": "Call",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "tf.local_variables_initializer()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_61": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "graph": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_92": {
                "variable": {
                    "value": "self.saver",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_50": {
                "x": {
                    "value": "self.scale",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_mean_56": {
                "input_tensor": {
                    "value": "self.y_pred.log_prob(self.tf_y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "global_variables_initializer_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "local_variables_initializer_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_57": {
                "input_tensor": {
                    "value": "self.neural_net.losses",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/gemini/opt.py": {
        "tensorflow": {}
    },
    "src/gemini/utils/tf_utils.py": {
        "tensorflow": {
            "leaky_relu_9": {
                "features": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "alpha": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_11": {
                "features": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_12": {
                "x": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_13": {
                "logits": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softplus_14": {
                "features": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softsign_15": {
                "features": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}